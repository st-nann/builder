(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("vue"));
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["builder"] = factory(require("vue"));
	else
		root["builder"] = factory(root["Vue"]);
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fae3");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "0538":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");
var isObject = __webpack_require__("861d");

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "0554":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("96a4");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("17611838", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('forEach');
var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "1de5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== 'string') {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, '\\n'), "\"");
  }

  return url;
};

/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "24fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "25f0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("6eeb");
var anObject = __webpack_require__("825a");
var fails = __webpack_require__("d039");
var flags = __webpack_require__("ad6d");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "2bc8":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/materialdesignicons-webfont.3d1f8fa2.eot";

/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2ef0":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.20';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba"), __webpack_require__("62e4")(module)))

/***/ }),

/***/ "2f62":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export Store */
/* unused harmony export createLogger */
/* unused harmony export createNamespacedHelpers */
/* unused harmony export install */
/* unused harmony export mapActions */
/* unused harmony export mapGetters */
/* unused harmony export mapMutations */
/* unused harmony export mapState */
/*!
 * vuex v3.6.0
 * (c) 2020 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((false)) {}

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((false)) {}
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((false)) {}

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((false)) {}
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((false)) {}

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((false)) {}
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((false)) {}
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    false
  ) {}
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((false)) {}
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((false)) {}
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((false)) {}
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((false)) {}
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((false)) {}
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((false)) {}

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((false)) {}

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((false)) {}

  return this._modules.isRegistered(path)
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("production" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((false)) {}
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (false) {}
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (false) {}
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((false)) {}
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((false)) {}
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((false)) {}

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((false)) {}
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (false) {}
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (false) {}
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (false) {}
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (false) {}
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (false) {}
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (false) {}
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index = {
  Store: Store,
  install: install,
  version: '3.6.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

/* harmony default export */ __webpack_exports__["a"] = (index);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "3410":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toObject = __webpack_require__("7b0b");
var nativeGetPrototypeOf = __webpack_require__("e163");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "499e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ addStylesClient; });

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "4ae1":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var getBuiltIn = __webpack_require__("d066");
var aFunction = __webpack_require__("1c0b");
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var create = __webpack_require__("7c73");
var bind = __webpack_require__("0538");
var fails = __webpack_require__("d039");

var nativeConstruct = getBuiltIn('Reflect', 'construct');

// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5363":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("e7ba");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("96aec97a", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.8.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "5c0b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0554");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */


/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "62e4":
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var shared = __webpack_require__("c6cd");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;

/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "96a4":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".component-display{display:flex}.component-direction-row{flex-direction:row}.component-direction-column{flex-direction:column}.component-justify-start{justify-content:start}.component-justify-center{justify-content:center}.component-justify-end{justify-content:end}.component-align-start{justify-content:start}.component-align-center{justify-content:center}.component-align-end{justify-content:end}.component-flex-grow{flex-grow:var(--flex-grow)}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f08":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/materialdesignicons-webfont.3e722fd5.ttf";

/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae40":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};


/***/ }),

/***/ "bade":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/materialdesignicons-webfont.fec1b66a.woff";

/***/ }),

/***/ "be95":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/materialdesignicons-webfont.3d1f8fa2.eot";

/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e7ba":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
var ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__("1de5");
var ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__("be95");
var ___CSS_LOADER_URL_IMPORT_1___ = __webpack_require__("2bc8");
var ___CSS_LOADER_URL_IMPORT_2___ = __webpack_require__("ecd6");
var ___CSS_LOADER_URL_IMPORT_3___ = __webpack_require__("bade");
var ___CSS_LOADER_URL_IMPORT_4___ = __webpack_require__("9f08");
exports = ___CSS_LOADER_API_IMPORT___(false);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___, { hash: "?#iefix&v=5.8.55" });
var ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);
// Module
exports.push([module.i, "@font-face{font-family:Material Design Icons;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"truetype\");font-weight:400;font-style:normal}.mdi-set,.mdi:before{display:inline-block;font:normal normal normal 24px/1 Material Design Icons;font-size:inherit;text-rendering:auto;line-height:inherit;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.mdi-ab-testing:before{content:\"\\F01C9\"}.mdi-abjad-arabic:before{content:\"\\F1328\"}.mdi-abjad-hebrew:before{content:\"\\F1329\"}.mdi-abugida-devanagari:before{content:\"\\F132A\"}.mdi-abugida-thai:before{content:\"\\F132B\"}.mdi-access-point:before{content:\"\\F0003\"}.mdi-access-point-check:before{content:\"\\F1538\"}.mdi-access-point-minus:before{content:\"\\F1539\"}.mdi-access-point-network:before{content:\"\\F0002\"}.mdi-access-point-network-off:before{content:\"\\F0BE1\"}.mdi-access-point-off:before{content:\"\\F1511\"}.mdi-access-point-plus:before{content:\"\\F153A\"}.mdi-access-point-remove:before{content:\"\\F153B\"}.mdi-account:before{content:\"\\F0004\"}.mdi-account-alert:before{content:\"\\F0005\"}.mdi-account-alert-outline:before{content:\"\\F0B50\"}.mdi-account-arrow-left:before{content:\"\\F0B51\"}.mdi-account-arrow-left-outline:before{content:\"\\F0B52\"}.mdi-account-arrow-right:before{content:\"\\F0B53\"}.mdi-account-arrow-right-outline:before{content:\"\\F0B54\"}.mdi-account-box:before{content:\"\\F0006\"}.mdi-account-box-multiple:before{content:\"\\F0934\"}.mdi-account-box-multiple-outline:before{content:\"\\F100A\"}.mdi-account-box-outline:before{content:\"\\F0007\"}.mdi-account-cancel:before{content:\"\\F12DF\"}.mdi-account-cancel-outline:before{content:\"\\F12E0\"}.mdi-account-cash:before{content:\"\\F1097\"}.mdi-account-cash-outline:before{content:\"\\F1098\"}.mdi-account-check:before{content:\"\\F0008\"}.mdi-account-check-outline:before{content:\"\\F0BE2\"}.mdi-account-child:before{content:\"\\F0A89\"}.mdi-account-child-circle:before{content:\"\\F0A8A\"}.mdi-account-child-outline:before{content:\"\\F10C8\"}.mdi-account-circle:before{content:\"\\F0009\"}.mdi-account-circle-outline:before{content:\"\\F0B55\"}.mdi-account-clock:before{content:\"\\F0B56\"}.mdi-account-clock-outline:before{content:\"\\F0B57\"}.mdi-account-cog:before{content:\"\\F1370\"}.mdi-account-cog-outline:before{content:\"\\F1371\"}.mdi-account-convert:before{content:\"\\F000A\"}.mdi-account-convert-outline:before{content:\"\\F1301\"}.mdi-account-cowboy-hat:before{content:\"\\F0E9B\"}.mdi-account-details:before{content:\"\\F0631\"}.mdi-account-details-outline:before{content:\"\\F1372\"}.mdi-account-edit:before{content:\"\\F06BC\"}.mdi-account-edit-outline:before{content:\"\\F0FFB\"}.mdi-account-group:before{content:\"\\F0849\"}.mdi-account-group-outline:before{content:\"\\F0B58\"}.mdi-account-hard-hat:before{content:\"\\F05B5\"}.mdi-account-heart:before{content:\"\\F0899\"}.mdi-account-heart-outline:before{content:\"\\F0BE3\"}.mdi-account-key:before{content:\"\\F000B\"}.mdi-account-key-outline:before{content:\"\\F0BE4\"}.mdi-account-lock:before{content:\"\\F115E\"}.mdi-account-lock-outline:before{content:\"\\F115F\"}.mdi-account-minus:before{content:\"\\F000D\"}.mdi-account-minus-outline:before{content:\"\\F0AEC\"}.mdi-account-multiple:before{content:\"\\F000E\"}.mdi-account-multiple-check:before{content:\"\\F08C5\"}.mdi-account-multiple-check-outline:before{content:\"\\F11FE\"}.mdi-account-multiple-minus:before{content:\"\\F05D3\"}.mdi-account-multiple-minus-outline:before{content:\"\\F0BE5\"}.mdi-account-multiple-outline:before{content:\"\\F000F\"}.mdi-account-multiple-plus:before{content:\"\\F0010\"}.mdi-account-multiple-plus-outline:before{content:\"\\F0800\"}.mdi-account-multiple-remove:before{content:\"\\F120A\"}.mdi-account-multiple-remove-outline:before{content:\"\\F120B\"}.mdi-account-music:before{content:\"\\F0803\"}.mdi-account-music-outline:before{content:\"\\F0CE9\"}.mdi-account-network:before{content:\"\\F0011\"}.mdi-account-network-outline:before{content:\"\\F0BE6\"}.mdi-account-off:before{content:\"\\F0012\"}.mdi-account-off-outline:before{content:\"\\F0BE7\"}.mdi-account-outline:before{content:\"\\F0013\"}.mdi-account-plus:before{content:\"\\F0014\"}.mdi-account-plus-outline:before{content:\"\\F0801\"}.mdi-account-question:before{content:\"\\F0B59\"}.mdi-account-question-outline:before{content:\"\\F0B5A\"}.mdi-account-reactivate:before{content:\"\\F152B\"}.mdi-account-reactivate-outline:before{content:\"\\F152C\"}.mdi-account-remove:before{content:\"\\F0015\"}.mdi-account-remove-outline:before{content:\"\\F0AED\"}.mdi-account-search:before{content:\"\\F0016\"}.mdi-account-search-outline:before{content:\"\\F0935\"}.mdi-account-settings:before{content:\"\\F0630\"}.mdi-account-settings-outline:before{content:\"\\F10C9\"}.mdi-account-star:before{content:\"\\F0017\"}.mdi-account-star-outline:before{content:\"\\F0BE8\"}.mdi-account-supervisor:before{content:\"\\F0A8B\"}.mdi-account-supervisor-circle:before{content:\"\\F0A8C\"}.mdi-account-supervisor-circle-outline:before{content:\"\\F14EC\"}.mdi-account-supervisor-outline:before{content:\"\\F112D\"}.mdi-account-switch:before{content:\"\\F0019\"}.mdi-account-switch-outline:before{content:\"\\F04CB\"}.mdi-account-tie:before{content:\"\\F0CE3\"}.mdi-account-tie-outline:before{content:\"\\F10CA\"}.mdi-account-tie-voice:before{content:\"\\F1308\"}.mdi-account-tie-voice-off:before{content:\"\\F130A\"}.mdi-account-tie-voice-off-outline:before{content:\"\\F130B\"}.mdi-account-tie-voice-outline:before{content:\"\\F1309\"}.mdi-account-voice:before{content:\"\\F05CB\"}.mdi-adjust:before{content:\"\\F001A\"}.mdi-adobe:before{content:\"\\F0936\"}.mdi-adobe-acrobat:before{content:\"\\F0F9D\"}.mdi-air-conditioner:before{content:\"\\F001B\"}.mdi-air-filter:before{content:\"\\F0D43\"}.mdi-air-horn:before{content:\"\\F0DAC\"}.mdi-air-humidifier:before{content:\"\\F1099\"}.mdi-air-humidifier-off:before{content:\"\\F1466\"}.mdi-air-purifier:before{content:\"\\F0D44\"}.mdi-airbag:before{content:\"\\F0BE9\"}.mdi-airballoon:before{content:\"\\F001C\"}.mdi-airballoon-outline:before{content:\"\\F100B\"}.mdi-airplane:before{content:\"\\F001D\"}.mdi-airplane-landing:before{content:\"\\F05D4\"}.mdi-airplane-off:before{content:\"\\F001E\"}.mdi-airplane-takeoff:before{content:\"\\F05D5\"}.mdi-airport:before{content:\"\\F084B\"}.mdi-alarm:before{content:\"\\F0020\"}.mdi-alarm-bell:before{content:\"\\F078E\"}.mdi-alarm-check:before{content:\"\\F0021\"}.mdi-alarm-light:before{content:\"\\F078F\"}.mdi-alarm-light-outline:before{content:\"\\F0BEA\"}.mdi-alarm-multiple:before{content:\"\\F0022\"}.mdi-alarm-note:before{content:\"\\F0E71\"}.mdi-alarm-note-off:before{content:\"\\F0E72\"}.mdi-alarm-off:before{content:\"\\F0023\"}.mdi-alarm-panel:before{content:\"\\F15C4\"}.mdi-alarm-panel-outline:before{content:\"\\F15C5\"}.mdi-alarm-plus:before{content:\"\\F0024\"}.mdi-alarm-snooze:before{content:\"\\F068E\"}.mdi-album:before{content:\"\\F0025\"}.mdi-alert:before{content:\"\\F0026\"}.mdi-alert-box:before{content:\"\\F0027\"}.mdi-alert-box-outline:before{content:\"\\F0CE4\"}.mdi-alert-circle:before{content:\"\\F0028\"}.mdi-alert-circle-check:before{content:\"\\F11ED\"}.mdi-alert-circle-check-outline:before{content:\"\\F11EE\"}.mdi-alert-circle-outline:before{content:\"\\F05D6\"}.mdi-alert-decagram:before{content:\"\\F06BD\"}.mdi-alert-decagram-outline:before{content:\"\\F0CE5\"}.mdi-alert-minus:before{content:\"\\F14BB\"}.mdi-alert-minus-outline:before{content:\"\\F14BE\"}.mdi-alert-octagon:before{content:\"\\F0029\"}.mdi-alert-octagon-outline:before{content:\"\\F0CE6\"}.mdi-alert-octagram:before{content:\"\\F0767\"}.mdi-alert-octagram-outline:before{content:\"\\F0CE7\"}.mdi-alert-outline:before{content:\"\\F002A\"}.mdi-alert-plus:before{content:\"\\F14BA\"}.mdi-alert-plus-outline:before{content:\"\\F14BD\"}.mdi-alert-remove:before{content:\"\\F14BC\"}.mdi-alert-remove-outline:before{content:\"\\F14BF\"}.mdi-alert-rhombus:before{content:\"\\F11CE\"}.mdi-alert-rhombus-outline:before{content:\"\\F11CF\"}.mdi-alien:before{content:\"\\F089A\"}.mdi-alien-outline:before{content:\"\\F10CB\"}.mdi-align-horizontal-center:before{content:\"\\F11C3\"}.mdi-align-horizontal-left:before{content:\"\\F11C2\"}.mdi-align-horizontal-right:before{content:\"\\F11C4\"}.mdi-align-vertical-bottom:before{content:\"\\F11C5\"}.mdi-align-vertical-center:before{content:\"\\F11C6\"}.mdi-align-vertical-top:before{content:\"\\F11C7\"}.mdi-all-inclusive:before{content:\"\\F06BE\"}.mdi-allergy:before{content:\"\\F1258\"}.mdi-alpha:before{content:\"\\F002B\"}.mdi-alpha-a:before{content:\"\\F0AEE\"}.mdi-alpha-a-box:before{content:\"\\F0B08\"}.mdi-alpha-a-box-outline:before{content:\"\\F0BEB\"}.mdi-alpha-a-circle:before{content:\"\\F0BEC\"}.mdi-alpha-a-circle-outline:before{content:\"\\F0BED\"}.mdi-alpha-b:before{content:\"\\F0AEF\"}.mdi-alpha-b-box:before{content:\"\\F0B09\"}.mdi-alpha-b-box-outline:before{content:\"\\F0BEE\"}.mdi-alpha-b-circle:before{content:\"\\F0BEF\"}.mdi-alpha-b-circle-outline:before{content:\"\\F0BF0\"}.mdi-alpha-c:before{content:\"\\F0AF0\"}.mdi-alpha-c-box:before{content:\"\\F0B0A\"}.mdi-alpha-c-box-outline:before{content:\"\\F0BF1\"}.mdi-alpha-c-circle:before{content:\"\\F0BF2\"}.mdi-alpha-c-circle-outline:before{content:\"\\F0BF3\"}.mdi-alpha-d:before{content:\"\\F0AF1\"}.mdi-alpha-d-box:before{content:\"\\F0B0B\"}.mdi-alpha-d-box-outline:before{content:\"\\F0BF4\"}.mdi-alpha-d-circle:before{content:\"\\F0BF5\"}.mdi-alpha-d-circle-outline:before{content:\"\\F0BF6\"}.mdi-alpha-e:before{content:\"\\F0AF2\"}.mdi-alpha-e-box:before{content:\"\\F0B0C\"}.mdi-alpha-e-box-outline:before{content:\"\\F0BF7\"}.mdi-alpha-e-circle:before{content:\"\\F0BF8\"}.mdi-alpha-e-circle-outline:before{content:\"\\F0BF9\"}.mdi-alpha-f:before{content:\"\\F0AF3\"}.mdi-alpha-f-box:before{content:\"\\F0B0D\"}.mdi-alpha-f-box-outline:before{content:\"\\F0BFA\"}.mdi-alpha-f-circle:before{content:\"\\F0BFB\"}.mdi-alpha-f-circle-outline:before{content:\"\\F0BFC\"}.mdi-alpha-g:before{content:\"\\F0AF4\"}.mdi-alpha-g-box:before{content:\"\\F0B0E\"}.mdi-alpha-g-box-outline:before{content:\"\\F0BFD\"}.mdi-alpha-g-circle:before{content:\"\\F0BFE\"}.mdi-alpha-g-circle-outline:before{content:\"\\F0BFF\"}.mdi-alpha-h:before{content:\"\\F0AF5\"}.mdi-alpha-h-box:before{content:\"\\F0B0F\"}.mdi-alpha-h-box-outline:before{content:\"\\F0C00\"}.mdi-alpha-h-circle:before{content:\"\\F0C01\"}.mdi-alpha-h-circle-outline:before{content:\"\\F0C02\"}.mdi-alpha-i:before{content:\"\\F0AF6\"}.mdi-alpha-i-box:before{content:\"\\F0B10\"}.mdi-alpha-i-box-outline:before{content:\"\\F0C03\"}.mdi-alpha-i-circle:before{content:\"\\F0C04\"}.mdi-alpha-i-circle-outline:before{content:\"\\F0C05\"}.mdi-alpha-j:before{content:\"\\F0AF7\"}.mdi-alpha-j-box:before{content:\"\\F0B11\"}.mdi-alpha-j-box-outline:before{content:\"\\F0C06\"}.mdi-alpha-j-circle:before{content:\"\\F0C07\"}.mdi-alpha-j-circle-outline:before{content:\"\\F0C08\"}.mdi-alpha-k:before{content:\"\\F0AF8\"}.mdi-alpha-k-box:before{content:\"\\F0B12\"}.mdi-alpha-k-box-outline:before{content:\"\\F0C09\"}.mdi-alpha-k-circle:before{content:\"\\F0C0A\"}.mdi-alpha-k-circle-outline:before{content:\"\\F0C0B\"}.mdi-alpha-l:before{content:\"\\F0AF9\"}.mdi-alpha-l-box:before{content:\"\\F0B13\"}.mdi-alpha-l-box-outline:before{content:\"\\F0C0C\"}.mdi-alpha-l-circle:before{content:\"\\F0C0D\"}.mdi-alpha-l-circle-outline:before{content:\"\\F0C0E\"}.mdi-alpha-m:before{content:\"\\F0AFA\"}.mdi-alpha-m-box:before{content:\"\\F0B14\"}.mdi-alpha-m-box-outline:before{content:\"\\F0C0F\"}.mdi-alpha-m-circle:before{content:\"\\F0C10\"}.mdi-alpha-m-circle-outline:before{content:\"\\F0C11\"}.mdi-alpha-n:before{content:\"\\F0AFB\"}.mdi-alpha-n-box:before{content:\"\\F0B15\"}.mdi-alpha-n-box-outline:before{content:\"\\F0C12\"}.mdi-alpha-n-circle:before{content:\"\\F0C13\"}.mdi-alpha-n-circle-outline:before{content:\"\\F0C14\"}.mdi-alpha-o:before{content:\"\\F0AFC\"}.mdi-alpha-o-box:before{content:\"\\F0B16\"}.mdi-alpha-o-box-outline:before{content:\"\\F0C15\"}.mdi-alpha-o-circle:before{content:\"\\F0C16\"}.mdi-alpha-o-circle-outline:before{content:\"\\F0C17\"}.mdi-alpha-p:before{content:\"\\F0AFD\"}.mdi-alpha-p-box:before{content:\"\\F0B17\"}.mdi-alpha-p-box-outline:before{content:\"\\F0C18\"}.mdi-alpha-p-circle:before{content:\"\\F0C19\"}.mdi-alpha-p-circle-outline:before{content:\"\\F0C1A\"}.mdi-alpha-q:before{content:\"\\F0AFE\"}.mdi-alpha-q-box:before{content:\"\\F0B18\"}.mdi-alpha-q-box-outline:before{content:\"\\F0C1B\"}.mdi-alpha-q-circle:before{content:\"\\F0C1C\"}.mdi-alpha-q-circle-outline:before{content:\"\\F0C1D\"}.mdi-alpha-r:before{content:\"\\F0AFF\"}.mdi-alpha-r-box:before{content:\"\\F0B19\"}.mdi-alpha-r-box-outline:before{content:\"\\F0C1E\"}.mdi-alpha-r-circle:before{content:\"\\F0C1F\"}.mdi-alpha-r-circle-outline:before{content:\"\\F0C20\"}.mdi-alpha-s:before{content:\"\\F0B00\"}.mdi-alpha-s-box:before{content:\"\\F0B1A\"}.mdi-alpha-s-box-outline:before{content:\"\\F0C21\"}.mdi-alpha-s-circle:before{content:\"\\F0C22\"}.mdi-alpha-s-circle-outline:before{content:\"\\F0C23\"}.mdi-alpha-t:before{content:\"\\F0B01\"}.mdi-alpha-t-box:before{content:\"\\F0B1B\"}.mdi-alpha-t-box-outline:before{content:\"\\F0C24\"}.mdi-alpha-t-circle:before{content:\"\\F0C25\"}.mdi-alpha-t-circle-outline:before{content:\"\\F0C26\"}.mdi-alpha-u:before{content:\"\\F0B02\"}.mdi-alpha-u-box:before{content:\"\\F0B1C\"}.mdi-alpha-u-box-outline:before{content:\"\\F0C27\"}.mdi-alpha-u-circle:before{content:\"\\F0C28\"}.mdi-alpha-u-circle-outline:before{content:\"\\F0C29\"}.mdi-alpha-v:before{content:\"\\F0B03\"}.mdi-alpha-v-box:before{content:\"\\F0B1D\"}.mdi-alpha-v-box-outline:before{content:\"\\F0C2A\"}.mdi-alpha-v-circle:before{content:\"\\F0C2B\"}.mdi-alpha-v-circle-outline:before{content:\"\\F0C2C\"}.mdi-alpha-w:before{content:\"\\F0B04\"}.mdi-alpha-w-box:before{content:\"\\F0B1E\"}.mdi-alpha-w-box-outline:before{content:\"\\F0C2D\"}.mdi-alpha-w-circle:before{content:\"\\F0C2E\"}.mdi-alpha-w-circle-outline:before{content:\"\\F0C2F\"}.mdi-alpha-x:before{content:\"\\F0B05\"}.mdi-alpha-x-box:before{content:\"\\F0B1F\"}.mdi-alpha-x-box-outline:before{content:\"\\F0C30\"}.mdi-alpha-x-circle:before{content:\"\\F0C31\"}.mdi-alpha-x-circle-outline:before{content:\"\\F0C32\"}.mdi-alpha-y:before{content:\"\\F0B06\"}.mdi-alpha-y-box:before{content:\"\\F0B20\"}.mdi-alpha-y-box-outline:before{content:\"\\F0C33\"}.mdi-alpha-y-circle:before{content:\"\\F0C34\"}.mdi-alpha-y-circle-outline:before{content:\"\\F0C35\"}.mdi-alpha-z:before{content:\"\\F0B07\"}.mdi-alpha-z-box:before{content:\"\\F0B21\"}.mdi-alpha-z-box-outline:before{content:\"\\F0C36\"}.mdi-alpha-z-circle:before{content:\"\\F0C37\"}.mdi-alpha-z-circle-outline:before{content:\"\\F0C38\"}.mdi-alphabet-aurebesh:before{content:\"\\F132C\"}.mdi-alphabet-cyrillic:before{content:\"\\F132D\"}.mdi-alphabet-greek:before{content:\"\\F132E\"}.mdi-alphabet-latin:before{content:\"\\F132F\"}.mdi-alphabet-piqad:before{content:\"\\F1330\"}.mdi-alphabet-tengwar:before{content:\"\\F1337\"}.mdi-alphabetical:before{content:\"\\F002C\"}.mdi-alphabetical-off:before{content:\"\\F100C\"}.mdi-alphabetical-variant:before{content:\"\\F100D\"}.mdi-alphabetical-variant-off:before{content:\"\\F100E\"}.mdi-altimeter:before{content:\"\\F05D7\"}.mdi-amazon:before{content:\"\\F002D\"}.mdi-amazon-alexa:before{content:\"\\F08C6\"}.mdi-ambulance:before{content:\"\\F002F\"}.mdi-ammunition:before{content:\"\\F0CE8\"}.mdi-ampersand:before{content:\"\\F0A8D\"}.mdi-amplifier:before{content:\"\\F0030\"}.mdi-amplifier-off:before{content:\"\\F11B5\"}.mdi-anchor:before{content:\"\\F0031\"}.mdi-android:before{content:\"\\F0032\"}.mdi-android-auto:before{content:\"\\F0A8E\"}.mdi-android-debug-bridge:before{content:\"\\F0033\"}.mdi-android-messages:before{content:\"\\F0D45\"}.mdi-android-studio:before{content:\"\\F0034\"}.mdi-angle-acute:before{content:\"\\F0937\"}.mdi-angle-obtuse:before{content:\"\\F0938\"}.mdi-angle-right:before{content:\"\\F0939\"}.mdi-angular:before{content:\"\\F06B2\"}.mdi-angularjs:before{content:\"\\F06BF\"}.mdi-animation:before{content:\"\\F05D8\"}.mdi-animation-outline:before{content:\"\\F0A8F\"}.mdi-animation-play:before{content:\"\\F093A\"}.mdi-animation-play-outline:before{content:\"\\F0A90\"}.mdi-ansible:before{content:\"\\F109A\"}.mdi-antenna:before{content:\"\\F1119\"}.mdi-anvil:before{content:\"\\F089B\"}.mdi-apache-kafka:before{content:\"\\F100F\"}.mdi-api:before{content:\"\\F109B\"}.mdi-api-off:before{content:\"\\F1257\"}.mdi-apple:before{content:\"\\F0035\"}.mdi-apple-airplay:before{content:\"\\F001F\"}.mdi-apple-finder:before{content:\"\\F0036\"}.mdi-apple-icloud:before{content:\"\\F0038\"}.mdi-apple-ios:before{content:\"\\F0037\"}.mdi-apple-keyboard-caps:before{content:\"\\F0632\"}.mdi-apple-keyboard-command:before{content:\"\\F0633\"}.mdi-apple-keyboard-control:before{content:\"\\F0634\"}.mdi-apple-keyboard-option:before{content:\"\\F0635\"}.mdi-apple-keyboard-shift:before{content:\"\\F0636\"}.mdi-apple-safari:before{content:\"\\F0039\"}.mdi-application:before{content:\"\\F0614\"}.mdi-application-cog:before{content:\"\\F1577\"}.mdi-application-export:before{content:\"\\F0DAD\"}.mdi-application-import:before{content:\"\\F0DAE\"}.mdi-application-settings:before{content:\"\\F1555\"}.mdi-approximately-equal:before{content:\"\\F0F9E\"}.mdi-approximately-equal-box:before{content:\"\\F0F9F\"}.mdi-apps:before{content:\"\\F003B\"}.mdi-apps-box:before{content:\"\\F0D46\"}.mdi-arch:before{content:\"\\F08C7\"}.mdi-archive:before{content:\"\\F003C\"}.mdi-archive-alert:before{content:\"\\F14FD\"}.mdi-archive-alert-outline:before{content:\"\\F14FE\"}.mdi-archive-arrow-down:before{content:\"\\F1259\"}.mdi-archive-arrow-down-outline:before{content:\"\\F125A\"}.mdi-archive-arrow-up:before{content:\"\\F125B\"}.mdi-archive-arrow-up-outline:before{content:\"\\F125C\"}.mdi-archive-outline:before{content:\"\\F120E\"}.mdi-arm-flex:before{content:\"\\F0FD7\"}.mdi-arm-flex-outline:before{content:\"\\F0FD6\"}.mdi-arrange-bring-forward:before{content:\"\\F003D\"}.mdi-arrange-bring-to-front:before{content:\"\\F003E\"}.mdi-arrange-send-backward:before{content:\"\\F003F\"}.mdi-arrange-send-to-back:before{content:\"\\F0040\"}.mdi-arrow-all:before{content:\"\\F0041\"}.mdi-arrow-bottom-left:before{content:\"\\F0042\"}.mdi-arrow-bottom-left-bold-outline:before{content:\"\\F09B7\"}.mdi-arrow-bottom-left-thick:before{content:\"\\F09B8\"}.mdi-arrow-bottom-left-thin-circle-outline:before{content:\"\\F1596\"}.mdi-arrow-bottom-right:before{content:\"\\F0043\"}.mdi-arrow-bottom-right-bold-outline:before{content:\"\\F09B9\"}.mdi-arrow-bottom-right-thick:before{content:\"\\F09BA\"}.mdi-arrow-bottom-right-thin-circle-outline:before{content:\"\\F1595\"}.mdi-arrow-collapse:before{content:\"\\F0615\"}.mdi-arrow-collapse-all:before{content:\"\\F0044\"}.mdi-arrow-collapse-down:before{content:\"\\F0792\"}.mdi-arrow-collapse-horizontal:before{content:\"\\F084C\"}.mdi-arrow-collapse-left:before{content:\"\\F0793\"}.mdi-arrow-collapse-right:before{content:\"\\F0794\"}.mdi-arrow-collapse-up:before{content:\"\\F0795\"}.mdi-arrow-collapse-vertical:before{content:\"\\F084D\"}.mdi-arrow-decision:before{content:\"\\F09BB\"}.mdi-arrow-decision-auto:before{content:\"\\F09BC\"}.mdi-arrow-decision-auto-outline:before{content:\"\\F09BD\"}.mdi-arrow-decision-outline:before{content:\"\\F09BE\"}.mdi-arrow-down:before{content:\"\\F0045\"}.mdi-arrow-down-bold:before{content:\"\\F072E\"}.mdi-arrow-down-bold-box:before{content:\"\\F072F\"}.mdi-arrow-down-bold-box-outline:before{content:\"\\F0730\"}.mdi-arrow-down-bold-circle:before{content:\"\\F0047\"}.mdi-arrow-down-bold-circle-outline:before{content:\"\\F0048\"}.mdi-arrow-down-bold-hexagon-outline:before{content:\"\\F0049\"}.mdi-arrow-down-bold-outline:before{content:\"\\F09BF\"}.mdi-arrow-down-box:before{content:\"\\F06C0\"}.mdi-arrow-down-circle:before{content:\"\\F0CDB\"}.mdi-arrow-down-circle-outline:before{content:\"\\F0CDC\"}.mdi-arrow-down-drop-circle:before{content:\"\\F004A\"}.mdi-arrow-down-drop-circle-outline:before{content:\"\\F004B\"}.mdi-arrow-down-thick:before{content:\"\\F0046\"}.mdi-arrow-down-thin-circle-outline:before{content:\"\\F1599\"}.mdi-arrow-expand:before{content:\"\\F0616\"}.mdi-arrow-expand-all:before{content:\"\\F004C\"}.mdi-arrow-expand-down:before{content:\"\\F0796\"}.mdi-arrow-expand-horizontal:before{content:\"\\F084E\"}.mdi-arrow-expand-left:before{content:\"\\F0797\"}.mdi-arrow-expand-right:before{content:\"\\F0798\"}.mdi-arrow-expand-up:before{content:\"\\F0799\"}.mdi-arrow-expand-vertical:before{content:\"\\F084F\"}.mdi-arrow-horizontal-lock:before{content:\"\\F115B\"}.mdi-arrow-left:before{content:\"\\F004D\"}.mdi-arrow-left-bold:before{content:\"\\F0731\"}.mdi-arrow-left-bold-box:before{content:\"\\F0732\"}.mdi-arrow-left-bold-box-outline:before{content:\"\\F0733\"}.mdi-arrow-left-bold-circle:before{content:\"\\F004F\"}.mdi-arrow-left-bold-circle-outline:before{content:\"\\F0050\"}.mdi-arrow-left-bold-hexagon-outline:before{content:\"\\F0051\"}.mdi-arrow-left-bold-outline:before{content:\"\\F09C0\"}.mdi-arrow-left-box:before{content:\"\\F06C1\"}.mdi-arrow-left-circle:before{content:\"\\F0CDD\"}.mdi-arrow-left-circle-outline:before{content:\"\\F0CDE\"}.mdi-arrow-left-drop-circle:before{content:\"\\F0052\"}.mdi-arrow-left-drop-circle-outline:before{content:\"\\F0053\"}.mdi-arrow-left-right:before{content:\"\\F0E73\"}.mdi-arrow-left-right-bold:before{content:\"\\F0E74\"}.mdi-arrow-left-right-bold-outline:before{content:\"\\F09C1\"}.mdi-arrow-left-thick:before{content:\"\\F004E\"}.mdi-arrow-left-thin-circle-outline:before{content:\"\\F159A\"}.mdi-arrow-right:before{content:\"\\F0054\"}.mdi-arrow-right-bold:before{content:\"\\F0734\"}.mdi-arrow-right-bold-box:before{content:\"\\F0735\"}.mdi-arrow-right-bold-box-outline:before{content:\"\\F0736\"}.mdi-arrow-right-bold-circle:before{content:\"\\F0056\"}.mdi-arrow-right-bold-circle-outline:before{content:\"\\F0057\"}.mdi-arrow-right-bold-hexagon-outline:before{content:\"\\F0058\"}.mdi-arrow-right-bold-outline:before{content:\"\\F09C2\"}.mdi-arrow-right-box:before{content:\"\\F06C2\"}.mdi-arrow-right-circle:before{content:\"\\F0CDF\"}.mdi-arrow-right-circle-outline:before{content:\"\\F0CE0\"}.mdi-arrow-right-drop-circle:before{content:\"\\F0059\"}.mdi-arrow-right-drop-circle-outline:before{content:\"\\F005A\"}.mdi-arrow-right-thick:before{content:\"\\F0055\"}.mdi-arrow-right-thin-circle-outline:before{content:\"\\F1598\"}.mdi-arrow-split-horizontal:before{content:\"\\F093B\"}.mdi-arrow-split-vertical:before{content:\"\\F093C\"}.mdi-arrow-top-left:before{content:\"\\F005B\"}.mdi-arrow-top-left-bold-outline:before{content:\"\\F09C3\"}.mdi-arrow-top-left-bottom-right:before{content:\"\\F0E75\"}.mdi-arrow-top-left-bottom-right-bold:before{content:\"\\F0E76\"}.mdi-arrow-top-left-thick:before{content:\"\\F09C4\"}.mdi-arrow-top-left-thin-circle-outline:before{content:\"\\F1593\"}.mdi-arrow-top-right:before{content:\"\\F005C\"}.mdi-arrow-top-right-bold-outline:before{content:\"\\F09C5\"}.mdi-arrow-top-right-bottom-left:before{content:\"\\F0E77\"}.mdi-arrow-top-right-bottom-left-bold:before{content:\"\\F0E78\"}.mdi-arrow-top-right-thick:before{content:\"\\F09C6\"}.mdi-arrow-top-right-thin-circle-outline:before{content:\"\\F1594\"}.mdi-arrow-up:before{content:\"\\F005D\"}.mdi-arrow-up-bold:before{content:\"\\F0737\"}.mdi-arrow-up-bold-box:before{content:\"\\F0738\"}.mdi-arrow-up-bold-box-outline:before{content:\"\\F0739\"}.mdi-arrow-up-bold-circle:before{content:\"\\F005F\"}.mdi-arrow-up-bold-circle-outline:before{content:\"\\F0060\"}.mdi-arrow-up-bold-hexagon-outline:before{content:\"\\F0061\"}.mdi-arrow-up-bold-outline:before{content:\"\\F09C7\"}.mdi-arrow-up-box:before{content:\"\\F06C3\"}.mdi-arrow-up-circle:before{content:\"\\F0CE1\"}.mdi-arrow-up-circle-outline:before{content:\"\\F0CE2\"}.mdi-arrow-up-down:before{content:\"\\F0E79\"}.mdi-arrow-up-down-bold:before{content:\"\\F0E7A\"}.mdi-arrow-up-down-bold-outline:before{content:\"\\F09C8\"}.mdi-arrow-up-drop-circle:before{content:\"\\F0062\"}.mdi-arrow-up-drop-circle-outline:before{content:\"\\F0063\"}.mdi-arrow-up-thick:before{content:\"\\F005E\"}.mdi-arrow-up-thin-circle-outline:before{content:\"\\F1597\"}.mdi-arrow-vertical-lock:before{content:\"\\F115C\"}.mdi-artstation:before{content:\"\\F0B5B\"}.mdi-aspect-ratio:before{content:\"\\F0A24\"}.mdi-assistant:before{content:\"\\F0064\"}.mdi-asterisk:before{content:\"\\F06C4\"}.mdi-at:before{content:\"\\F0065\"}.mdi-atlassian:before{content:\"\\F0804\"}.mdi-atm:before{content:\"\\F0D47\"}.mdi-atom:before{content:\"\\F0768\"}.mdi-atom-variant:before{content:\"\\F0E7B\"}.mdi-attachment:before{content:\"\\F0066\"}.mdi-audio-video:before{content:\"\\F093D\"}.mdi-audio-video-off:before{content:\"\\F11B6\"}.mdi-augmented-reality:before{content:\"\\F0850\"}.mdi-auto-download:before{content:\"\\F137E\"}.mdi-auto-fix:before{content:\"\\F0068\"}.mdi-auto-upload:before{content:\"\\F0069\"}.mdi-autorenew:before{content:\"\\F006A\"}.mdi-av-timer:before{content:\"\\F006B\"}.mdi-aws:before{content:\"\\F0E0F\"}.mdi-axe:before{content:\"\\F08C8\"}.mdi-axis:before{content:\"\\F0D48\"}.mdi-axis-arrow:before{content:\"\\F0D49\"}.mdi-axis-arrow-info:before{content:\"\\F140E\"}.mdi-axis-arrow-lock:before{content:\"\\F0D4A\"}.mdi-axis-lock:before{content:\"\\F0D4B\"}.mdi-axis-x-arrow:before{content:\"\\F0D4C\"}.mdi-axis-x-arrow-lock:before{content:\"\\F0D4D\"}.mdi-axis-x-rotate-clockwise:before{content:\"\\F0D4E\"}.mdi-axis-x-rotate-counterclockwise:before{content:\"\\F0D4F\"}.mdi-axis-x-y-arrow-lock:before{content:\"\\F0D50\"}.mdi-axis-y-arrow:before{content:\"\\F0D51\"}.mdi-axis-y-arrow-lock:before{content:\"\\F0D52\"}.mdi-axis-y-rotate-clockwise:before{content:\"\\F0D53\"}.mdi-axis-y-rotate-counterclockwise:before{content:\"\\F0D54\"}.mdi-axis-z-arrow:before{content:\"\\F0D55\"}.mdi-axis-z-arrow-lock:before{content:\"\\F0D56\"}.mdi-axis-z-rotate-clockwise:before{content:\"\\F0D57\"}.mdi-axis-z-rotate-counterclockwise:before{content:\"\\F0D58\"}.mdi-babel:before{content:\"\\F0A25\"}.mdi-baby:before{content:\"\\F006C\"}.mdi-baby-bottle:before{content:\"\\F0F39\"}.mdi-baby-bottle-outline:before{content:\"\\F0F3A\"}.mdi-baby-buggy:before{content:\"\\F13E0\"}.mdi-baby-carriage:before{content:\"\\F068F\"}.mdi-baby-carriage-off:before{content:\"\\F0FA0\"}.mdi-baby-face:before{content:\"\\F0E7C\"}.mdi-baby-face-outline:before{content:\"\\F0E7D\"}.mdi-backburger:before{content:\"\\F006D\"}.mdi-backspace:before{content:\"\\F006E\"}.mdi-backspace-outline:before{content:\"\\F0B5C\"}.mdi-backspace-reverse:before{content:\"\\F0E7E\"}.mdi-backspace-reverse-outline:before{content:\"\\F0E7F\"}.mdi-backup-restore:before{content:\"\\F006F\"}.mdi-bacteria:before{content:\"\\F0ED5\"}.mdi-bacteria-outline:before{content:\"\\F0ED6\"}.mdi-badge-account:before{content:\"\\F0DA7\"}.mdi-badge-account-alert:before{content:\"\\F0DA8\"}.mdi-badge-account-alert-outline:before{content:\"\\F0DA9\"}.mdi-badge-account-horizontal:before{content:\"\\F0E0D\"}.mdi-badge-account-horizontal-outline:before{content:\"\\F0E0E\"}.mdi-badge-account-outline:before{content:\"\\F0DAA\"}.mdi-badminton:before{content:\"\\F0851\"}.mdi-bag-carry-on:before{content:\"\\F0F3B\"}.mdi-bag-carry-on-check:before{content:\"\\F0D65\"}.mdi-bag-carry-on-off:before{content:\"\\F0F3C\"}.mdi-bag-checked:before{content:\"\\F0F3D\"}.mdi-bag-personal:before{content:\"\\F0E10\"}.mdi-bag-personal-off:before{content:\"\\F0E11\"}.mdi-bag-personal-off-outline:before{content:\"\\F0E12\"}.mdi-bag-personal-outline:before{content:\"\\F0E13\"}.mdi-bag-suitcase:before{content:\"\\F158B\"}.mdi-bag-suitcase-off:before{content:\"\\F158D\"}.mdi-bag-suitcase-off-outline:before{content:\"\\F158E\"}.mdi-bag-suitcase-outline:before{content:\"\\F158C\"}.mdi-baguette:before{content:\"\\F0F3E\"}.mdi-balloon:before{content:\"\\F0A26\"}.mdi-ballot:before{content:\"\\F09C9\"}.mdi-ballot-outline:before{content:\"\\F09CA\"}.mdi-ballot-recount:before{content:\"\\F0C39\"}.mdi-ballot-recount-outline:before{content:\"\\F0C3A\"}.mdi-bandage:before{content:\"\\F0DAF\"}.mdi-bandcamp:before{content:\"\\F0675\"}.mdi-bank:before{content:\"\\F0070\"}.mdi-bank-check:before{content:\"\\F1655\"}.mdi-bank-minus:before{content:\"\\F0DB0\"}.mdi-bank-off:before{content:\"\\F1656\"}.mdi-bank-off-outline:before{content:\"\\F1657\"}.mdi-bank-outline:before{content:\"\\F0E80\"}.mdi-bank-plus:before{content:\"\\F0DB1\"}.mdi-bank-remove:before{content:\"\\F0DB2\"}.mdi-bank-transfer:before{content:\"\\F0A27\"}.mdi-bank-transfer-in:before{content:\"\\F0A28\"}.mdi-bank-transfer-out:before{content:\"\\F0A29\"}.mdi-barcode:before{content:\"\\F0071\"}.mdi-barcode-off:before{content:\"\\F1236\"}.mdi-barcode-scan:before{content:\"\\F0072\"}.mdi-barley:before{content:\"\\F0073\"}.mdi-barley-off:before{content:\"\\F0B5D\"}.mdi-barn:before{content:\"\\F0B5E\"}.mdi-barrel:before{content:\"\\F0074\"}.mdi-baseball:before{content:\"\\F0852\"}.mdi-baseball-bat:before{content:\"\\F0853\"}.mdi-baseball-diamond:before{content:\"\\F15EC\"}.mdi-baseball-diamond-outline:before{content:\"\\F15ED\"}.mdi-bash:before{content:\"\\F1183\"}.mdi-basket:before{content:\"\\F0076\"}.mdi-basket-fill:before{content:\"\\F0077\"}.mdi-basket-minus:before{content:\"\\F1523\"}.mdi-basket-minus-outline:before{content:\"\\F1524\"}.mdi-basket-off:before{content:\"\\F1525\"}.mdi-basket-off-outline:before{content:\"\\F1526\"}.mdi-basket-outline:before{content:\"\\F1181\"}.mdi-basket-plus:before{content:\"\\F1527\"}.mdi-basket-plus-outline:before{content:\"\\F1528\"}.mdi-basket-remove:before{content:\"\\F1529\"}.mdi-basket-remove-outline:before{content:\"\\F152A\"}.mdi-basket-unfill:before{content:\"\\F0078\"}.mdi-basketball:before{content:\"\\F0806\"}.mdi-basketball-hoop:before{content:\"\\F0C3B\"}.mdi-basketball-hoop-outline:before{content:\"\\F0C3C\"}.mdi-bat:before{content:\"\\F0B5F\"}.mdi-battery:before{content:\"\\F0079\"}.mdi-battery-10:before{content:\"\\F007A\"}.mdi-battery-10-bluetooth:before{content:\"\\F093E\"}.mdi-battery-20:before{content:\"\\F007B\"}.mdi-battery-20-bluetooth:before{content:\"\\F093F\"}.mdi-battery-30:before{content:\"\\F007C\"}.mdi-battery-30-bluetooth:before{content:\"\\F0940\"}.mdi-battery-40:before{content:\"\\F007D\"}.mdi-battery-40-bluetooth:before{content:\"\\F0941\"}.mdi-battery-50:before{content:\"\\F007E\"}.mdi-battery-50-bluetooth:before{content:\"\\F0942\"}.mdi-battery-60:before{content:\"\\F007F\"}.mdi-battery-60-bluetooth:before{content:\"\\F0943\"}.mdi-battery-70:before{content:\"\\F0080\"}.mdi-battery-70-bluetooth:before{content:\"\\F0944\"}.mdi-battery-80:before{content:\"\\F0081\"}.mdi-battery-80-bluetooth:before{content:\"\\F0945\"}.mdi-battery-90:before{content:\"\\F0082\"}.mdi-battery-90-bluetooth:before{content:\"\\F0946\"}.mdi-battery-alert:before{content:\"\\F0083\"}.mdi-battery-alert-bluetooth:before{content:\"\\F0947\"}.mdi-battery-alert-variant:before{content:\"\\F10CC\"}.mdi-battery-alert-variant-outline:before{content:\"\\F10CD\"}.mdi-battery-bluetooth:before{content:\"\\F0948\"}.mdi-battery-bluetooth-variant:before{content:\"\\F0949\"}.mdi-battery-charging:before{content:\"\\F0084\"}.mdi-battery-charging-10:before{content:\"\\F089C\"}.mdi-battery-charging-100:before{content:\"\\F0085\"}.mdi-battery-charging-20:before{content:\"\\F0086\"}.mdi-battery-charging-30:before{content:\"\\F0087\"}.mdi-battery-charging-40:before{content:\"\\F0088\"}.mdi-battery-charging-50:before{content:\"\\F089D\"}.mdi-battery-charging-60:before{content:\"\\F0089\"}.mdi-battery-charging-70:before{content:\"\\F089E\"}.mdi-battery-charging-80:before{content:\"\\F008A\"}.mdi-battery-charging-90:before{content:\"\\F008B\"}.mdi-battery-charging-high:before{content:\"\\F12A6\"}.mdi-battery-charging-low:before{content:\"\\F12A4\"}.mdi-battery-charging-medium:before{content:\"\\F12A5\"}.mdi-battery-charging-outline:before{content:\"\\F089F\"}.mdi-battery-charging-wireless:before{content:\"\\F0807\"}.mdi-battery-charging-wireless-10:before{content:\"\\F0808\"}.mdi-battery-charging-wireless-20:before{content:\"\\F0809\"}.mdi-battery-charging-wireless-30:before{content:\"\\F080A\"}.mdi-battery-charging-wireless-40:before{content:\"\\F080B\"}.mdi-battery-charging-wireless-50:before{content:\"\\F080C\"}.mdi-battery-charging-wireless-60:before{content:\"\\F080D\"}.mdi-battery-charging-wireless-70:before{content:\"\\F080E\"}.mdi-battery-charging-wireless-80:before{content:\"\\F080F\"}.mdi-battery-charging-wireless-90:before{content:\"\\F0810\"}.mdi-battery-charging-wireless-alert:before{content:\"\\F0811\"}.mdi-battery-charging-wireless-outline:before{content:\"\\F0812\"}.mdi-battery-heart:before{content:\"\\F120F\"}.mdi-battery-heart-outline:before{content:\"\\F1210\"}.mdi-battery-heart-variant:before{content:\"\\F1211\"}.mdi-battery-high:before{content:\"\\F12A3\"}.mdi-battery-low:before{content:\"\\F12A1\"}.mdi-battery-medium:before{content:\"\\F12A2\"}.mdi-battery-minus:before{content:\"\\F008C\"}.mdi-battery-negative:before{content:\"\\F008D\"}.mdi-battery-off:before{content:\"\\F125D\"}.mdi-battery-off-outline:before{content:\"\\F125E\"}.mdi-battery-outline:before{content:\"\\F008E\"}.mdi-battery-plus:before{content:\"\\F008F\"}.mdi-battery-positive:before{content:\"\\F0090\"}.mdi-battery-unknown:before{content:\"\\F0091\"}.mdi-battery-unknown-bluetooth:before{content:\"\\F094A\"}.mdi-battlenet:before{content:\"\\F0B60\"}.mdi-beach:before{content:\"\\F0092\"}.mdi-beaker:before{content:\"\\F0CEA\"}.mdi-beaker-alert:before{content:\"\\F1229\"}.mdi-beaker-alert-outline:before{content:\"\\F122A\"}.mdi-beaker-check:before{content:\"\\F122B\"}.mdi-beaker-check-outline:before{content:\"\\F122C\"}.mdi-beaker-minus:before{content:\"\\F122D\"}.mdi-beaker-minus-outline:before{content:\"\\F122E\"}.mdi-beaker-outline:before{content:\"\\F0690\"}.mdi-beaker-plus:before{content:\"\\F122F\"}.mdi-beaker-plus-outline:before{content:\"\\F1230\"}.mdi-beaker-question:before{content:\"\\F1231\"}.mdi-beaker-question-outline:before{content:\"\\F1232\"}.mdi-beaker-remove:before{content:\"\\F1233\"}.mdi-beaker-remove-outline:before{content:\"\\F1234\"}.mdi-bed:before{content:\"\\F02E3\"}.mdi-bed-double:before{content:\"\\F0FD4\"}.mdi-bed-double-outline:before{content:\"\\F0FD3\"}.mdi-bed-empty:before{content:\"\\F08A0\"}.mdi-bed-king:before{content:\"\\F0FD2\"}.mdi-bed-king-outline:before{content:\"\\F0FD1\"}.mdi-bed-outline:before{content:\"\\F0099\"}.mdi-bed-queen:before{content:\"\\F0FD0\"}.mdi-bed-queen-outline:before{content:\"\\F0FDB\"}.mdi-bed-single:before{content:\"\\F106D\"}.mdi-bed-single-outline:before{content:\"\\F106E\"}.mdi-bee:before{content:\"\\F0FA1\"}.mdi-bee-flower:before{content:\"\\F0FA2\"}.mdi-beehive-off-outline:before{content:\"\\F13ED\"}.mdi-beehive-outline:before{content:\"\\F10CE\"}.mdi-beekeeper:before{content:\"\\F14E2\"}.mdi-beer:before{content:\"\\F0098\"}.mdi-beer-outline:before{content:\"\\F130C\"}.mdi-bell:before{content:\"\\F009A\"}.mdi-bell-alert:before{content:\"\\F0D59\"}.mdi-bell-alert-outline:before{content:\"\\F0E81\"}.mdi-bell-cancel:before{content:\"\\F13E7\"}.mdi-bell-cancel-outline:before{content:\"\\F13E8\"}.mdi-bell-check:before{content:\"\\F11E5\"}.mdi-bell-check-outline:before{content:\"\\F11E6\"}.mdi-bell-circle:before{content:\"\\F0D5A\"}.mdi-bell-circle-outline:before{content:\"\\F0D5B\"}.mdi-bell-minus:before{content:\"\\F13E9\"}.mdi-bell-minus-outline:before{content:\"\\F13EA\"}.mdi-bell-off:before{content:\"\\F009B\"}.mdi-bell-off-outline:before{content:\"\\F0A91\"}.mdi-bell-outline:before{content:\"\\F009C\"}.mdi-bell-plus:before{content:\"\\F009D\"}.mdi-bell-plus-outline:before{content:\"\\F0A92\"}.mdi-bell-remove:before{content:\"\\F13EB\"}.mdi-bell-remove-outline:before{content:\"\\F13EC\"}.mdi-bell-ring:before{content:\"\\F009E\"}.mdi-bell-ring-outline:before{content:\"\\F009F\"}.mdi-bell-sleep:before{content:\"\\F00A0\"}.mdi-bell-sleep-outline:before{content:\"\\F0A93\"}.mdi-beta:before{content:\"\\F00A1\"}.mdi-betamax:before{content:\"\\F09CB\"}.mdi-biathlon:before{content:\"\\F0E14\"}.mdi-bicycle:before{content:\"\\F109C\"}.mdi-bicycle-basket:before{content:\"\\F1235\"}.mdi-bicycle-electric:before{content:\"\\F15B4\"}.mdi-bicycle-penny-farthing:before{content:\"\\F15E9\"}.mdi-bike:before{content:\"\\F00A3\"}.mdi-bike-fast:before{content:\"\\F111F\"}.mdi-billboard:before{content:\"\\F1010\"}.mdi-billiards:before{content:\"\\F0B61\"}.mdi-billiards-rack:before{content:\"\\F0B62\"}.mdi-binoculars:before{content:\"\\F00A5\"}.mdi-bio:before{content:\"\\F00A6\"}.mdi-biohazard:before{content:\"\\F00A7\"}.mdi-bird:before{content:\"\\F15C6\"}.mdi-bitbucket:before{content:\"\\F00A8\"}.mdi-bitcoin:before{content:\"\\F0813\"}.mdi-black-mesa:before{content:\"\\F00A9\"}.mdi-blender:before{content:\"\\F0CEB\"}.mdi-blender-software:before{content:\"\\F00AB\"}.mdi-blinds:before{content:\"\\F00AC\"}.mdi-blinds-open:before{content:\"\\F1011\"}.mdi-block-helper:before{content:\"\\F00AD\"}.mdi-blogger:before{content:\"\\F00AE\"}.mdi-blood-bag:before{content:\"\\F0CEC\"}.mdi-bluetooth:before{content:\"\\F00AF\"}.mdi-bluetooth-audio:before{content:\"\\F00B0\"}.mdi-bluetooth-connect:before{content:\"\\F00B1\"}.mdi-bluetooth-off:before{content:\"\\F00B2\"}.mdi-bluetooth-settings:before{content:\"\\F00B3\"}.mdi-bluetooth-transfer:before{content:\"\\F00B4\"}.mdi-blur:before{content:\"\\F00B5\"}.mdi-blur-linear:before{content:\"\\F00B6\"}.mdi-blur-off:before{content:\"\\F00B7\"}.mdi-blur-radial:before{content:\"\\F00B8\"}.mdi-bolnisi-cross:before{content:\"\\F0CED\"}.mdi-bolt:before{content:\"\\F0DB3\"}.mdi-bomb:before{content:\"\\F0691\"}.mdi-bomb-off:before{content:\"\\F06C5\"}.mdi-bone:before{content:\"\\F00B9\"}.mdi-book:before{content:\"\\F00BA\"}.mdi-book-account:before{content:\"\\F13AD\"}.mdi-book-account-outline:before{content:\"\\F13AE\"}.mdi-book-alert:before{content:\"\\F167C\"}.mdi-book-alert-outline:before{content:\"\\F167D\"}.mdi-book-alphabet:before{content:\"\\F061D\"}.mdi-book-arrow-down:before{content:\"\\F167E\"}.mdi-book-arrow-down-outline:before{content:\"\\F167F\"}.mdi-book-arrow-left:before{content:\"\\F1680\"}.mdi-book-arrow-left-outline:before{content:\"\\F1681\"}.mdi-book-arrow-right:before{content:\"\\F1682\"}.mdi-book-arrow-right-outline:before{content:\"\\F1683\"}.mdi-book-arrow-up:before{content:\"\\F1684\"}.mdi-book-arrow-up-outline:before{content:\"\\F1685\"}.mdi-book-cancel:before{content:\"\\F1686\"}.mdi-book-cancel-outline:before{content:\"\\F1687\"}.mdi-book-check:before{content:\"\\F14F3\"}.mdi-book-check-outline:before{content:\"\\F14F4\"}.mdi-book-clock:before{content:\"\\F1688\"}.mdi-book-clock-outline:before{content:\"\\F1689\"}.mdi-book-cog:before{content:\"\\F168A\"}.mdi-book-cog-outline:before{content:\"\\F168B\"}.mdi-book-cross:before{content:\"\\F00A2\"}.mdi-book-edit:before{content:\"\\F168C\"}.mdi-book-edit-outline:before{content:\"\\F168D\"}.mdi-book-education:before{content:\"\\F16C9\"}.mdi-book-education-outline:before{content:\"\\F16CA\"}.mdi-book-information-variant:before{content:\"\\F106F\"}.mdi-book-lock:before{content:\"\\F079A\"}.mdi-book-lock-open:before{content:\"\\F079B\"}.mdi-book-lock-open-outline:before{content:\"\\F168E\"}.mdi-book-lock-outline:before{content:\"\\F168F\"}.mdi-book-marker:before{content:\"\\F1690\"}.mdi-book-marker-outline:before{content:\"\\F1691\"}.mdi-book-minus:before{content:\"\\F05D9\"}.mdi-book-minus-multiple:before{content:\"\\F0A94\"}.mdi-book-minus-multiple-outline:before{content:\"\\F090B\"}.mdi-book-minus-outline:before{content:\"\\F1692\"}.mdi-book-multiple:before{content:\"\\F00BB\"}.mdi-book-multiple-outline:before{content:\"\\F0436\"}.mdi-book-music:before{content:\"\\F0067\"}.mdi-book-music-outline:before{content:\"\\F1693\"}.mdi-book-off:before{content:\"\\F1694\"}.mdi-book-off-outline:before{content:\"\\F1695\"}.mdi-book-open:before{content:\"\\F00BD\"}.mdi-book-open-blank-variant:before{content:\"\\F00BE\"}.mdi-book-open-outline:before{content:\"\\F0B63\"}.mdi-book-open-page-variant:before{content:\"\\F05DA\"}.mdi-book-open-page-variant-outline:before{content:\"\\F15D6\"}.mdi-book-open-variant:before{content:\"\\F14F7\"}.mdi-book-outline:before{content:\"\\F0B64\"}.mdi-book-play:before{content:\"\\F0E82\"}.mdi-book-play-outline:before{content:\"\\F0E83\"}.mdi-book-plus:before{content:\"\\F05DB\"}.mdi-book-plus-multiple:before{content:\"\\F0A95\"}.mdi-book-plus-multiple-outline:before{content:\"\\F0ADE\"}.mdi-book-plus-outline:before{content:\"\\F1696\"}.mdi-book-refresh:before{content:\"\\F1697\"}.mdi-book-refresh-outline:before{content:\"\\F1698\"}.mdi-book-remove:before{content:\"\\F0A97\"}.mdi-book-remove-multiple:before{content:\"\\F0A96\"}.mdi-book-remove-multiple-outline:before{content:\"\\F04CA\"}.mdi-book-remove-outline:before{content:\"\\F1699\"}.mdi-book-search:before{content:\"\\F0E84\"}.mdi-book-search-outline:before{content:\"\\F0E85\"}.mdi-book-settings:before{content:\"\\F169A\"}.mdi-book-settings-outline:before{content:\"\\F169B\"}.mdi-book-sync:before{content:\"\\F169C\"}.mdi-book-sync-outline:before{content:\"\\F16C8\"}.mdi-book-variant:before{content:\"\\F00BF\"}.mdi-book-variant-multiple:before{content:\"\\F00BC\"}.mdi-bookmark:before{content:\"\\F00C0\"}.mdi-bookmark-check:before{content:\"\\F00C1\"}.mdi-bookmark-check-outline:before{content:\"\\F137B\"}.mdi-bookmark-minus:before{content:\"\\F09CC\"}.mdi-bookmark-minus-outline:before{content:\"\\F09CD\"}.mdi-bookmark-multiple:before{content:\"\\F0E15\"}.mdi-bookmark-multiple-outline:before{content:\"\\F0E16\"}.mdi-bookmark-music:before{content:\"\\F00C2\"}.mdi-bookmark-music-outline:before{content:\"\\F1379\"}.mdi-bookmark-off:before{content:\"\\F09CE\"}.mdi-bookmark-off-outline:before{content:\"\\F09CF\"}.mdi-bookmark-outline:before{content:\"\\F00C3\"}.mdi-bookmark-plus:before{content:\"\\F00C5\"}.mdi-bookmark-plus-outline:before{content:\"\\F00C4\"}.mdi-bookmark-remove:before{content:\"\\F00C6\"}.mdi-bookmark-remove-outline:before{content:\"\\F137A\"}.mdi-bookshelf:before{content:\"\\F125F\"}.mdi-boom-gate:before{content:\"\\F0E86\"}.mdi-boom-gate-alert:before{content:\"\\F0E87\"}.mdi-boom-gate-alert-outline:before{content:\"\\F0E88\"}.mdi-boom-gate-down:before{content:\"\\F0E89\"}.mdi-boom-gate-down-outline:before{content:\"\\F0E8A\"}.mdi-boom-gate-outline:before{content:\"\\F0E8B\"}.mdi-boom-gate-up:before{content:\"\\F0E8C\"}.mdi-boom-gate-up-outline:before{content:\"\\F0E8D\"}.mdi-boombox:before{content:\"\\F05DC\"}.mdi-boomerang:before{content:\"\\F10CF\"}.mdi-bootstrap:before{content:\"\\F06C6\"}.mdi-border-all:before{content:\"\\F00C7\"}.mdi-border-all-variant:before{content:\"\\F08A1\"}.mdi-border-bottom:before{content:\"\\F00C8\"}.mdi-border-bottom-variant:before{content:\"\\F08A2\"}.mdi-border-color:before{content:\"\\F00C9\"}.mdi-border-horizontal:before{content:\"\\F00CA\"}.mdi-border-inside:before{content:\"\\F00CB\"}.mdi-border-left:before{content:\"\\F00CC\"}.mdi-border-left-variant:before{content:\"\\F08A3\"}.mdi-border-none:before{content:\"\\F00CD\"}.mdi-border-none-variant:before{content:\"\\F08A4\"}.mdi-border-outside:before{content:\"\\F00CE\"}.mdi-border-right:before{content:\"\\F00CF\"}.mdi-border-right-variant:before{content:\"\\F08A5\"}.mdi-border-style:before{content:\"\\F00D0\"}.mdi-border-top:before{content:\"\\F00D1\"}.mdi-border-top-variant:before{content:\"\\F08A6\"}.mdi-border-vertical:before{content:\"\\F00D2\"}.mdi-bottle-soda:before{content:\"\\F1070\"}.mdi-bottle-soda-classic:before{content:\"\\F1071\"}.mdi-bottle-soda-classic-outline:before{content:\"\\F1363\"}.mdi-bottle-soda-outline:before{content:\"\\F1072\"}.mdi-bottle-tonic:before{content:\"\\F112E\"}.mdi-bottle-tonic-outline:before{content:\"\\F112F\"}.mdi-bottle-tonic-plus:before{content:\"\\F1130\"}.mdi-bottle-tonic-plus-outline:before{content:\"\\F1131\"}.mdi-bottle-tonic-skull:before{content:\"\\F1132\"}.mdi-bottle-tonic-skull-outline:before{content:\"\\F1133\"}.mdi-bottle-wine:before{content:\"\\F0854\"}.mdi-bottle-wine-outline:before{content:\"\\F1310\"}.mdi-bow-tie:before{content:\"\\F0678\"}.mdi-bowl:before{content:\"\\F028E\"}.mdi-bowl-mix:before{content:\"\\F0617\"}.mdi-bowl-mix-outline:before{content:\"\\F02E4\"}.mdi-bowl-outline:before{content:\"\\F02A9\"}.mdi-bowling:before{content:\"\\F00D3\"}.mdi-box:before{content:\"\\F00D4\"}.mdi-box-cutter:before{content:\"\\F00D5\"}.mdi-box-cutter-off:before{content:\"\\F0B4A\"}.mdi-box-shadow:before{content:\"\\F0637\"}.mdi-boxing-glove:before{content:\"\\F0B65\"}.mdi-braille:before{content:\"\\F09D0\"}.mdi-brain:before{content:\"\\F09D1\"}.mdi-bread-slice:before{content:\"\\F0CEE\"}.mdi-bread-slice-outline:before{content:\"\\F0CEF\"}.mdi-bridge:before{content:\"\\F0618\"}.mdi-briefcase:before{content:\"\\F00D6\"}.mdi-briefcase-account:before{content:\"\\F0CF0\"}.mdi-briefcase-account-outline:before{content:\"\\F0CF1\"}.mdi-briefcase-check:before{content:\"\\F00D7\"}.mdi-briefcase-check-outline:before{content:\"\\F131E\"}.mdi-briefcase-clock:before{content:\"\\F10D0\"}.mdi-briefcase-clock-outline:before{content:\"\\F10D1\"}.mdi-briefcase-download:before{content:\"\\F00D8\"}.mdi-briefcase-download-outline:before{content:\"\\F0C3D\"}.mdi-briefcase-edit:before{content:\"\\F0A98\"}.mdi-briefcase-edit-outline:before{content:\"\\F0C3E\"}.mdi-briefcase-minus:before{content:\"\\F0A2A\"}.mdi-briefcase-minus-outline:before{content:\"\\F0C3F\"}.mdi-briefcase-off:before{content:\"\\F1658\"}.mdi-briefcase-off-outline:before{content:\"\\F1659\"}.mdi-briefcase-outline:before{content:\"\\F0814\"}.mdi-briefcase-plus:before{content:\"\\F0A2B\"}.mdi-briefcase-plus-outline:before{content:\"\\F0C40\"}.mdi-briefcase-remove:before{content:\"\\F0A2C\"}.mdi-briefcase-remove-outline:before{content:\"\\F0C41\"}.mdi-briefcase-search:before{content:\"\\F0A2D\"}.mdi-briefcase-search-outline:before{content:\"\\F0C42\"}.mdi-briefcase-upload:before{content:\"\\F00D9\"}.mdi-briefcase-upload-outline:before{content:\"\\F0C43\"}.mdi-briefcase-variant:before{content:\"\\F1494\"}.mdi-briefcase-variant-off:before{content:\"\\F165A\"}.mdi-briefcase-variant-off-outline:before{content:\"\\F165B\"}.mdi-briefcase-variant-outline:before{content:\"\\F1495\"}.mdi-brightness-1:before{content:\"\\F00DA\"}.mdi-brightness-2:before{content:\"\\F00DB\"}.mdi-brightness-3:before{content:\"\\F00DC\"}.mdi-brightness-4:before{content:\"\\F00DD\"}.mdi-brightness-5:before{content:\"\\F00DE\"}.mdi-brightness-6:before{content:\"\\F00DF\"}.mdi-brightness-7:before{content:\"\\F00E0\"}.mdi-brightness-auto:before{content:\"\\F00E1\"}.mdi-brightness-percent:before{content:\"\\F0CF2\"}.mdi-broom:before{content:\"\\F00E2\"}.mdi-brush:before{content:\"\\F00E3\"}.mdi-bucket:before{content:\"\\F1415\"}.mdi-bucket-outline:before{content:\"\\F1416\"}.mdi-buddhism:before{content:\"\\F094B\"}.mdi-buffer:before{content:\"\\F0619\"}.mdi-buffet:before{content:\"\\F0578\"}.mdi-bug:before{content:\"\\F00E4\"}.mdi-bug-check:before{content:\"\\F0A2E\"}.mdi-bug-check-outline:before{content:\"\\F0A2F\"}.mdi-bug-outline:before{content:\"\\F0A30\"}.mdi-bugle:before{content:\"\\F0DB4\"}.mdi-bulldozer:before{content:\"\\F0B22\"}.mdi-bullet:before{content:\"\\F0CF3\"}.mdi-bulletin-board:before{content:\"\\F00E5\"}.mdi-bullhorn:before{content:\"\\F00E6\"}.mdi-bullhorn-outline:before{content:\"\\F0B23\"}.mdi-bullseye:before{content:\"\\F05DD\"}.mdi-bullseye-arrow:before{content:\"\\F08C9\"}.mdi-bulma:before{content:\"\\F12E7\"}.mdi-bunk-bed:before{content:\"\\F1302\"}.mdi-bunk-bed-outline:before{content:\"\\F0097\"}.mdi-bus:before{content:\"\\F00E7\"}.mdi-bus-alert:before{content:\"\\F0A99\"}.mdi-bus-articulated-end:before{content:\"\\F079C\"}.mdi-bus-articulated-front:before{content:\"\\F079D\"}.mdi-bus-clock:before{content:\"\\F08CA\"}.mdi-bus-double-decker:before{content:\"\\F079E\"}.mdi-bus-marker:before{content:\"\\F1212\"}.mdi-bus-multiple:before{content:\"\\F0F3F\"}.mdi-bus-school:before{content:\"\\F079F\"}.mdi-bus-side:before{content:\"\\F07A0\"}.mdi-bus-stop:before{content:\"\\F1012\"}.mdi-bus-stop-covered:before{content:\"\\F1013\"}.mdi-bus-stop-uncovered:before{content:\"\\F1014\"}.mdi-butterfly:before{content:\"\\F1589\"}.mdi-butterfly-outline:before{content:\"\\F158A\"}.mdi-cable-data:before{content:\"\\F1394\"}.mdi-cached:before{content:\"\\F00E8\"}.mdi-cactus:before{content:\"\\F0DB5\"}.mdi-cake:before{content:\"\\F00E9\"}.mdi-cake-layered:before{content:\"\\F00EA\"}.mdi-cake-variant:before{content:\"\\F00EB\"}.mdi-calculator:before{content:\"\\F00EC\"}.mdi-calculator-variant:before{content:\"\\F0A9A\"}.mdi-calculator-variant-outline:before{content:\"\\F15A6\"}.mdi-calendar:before{content:\"\\F00ED\"}.mdi-calendar-account:before{content:\"\\F0ED7\"}.mdi-calendar-account-outline:before{content:\"\\F0ED8\"}.mdi-calendar-alert:before{content:\"\\F0A31\"}.mdi-calendar-arrow-left:before{content:\"\\F1134\"}.mdi-calendar-arrow-right:before{content:\"\\F1135\"}.mdi-calendar-blank:before{content:\"\\F00EE\"}.mdi-calendar-blank-multiple:before{content:\"\\F1073\"}.mdi-calendar-blank-outline:before{content:\"\\F0B66\"}.mdi-calendar-check:before{content:\"\\F00EF\"}.mdi-calendar-check-outline:before{content:\"\\F0C44\"}.mdi-calendar-clock:before{content:\"\\F00F0\"}.mdi-calendar-cursor:before{content:\"\\F157B\"}.mdi-calendar-edit:before{content:\"\\F08A7\"}.mdi-calendar-end:before{content:\"\\F166C\"}.mdi-calendar-export:before{content:\"\\F0B24\"}.mdi-calendar-heart:before{content:\"\\F09D2\"}.mdi-calendar-import:before{content:\"\\F0B25\"}.mdi-calendar-lock:before{content:\"\\F1641\"}.mdi-calendar-lock-outline:before{content:\"\\F1642\"}.mdi-calendar-minus:before{content:\"\\F0D5C\"}.mdi-calendar-month:before{content:\"\\F0E17\"}.mdi-calendar-month-outline:before{content:\"\\F0E18\"}.mdi-calendar-multiple:before{content:\"\\F00F1\"}.mdi-calendar-multiple-check:before{content:\"\\F00F2\"}.mdi-calendar-multiselect:before{content:\"\\F0A32\"}.mdi-calendar-outline:before{content:\"\\F0B67\"}.mdi-calendar-plus:before{content:\"\\F00F3\"}.mdi-calendar-question:before{content:\"\\F0692\"}.mdi-calendar-range:before{content:\"\\F0679\"}.mdi-calendar-range-outline:before{content:\"\\F0B68\"}.mdi-calendar-refresh:before{content:\"\\F01E1\"}.mdi-calendar-refresh-outline:before{content:\"\\F0203\"}.mdi-calendar-remove:before{content:\"\\F00F4\"}.mdi-calendar-remove-outline:before{content:\"\\F0C45\"}.mdi-calendar-search:before{content:\"\\F094C\"}.mdi-calendar-star:before{content:\"\\F09D3\"}.mdi-calendar-start:before{content:\"\\F166D\"}.mdi-calendar-sync:before{content:\"\\F0E8E\"}.mdi-calendar-sync-outline:before{content:\"\\F0E8F\"}.mdi-calendar-text:before{content:\"\\F00F5\"}.mdi-calendar-text-outline:before{content:\"\\F0C46\"}.mdi-calendar-today:before{content:\"\\F00F6\"}.mdi-calendar-week:before{content:\"\\F0A33\"}.mdi-calendar-week-begin:before{content:\"\\F0A34\"}.mdi-calendar-weekend:before{content:\"\\F0ED9\"}.mdi-calendar-weekend-outline:before{content:\"\\F0EDA\"}.mdi-call-made:before{content:\"\\F00F7\"}.mdi-call-merge:before{content:\"\\F00F8\"}.mdi-call-missed:before{content:\"\\F00F9\"}.mdi-call-received:before{content:\"\\F00FA\"}.mdi-call-split:before{content:\"\\F00FB\"}.mdi-camcorder:before{content:\"\\F00FC\"}.mdi-camcorder-off:before{content:\"\\F00FF\"}.mdi-camera:before{content:\"\\F0100\"}.mdi-camera-account:before{content:\"\\F08CB\"}.mdi-camera-burst:before{content:\"\\F0693\"}.mdi-camera-control:before{content:\"\\F0B69\"}.mdi-camera-enhance:before{content:\"\\F0101\"}.mdi-camera-enhance-outline:before{content:\"\\F0B6A\"}.mdi-camera-flip:before{content:\"\\F15D9\"}.mdi-camera-flip-outline:before{content:\"\\F15DA\"}.mdi-camera-front:before{content:\"\\F0102\"}.mdi-camera-front-variant:before{content:\"\\F0103\"}.mdi-camera-gopro:before{content:\"\\F07A1\"}.mdi-camera-image:before{content:\"\\F08CC\"}.mdi-camera-iris:before{content:\"\\F0104\"}.mdi-camera-metering-center:before{content:\"\\F07A2\"}.mdi-camera-metering-matrix:before{content:\"\\F07A3\"}.mdi-camera-metering-partial:before{content:\"\\F07A4\"}.mdi-camera-metering-spot:before{content:\"\\F07A5\"}.mdi-camera-off:before{content:\"\\F05DF\"}.mdi-camera-outline:before{content:\"\\F0D5D\"}.mdi-camera-party-mode:before{content:\"\\F0105\"}.mdi-camera-plus:before{content:\"\\F0EDB\"}.mdi-camera-plus-outline:before{content:\"\\F0EDC\"}.mdi-camera-rear:before{content:\"\\F0106\"}.mdi-camera-rear-variant:before{content:\"\\F0107\"}.mdi-camera-retake:before{content:\"\\F0E19\"}.mdi-camera-retake-outline:before{content:\"\\F0E1A\"}.mdi-camera-switch:before{content:\"\\F0108\"}.mdi-camera-switch-outline:before{content:\"\\F084A\"}.mdi-camera-timer:before{content:\"\\F0109\"}.mdi-camera-wireless:before{content:\"\\F0DB6\"}.mdi-camera-wireless-outline:before{content:\"\\F0DB7\"}.mdi-campfire:before{content:\"\\F0EDD\"}.mdi-cancel:before{content:\"\\F073A\"}.mdi-candle:before{content:\"\\F05E2\"}.mdi-candycane:before{content:\"\\F010A\"}.mdi-cannabis:before{content:\"\\F07A6\"}.mdi-cannabis-off:before{content:\"\\F166E\"}.mdi-caps-lock:before{content:\"\\F0A9B\"}.mdi-car:before{content:\"\\F010B\"}.mdi-car-2-plus:before{content:\"\\F1015\"}.mdi-car-3-plus:before{content:\"\\F1016\"}.mdi-car-arrow-left:before{content:\"\\F13B2\"}.mdi-car-arrow-right:before{content:\"\\F13B3\"}.mdi-car-back:before{content:\"\\F0E1B\"}.mdi-car-battery:before{content:\"\\F010C\"}.mdi-car-brake-abs:before{content:\"\\F0C47\"}.mdi-car-brake-alert:before{content:\"\\F0C48\"}.mdi-car-brake-hold:before{content:\"\\F0D5E\"}.mdi-car-brake-parking:before{content:\"\\F0D5F\"}.mdi-car-brake-retarder:before{content:\"\\F1017\"}.mdi-car-child-seat:before{content:\"\\F0FA3\"}.mdi-car-clutch:before{content:\"\\F1018\"}.mdi-car-cog:before{content:\"\\F13CC\"}.mdi-car-connected:before{content:\"\\F010D\"}.mdi-car-convertible:before{content:\"\\F07A7\"}.mdi-car-coolant-level:before{content:\"\\F1019\"}.mdi-car-cruise-control:before{content:\"\\F0D60\"}.mdi-car-defrost-front:before{content:\"\\F0D61\"}.mdi-car-defrost-rear:before{content:\"\\F0D62\"}.mdi-car-door:before{content:\"\\F0B6B\"}.mdi-car-door-lock:before{content:\"\\F109D\"}.mdi-car-electric:before{content:\"\\F0B6C\"}.mdi-car-electric-outline:before{content:\"\\F15B5\"}.mdi-car-emergency:before{content:\"\\F160F\"}.mdi-car-esp:before{content:\"\\F0C49\"}.mdi-car-estate:before{content:\"\\F07A8\"}.mdi-car-hatchback:before{content:\"\\F07A9\"}.mdi-car-info:before{content:\"\\F11BE\"}.mdi-car-key:before{content:\"\\F0B6D\"}.mdi-car-lifted-pickup:before{content:\"\\F152D\"}.mdi-car-light-dimmed:before{content:\"\\F0C4A\"}.mdi-car-light-fog:before{content:\"\\F0C4B\"}.mdi-car-light-high:before{content:\"\\F0C4C\"}.mdi-car-limousine:before{content:\"\\F08CD\"}.mdi-car-multiple:before{content:\"\\F0B6E\"}.mdi-car-off:before{content:\"\\F0E1C\"}.mdi-car-outline:before{content:\"\\F14ED\"}.mdi-car-parking-lights:before{content:\"\\F0D63\"}.mdi-car-pickup:before{content:\"\\F07AA\"}.mdi-car-seat:before{content:\"\\F0FA4\"}.mdi-car-seat-cooler:before{content:\"\\F0FA5\"}.mdi-car-seat-heater:before{content:\"\\F0FA6\"}.mdi-car-settings:before{content:\"\\F13CD\"}.mdi-car-shift-pattern:before{content:\"\\F0F40\"}.mdi-car-side:before{content:\"\\F07AB\"}.mdi-car-sports:before{content:\"\\F07AC\"}.mdi-car-tire-alert:before{content:\"\\F0C4D\"}.mdi-car-traction-control:before{content:\"\\F0D64\"}.mdi-car-turbocharger:before{content:\"\\F101A\"}.mdi-car-wash:before{content:\"\\F010E\"}.mdi-car-windshield:before{content:\"\\F101B\"}.mdi-car-windshield-outline:before{content:\"\\F101C\"}.mdi-carabiner:before{content:\"\\F14C0\"}.mdi-caravan:before{content:\"\\F07AD\"}.mdi-card:before{content:\"\\F0B6F\"}.mdi-card-account-details:before{content:\"\\F05D2\"}.mdi-card-account-details-outline:before{content:\"\\F0DAB\"}.mdi-card-account-details-star:before{content:\"\\F02A3\"}.mdi-card-account-details-star-outline:before{content:\"\\F06DB\"}.mdi-card-account-mail:before{content:\"\\F018E\"}.mdi-card-account-mail-outline:before{content:\"\\F0E98\"}.mdi-card-account-phone:before{content:\"\\F0E99\"}.mdi-card-account-phone-outline:before{content:\"\\F0E9A\"}.mdi-card-bulleted:before{content:\"\\F0B70\"}.mdi-card-bulleted-off:before{content:\"\\F0B71\"}.mdi-card-bulleted-off-outline:before{content:\"\\F0B72\"}.mdi-card-bulleted-outline:before{content:\"\\F0B73\"}.mdi-card-bulleted-settings:before{content:\"\\F0B74\"}.mdi-card-bulleted-settings-outline:before{content:\"\\F0B75\"}.mdi-card-minus:before{content:\"\\F1600\"}.mdi-card-minus-outline:before{content:\"\\F1601\"}.mdi-card-off:before{content:\"\\F1602\"}.mdi-card-off-outline:before{content:\"\\F1603\"}.mdi-card-outline:before{content:\"\\F0B76\"}.mdi-card-plus:before{content:\"\\F11FF\"}.mdi-card-plus-outline:before{content:\"\\F1200\"}.mdi-card-remove:before{content:\"\\F1604\"}.mdi-card-remove-outline:before{content:\"\\F1605\"}.mdi-card-search:before{content:\"\\F1074\"}.mdi-card-search-outline:before{content:\"\\F1075\"}.mdi-card-text:before{content:\"\\F0B77\"}.mdi-card-text-outline:before{content:\"\\F0B78\"}.mdi-cards:before{content:\"\\F0638\"}.mdi-cards-club:before{content:\"\\F08CE\"}.mdi-cards-diamond:before{content:\"\\F08CF\"}.mdi-cards-diamond-outline:before{content:\"\\F101D\"}.mdi-cards-heart:before{content:\"\\F08D0\"}.mdi-cards-outline:before{content:\"\\F0639\"}.mdi-cards-playing-outline:before{content:\"\\F063A\"}.mdi-cards-spade:before{content:\"\\F08D1\"}.mdi-cards-variant:before{content:\"\\F06C7\"}.mdi-carrot:before{content:\"\\F010F\"}.mdi-cart:before{content:\"\\F0110\"}.mdi-cart-arrow-down:before{content:\"\\F0D66\"}.mdi-cart-arrow-right:before{content:\"\\F0C4E\"}.mdi-cart-arrow-up:before{content:\"\\F0D67\"}.mdi-cart-check:before{content:\"\\F15EA\"}.mdi-cart-minus:before{content:\"\\F0D68\"}.mdi-cart-off:before{content:\"\\F066B\"}.mdi-cart-outline:before{content:\"\\F0111\"}.mdi-cart-plus:before{content:\"\\F0112\"}.mdi-cart-remove:before{content:\"\\F0D69\"}.mdi-cart-variant:before{content:\"\\F15EB\"}.mdi-case-sensitive-alt:before{content:\"\\F0113\"}.mdi-cash:before{content:\"\\F0114\"}.mdi-cash-100:before{content:\"\\F0115\"}.mdi-cash-check:before{content:\"\\F14EE\"}.mdi-cash-lock:before{content:\"\\F14EA\"}.mdi-cash-lock-open:before{content:\"\\F14EB\"}.mdi-cash-marker:before{content:\"\\F0DB8\"}.mdi-cash-minus:before{content:\"\\F1260\"}.mdi-cash-multiple:before{content:\"\\F0116\"}.mdi-cash-plus:before{content:\"\\F1261\"}.mdi-cash-refund:before{content:\"\\F0A9C\"}.mdi-cash-register:before{content:\"\\F0CF4\"}.mdi-cash-remove:before{content:\"\\F1262\"}.mdi-cash-usd:before{content:\"\\F1176\"}.mdi-cash-usd-outline:before{content:\"\\F0117\"}.mdi-cassette:before{content:\"\\F09D4\"}.mdi-cast:before{content:\"\\F0118\"}.mdi-cast-audio:before{content:\"\\F101E\"}.mdi-cast-connected:before{content:\"\\F0119\"}.mdi-cast-education:before{content:\"\\F0E1D\"}.mdi-cast-off:before{content:\"\\F078A\"}.mdi-castle:before{content:\"\\F011A\"}.mdi-cat:before{content:\"\\F011B\"}.mdi-cctv:before{content:\"\\F07AE\"}.mdi-ceiling-light:before{content:\"\\F0769\"}.mdi-cellphone:before{content:\"\\F011C\"}.mdi-cellphone-android:before{content:\"\\F011D\"}.mdi-cellphone-arrow-down:before{content:\"\\F09D5\"}.mdi-cellphone-basic:before{content:\"\\F011E\"}.mdi-cellphone-charging:before{content:\"\\F1397\"}.mdi-cellphone-cog:before{content:\"\\F0951\"}.mdi-cellphone-dock:before{content:\"\\F011F\"}.mdi-cellphone-erase:before{content:\"\\F094D\"}.mdi-cellphone-information:before{content:\"\\F0F41\"}.mdi-cellphone-iphone:before{content:\"\\F0120\"}.mdi-cellphone-key:before{content:\"\\F094E\"}.mdi-cellphone-link:before{content:\"\\F0121\"}.mdi-cellphone-link-off:before{content:\"\\F0122\"}.mdi-cellphone-lock:before{content:\"\\F094F\"}.mdi-cellphone-message:before{content:\"\\F08D3\"}.mdi-cellphone-message-off:before{content:\"\\F10D2\"}.mdi-cellphone-nfc:before{content:\"\\F0E90\"}.mdi-cellphone-nfc-off:before{content:\"\\F12D8\"}.mdi-cellphone-off:before{content:\"\\F0950\"}.mdi-cellphone-play:before{content:\"\\F101F\"}.mdi-cellphone-screenshot:before{content:\"\\F0A35\"}.mdi-cellphone-settings:before{content:\"\\F0123\"}.mdi-cellphone-sound:before{content:\"\\F0952\"}.mdi-cellphone-text:before{content:\"\\F08D2\"}.mdi-cellphone-wireless:before{content:\"\\F0815\"}.mdi-celtic-cross:before{content:\"\\F0CF5\"}.mdi-centos:before{content:\"\\F111A\"}.mdi-certificate:before{content:\"\\F0124\"}.mdi-certificate-outline:before{content:\"\\F1188\"}.mdi-chair-rolling:before{content:\"\\F0F48\"}.mdi-chair-school:before{content:\"\\F0125\"}.mdi-charity:before{content:\"\\F0C4F\"}.mdi-chart-arc:before{content:\"\\F0126\"}.mdi-chart-areaspline:before{content:\"\\F0127\"}.mdi-chart-areaspline-variant:before{content:\"\\F0E91\"}.mdi-chart-bar:before{content:\"\\F0128\"}.mdi-chart-bar-stacked:before{content:\"\\F076A\"}.mdi-chart-bell-curve:before{content:\"\\F0C50\"}.mdi-chart-bell-curve-cumulative:before{content:\"\\F0FA7\"}.mdi-chart-box:before{content:\"\\F154D\"}.mdi-chart-box-outline:before{content:\"\\F154E\"}.mdi-chart-box-plus-outline:before{content:\"\\F154F\"}.mdi-chart-bubble:before{content:\"\\F05E3\"}.mdi-chart-donut:before{content:\"\\F07AF\"}.mdi-chart-donut-variant:before{content:\"\\F07B0\"}.mdi-chart-gantt:before{content:\"\\F066C\"}.mdi-chart-histogram:before{content:\"\\F0129\"}.mdi-chart-line:before{content:\"\\F012A\"}.mdi-chart-line-stacked:before{content:\"\\F076B\"}.mdi-chart-line-variant:before{content:\"\\F07B1\"}.mdi-chart-multiline:before{content:\"\\F08D4\"}.mdi-chart-multiple:before{content:\"\\F1213\"}.mdi-chart-pie:before{content:\"\\F012B\"}.mdi-chart-ppf:before{content:\"\\F1380\"}.mdi-chart-sankey:before{content:\"\\F11DF\"}.mdi-chart-sankey-variant:before{content:\"\\F11E0\"}.mdi-chart-scatter-plot:before{content:\"\\F0E92\"}.mdi-chart-scatter-plot-hexbin:before{content:\"\\F066D\"}.mdi-chart-timeline:before{content:\"\\F066E\"}.mdi-chart-timeline-variant:before{content:\"\\F0E93\"}.mdi-chart-timeline-variant-shimmer:before{content:\"\\F15B6\"}.mdi-chart-tree:before{content:\"\\F0E94\"}.mdi-chat:before{content:\"\\F0B79\"}.mdi-chat-alert:before{content:\"\\F0B7A\"}.mdi-chat-alert-outline:before{content:\"\\F12C9\"}.mdi-chat-minus:before{content:\"\\F1410\"}.mdi-chat-minus-outline:before{content:\"\\F1413\"}.mdi-chat-outline:before{content:\"\\F0EDE\"}.mdi-chat-plus:before{content:\"\\F140F\"}.mdi-chat-plus-outline:before{content:\"\\F1412\"}.mdi-chat-processing:before{content:\"\\F0B7B\"}.mdi-chat-processing-outline:before{content:\"\\F12CA\"}.mdi-chat-remove:before{content:\"\\F1411\"}.mdi-chat-remove-outline:before{content:\"\\F1414\"}.mdi-chat-sleep:before{content:\"\\F12D1\"}.mdi-chat-sleep-outline:before{content:\"\\F12D2\"}.mdi-check:before{content:\"\\F012C\"}.mdi-check-all:before{content:\"\\F012D\"}.mdi-check-bold:before{content:\"\\F0E1E\"}.mdi-check-box-multiple-outline:before{content:\"\\F0C51\"}.mdi-check-box-outline:before{content:\"\\F0C52\"}.mdi-check-circle:before{content:\"\\F05E0\"}.mdi-check-circle-outline:before{content:\"\\F05E1\"}.mdi-check-decagram:before{content:\"\\F0791\"}.mdi-check-network:before{content:\"\\F0C53\"}.mdi-check-network-outline:before{content:\"\\F0C54\"}.mdi-check-outline:before{content:\"\\F0855\"}.mdi-check-underline:before{content:\"\\F0E1F\"}.mdi-check-underline-circle:before{content:\"\\F0E20\"}.mdi-check-underline-circle-outline:before{content:\"\\F0E21\"}.mdi-checkbook:before{content:\"\\F0A9D\"}.mdi-checkbox-blank:before{content:\"\\F012E\"}.mdi-checkbox-blank-circle:before{content:\"\\F012F\"}.mdi-checkbox-blank-circle-outline:before{content:\"\\F0130\"}.mdi-checkbox-blank-off:before{content:\"\\F12EC\"}.mdi-checkbox-blank-off-outline:before{content:\"\\F12ED\"}.mdi-checkbox-blank-outline:before{content:\"\\F0131\"}.mdi-checkbox-intermediate:before{content:\"\\F0856\"}.mdi-checkbox-marked:before{content:\"\\F0132\"}.mdi-checkbox-marked-circle:before{content:\"\\F0133\"}.mdi-checkbox-marked-circle-outline:before{content:\"\\F0134\"}.mdi-checkbox-marked-outline:before{content:\"\\F0135\"}.mdi-checkbox-multiple-blank:before{content:\"\\F0136\"}.mdi-checkbox-multiple-blank-circle:before{content:\"\\F063B\"}.mdi-checkbox-multiple-blank-circle-outline:before{content:\"\\F063C\"}.mdi-checkbox-multiple-blank-outline:before{content:\"\\F0137\"}.mdi-checkbox-multiple-marked:before{content:\"\\F0138\"}.mdi-checkbox-multiple-marked-circle:before{content:\"\\F063D\"}.mdi-checkbox-multiple-marked-circle-outline:before{content:\"\\F063E\"}.mdi-checkbox-multiple-marked-outline:before{content:\"\\F0139\"}.mdi-checkerboard:before{content:\"\\F013A\"}.mdi-checkerboard-minus:before{content:\"\\F1202\"}.mdi-checkerboard-plus:before{content:\"\\F1201\"}.mdi-checkerboard-remove:before{content:\"\\F1203\"}.mdi-cheese:before{content:\"\\F12B9\"}.mdi-cheese-off:before{content:\"\\F13EE\"}.mdi-chef-hat:before{content:\"\\F0B7C\"}.mdi-chemical-weapon:before{content:\"\\F013B\"}.mdi-chess-bishop:before{content:\"\\F085C\"}.mdi-chess-king:before{content:\"\\F0857\"}.mdi-chess-knight:before{content:\"\\F0858\"}.mdi-chess-pawn:before{content:\"\\F0859\"}.mdi-chess-queen:before{content:\"\\F085A\"}.mdi-chess-rook:before{content:\"\\F085B\"}.mdi-chevron-double-down:before{content:\"\\F013C\"}.mdi-chevron-double-left:before{content:\"\\F013D\"}.mdi-chevron-double-right:before{content:\"\\F013E\"}.mdi-chevron-double-up:before{content:\"\\F013F\"}.mdi-chevron-down:before{content:\"\\F0140\"}.mdi-chevron-down-box:before{content:\"\\F09D6\"}.mdi-chevron-down-box-outline:before{content:\"\\F09D7\"}.mdi-chevron-down-circle:before{content:\"\\F0B26\"}.mdi-chevron-down-circle-outline:before{content:\"\\F0B27\"}.mdi-chevron-left:before{content:\"\\F0141\"}.mdi-chevron-left-box:before{content:\"\\F09D8\"}.mdi-chevron-left-box-outline:before{content:\"\\F09D9\"}.mdi-chevron-left-circle:before{content:\"\\F0B28\"}.mdi-chevron-left-circle-outline:before{content:\"\\F0B29\"}.mdi-chevron-right:before{content:\"\\F0142\"}.mdi-chevron-right-box:before{content:\"\\F09DA\"}.mdi-chevron-right-box-outline:before{content:\"\\F09DB\"}.mdi-chevron-right-circle:before{content:\"\\F0B2A\"}.mdi-chevron-right-circle-outline:before{content:\"\\F0B2B\"}.mdi-chevron-triple-down:before{content:\"\\F0DB9\"}.mdi-chevron-triple-left:before{content:\"\\F0DBA\"}.mdi-chevron-triple-right:before{content:\"\\F0DBB\"}.mdi-chevron-triple-up:before{content:\"\\F0DBC\"}.mdi-chevron-up:before{content:\"\\F0143\"}.mdi-chevron-up-box:before{content:\"\\F09DC\"}.mdi-chevron-up-box-outline:before{content:\"\\F09DD\"}.mdi-chevron-up-circle:before{content:\"\\F0B2C\"}.mdi-chevron-up-circle-outline:before{content:\"\\F0B2D\"}.mdi-chili-hot:before{content:\"\\F07B2\"}.mdi-chili-medium:before{content:\"\\F07B3\"}.mdi-chili-mild:before{content:\"\\F07B4\"}.mdi-chili-off:before{content:\"\\F1467\"}.mdi-chip:before{content:\"\\F061A\"}.mdi-christianity:before{content:\"\\F0953\"}.mdi-christianity-outline:before{content:\"\\F0CF6\"}.mdi-church:before{content:\"\\F0144\"}.mdi-cigar:before{content:\"\\F1189\"}.mdi-cigar-off:before{content:\"\\F141B\"}.mdi-circle:before{content:\"\\F0765\"}.mdi-circle-box:before{content:\"\\F15DC\"}.mdi-circle-box-outline:before{content:\"\\F15DD\"}.mdi-circle-double:before{content:\"\\F0E95\"}.mdi-circle-edit-outline:before{content:\"\\F08D5\"}.mdi-circle-expand:before{content:\"\\F0E96\"}.mdi-circle-half:before{content:\"\\F1395\"}.mdi-circle-half-full:before{content:\"\\F1396\"}.mdi-circle-medium:before{content:\"\\F09DE\"}.mdi-circle-multiple:before{content:\"\\F0B38\"}.mdi-circle-multiple-outline:before{content:\"\\F0695\"}.mdi-circle-off-outline:before{content:\"\\F10D3\"}.mdi-circle-outline:before{content:\"\\F0766\"}.mdi-circle-slice-1:before{content:\"\\F0A9E\"}.mdi-circle-slice-2:before{content:\"\\F0A9F\"}.mdi-circle-slice-3:before{content:\"\\F0AA0\"}.mdi-circle-slice-4:before{content:\"\\F0AA1\"}.mdi-circle-slice-5:before{content:\"\\F0AA2\"}.mdi-circle-slice-6:before{content:\"\\F0AA3\"}.mdi-circle-slice-7:before{content:\"\\F0AA4\"}.mdi-circle-slice-8:before{content:\"\\F0AA5\"}.mdi-circle-small:before{content:\"\\F09DF\"}.mdi-circular-saw:before{content:\"\\F0E22\"}.mdi-city:before{content:\"\\F0146\"}.mdi-city-variant:before{content:\"\\F0A36\"}.mdi-city-variant-outline:before{content:\"\\F0A37\"}.mdi-clipboard:before{content:\"\\F0147\"}.mdi-clipboard-account:before{content:\"\\F0148\"}.mdi-clipboard-account-outline:before{content:\"\\F0C55\"}.mdi-clipboard-alert:before{content:\"\\F0149\"}.mdi-clipboard-alert-outline:before{content:\"\\F0CF7\"}.mdi-clipboard-arrow-down:before{content:\"\\F014A\"}.mdi-clipboard-arrow-down-outline:before{content:\"\\F0C56\"}.mdi-clipboard-arrow-left:before{content:\"\\F014B\"}.mdi-clipboard-arrow-left-outline:before{content:\"\\F0CF8\"}.mdi-clipboard-arrow-right:before{content:\"\\F0CF9\"}.mdi-clipboard-arrow-right-outline:before{content:\"\\F0CFA\"}.mdi-clipboard-arrow-up:before{content:\"\\F0C57\"}.mdi-clipboard-arrow-up-outline:before{content:\"\\F0C58\"}.mdi-clipboard-check:before{content:\"\\F014E\"}.mdi-clipboard-check-multiple:before{content:\"\\F1263\"}.mdi-clipboard-check-multiple-outline:before{content:\"\\F1264\"}.mdi-clipboard-check-outline:before{content:\"\\F08A8\"}.mdi-clipboard-edit:before{content:\"\\F14E5\"}.mdi-clipboard-edit-outline:before{content:\"\\F14E6\"}.mdi-clipboard-file:before{content:\"\\F1265\"}.mdi-clipboard-file-outline:before{content:\"\\F1266\"}.mdi-clipboard-flow:before{content:\"\\F06C8\"}.mdi-clipboard-flow-outline:before{content:\"\\F1117\"}.mdi-clipboard-list:before{content:\"\\F10D4\"}.mdi-clipboard-list-outline:before{content:\"\\F10D5\"}.mdi-clipboard-minus:before{content:\"\\F1618\"}.mdi-clipboard-minus-outline:before{content:\"\\F1619\"}.mdi-clipboard-multiple:before{content:\"\\F1267\"}.mdi-clipboard-multiple-outline:before{content:\"\\F1268\"}.mdi-clipboard-off:before{content:\"\\F161A\"}.mdi-clipboard-off-outline:before{content:\"\\F161B\"}.mdi-clipboard-outline:before{content:\"\\F014C\"}.mdi-clipboard-play:before{content:\"\\F0C59\"}.mdi-clipboard-play-multiple:before{content:\"\\F1269\"}.mdi-clipboard-play-multiple-outline:before{content:\"\\F126A\"}.mdi-clipboard-play-outline:before{content:\"\\F0C5A\"}.mdi-clipboard-plus:before{content:\"\\F0751\"}.mdi-clipboard-plus-outline:before{content:\"\\F131F\"}.mdi-clipboard-pulse:before{content:\"\\F085D\"}.mdi-clipboard-pulse-outline:before{content:\"\\F085E\"}.mdi-clipboard-remove:before{content:\"\\F161C\"}.mdi-clipboard-remove-outline:before{content:\"\\F161D\"}.mdi-clipboard-search:before{content:\"\\F161E\"}.mdi-clipboard-search-outline:before{content:\"\\F161F\"}.mdi-clipboard-text:before{content:\"\\F014D\"}.mdi-clipboard-text-multiple:before{content:\"\\F126B\"}.mdi-clipboard-text-multiple-outline:before{content:\"\\F126C\"}.mdi-clipboard-text-off:before{content:\"\\F1620\"}.mdi-clipboard-text-off-outline:before{content:\"\\F1621\"}.mdi-clipboard-text-outline:before{content:\"\\F0A38\"}.mdi-clipboard-text-play:before{content:\"\\F0C5B\"}.mdi-clipboard-text-play-outline:before{content:\"\\F0C5C\"}.mdi-clipboard-text-search:before{content:\"\\F1622\"}.mdi-clipboard-text-search-outline:before{content:\"\\F1623\"}.mdi-clippy:before{content:\"\\F014F\"}.mdi-clock:before{content:\"\\F0954\"}.mdi-clock-alert:before{content:\"\\F0955\"}.mdi-clock-alert-outline:before{content:\"\\F05CE\"}.mdi-clock-check:before{content:\"\\F0FA8\"}.mdi-clock-check-outline:before{content:\"\\F0FA9\"}.mdi-clock-digital:before{content:\"\\F0E97\"}.mdi-clock-end:before{content:\"\\F0151\"}.mdi-clock-fast:before{content:\"\\F0152\"}.mdi-clock-in:before{content:\"\\F0153\"}.mdi-clock-out:before{content:\"\\F0154\"}.mdi-clock-outline:before{content:\"\\F0150\"}.mdi-clock-start:before{content:\"\\F0155\"}.mdi-clock-time-eight:before{content:\"\\F1446\"}.mdi-clock-time-eight-outline:before{content:\"\\F1452\"}.mdi-clock-time-eleven:before{content:\"\\F1449\"}.mdi-clock-time-eleven-outline:before{content:\"\\F1455\"}.mdi-clock-time-five:before{content:\"\\F1443\"}.mdi-clock-time-five-outline:before{content:\"\\F144F\"}.mdi-clock-time-four:before{content:\"\\F1442\"}.mdi-clock-time-four-outline:before{content:\"\\F144E\"}.mdi-clock-time-nine:before{content:\"\\F1447\"}.mdi-clock-time-nine-outline:before{content:\"\\F1453\"}.mdi-clock-time-one:before{content:\"\\F143F\"}.mdi-clock-time-one-outline:before{content:\"\\F144B\"}.mdi-clock-time-seven:before{content:\"\\F1445\"}.mdi-clock-time-seven-outline:before{content:\"\\F1451\"}.mdi-clock-time-six:before{content:\"\\F1444\"}.mdi-clock-time-six-outline:before{content:\"\\F1450\"}.mdi-clock-time-ten:before{content:\"\\F1448\"}.mdi-clock-time-ten-outline:before{content:\"\\F1454\"}.mdi-clock-time-three:before{content:\"\\F1441\"}.mdi-clock-time-three-outline:before{content:\"\\F144D\"}.mdi-clock-time-twelve:before{content:\"\\F144A\"}.mdi-clock-time-twelve-outline:before{content:\"\\F1456\"}.mdi-clock-time-two:before{content:\"\\F1440\"}.mdi-clock-time-two-outline:before{content:\"\\F144C\"}.mdi-close:before{content:\"\\F0156\"}.mdi-close-box:before{content:\"\\F0157\"}.mdi-close-box-multiple:before{content:\"\\F0C5D\"}.mdi-close-box-multiple-outline:before{content:\"\\F0C5E\"}.mdi-close-box-outline:before{content:\"\\F0158\"}.mdi-close-circle:before{content:\"\\F0159\"}.mdi-close-circle-multiple:before{content:\"\\F062A\"}.mdi-close-circle-multiple-outline:before{content:\"\\F0883\"}.mdi-close-circle-outline:before{content:\"\\F015A\"}.mdi-close-network:before{content:\"\\F015B\"}.mdi-close-network-outline:before{content:\"\\F0C5F\"}.mdi-close-octagon:before{content:\"\\F015C\"}.mdi-close-octagon-outline:before{content:\"\\F015D\"}.mdi-close-outline:before{content:\"\\F06C9\"}.mdi-close-thick:before{content:\"\\F1398\"}.mdi-closed-caption:before{content:\"\\F015E\"}.mdi-closed-caption-outline:before{content:\"\\F0DBD\"}.mdi-cloud:before{content:\"\\F015F\"}.mdi-cloud-alert:before{content:\"\\F09E0\"}.mdi-cloud-braces:before{content:\"\\F07B5\"}.mdi-cloud-check:before{content:\"\\F0160\"}.mdi-cloud-check-outline:before{content:\"\\F12CC\"}.mdi-cloud-circle:before{content:\"\\F0161\"}.mdi-cloud-download:before{content:\"\\F0162\"}.mdi-cloud-download-outline:before{content:\"\\F0B7D\"}.mdi-cloud-lock:before{content:\"\\F11F1\"}.mdi-cloud-lock-outline:before{content:\"\\F11F2\"}.mdi-cloud-off-outline:before{content:\"\\F0164\"}.mdi-cloud-outline:before{content:\"\\F0163\"}.mdi-cloud-print:before{content:\"\\F0165\"}.mdi-cloud-print-outline:before{content:\"\\F0166\"}.mdi-cloud-question:before{content:\"\\F0A39\"}.mdi-cloud-refresh:before{content:\"\\F052A\"}.mdi-cloud-search:before{content:\"\\F0956\"}.mdi-cloud-search-outline:before{content:\"\\F0957\"}.mdi-cloud-sync:before{content:\"\\F063F\"}.mdi-cloud-sync-outline:before{content:\"\\F12D6\"}.mdi-cloud-tags:before{content:\"\\F07B6\"}.mdi-cloud-upload:before{content:\"\\F0167\"}.mdi-cloud-upload-outline:before{content:\"\\F0B7E\"}.mdi-clover:before{content:\"\\F0816\"}.mdi-coach-lamp:before{content:\"\\F1020\"}.mdi-coat-rack:before{content:\"\\F109E\"}.mdi-code-array:before{content:\"\\F0168\"}.mdi-code-braces:before{content:\"\\F0169\"}.mdi-code-braces-box:before{content:\"\\F10D6\"}.mdi-code-brackets:before{content:\"\\F016A\"}.mdi-code-equal:before{content:\"\\F016B\"}.mdi-code-greater-than:before{content:\"\\F016C\"}.mdi-code-greater-than-or-equal:before{content:\"\\F016D\"}.mdi-code-json:before{content:\"\\F0626\"}.mdi-code-less-than:before{content:\"\\F016E\"}.mdi-code-less-than-or-equal:before{content:\"\\F016F\"}.mdi-code-not-equal:before{content:\"\\F0170\"}.mdi-code-not-equal-variant:before{content:\"\\F0171\"}.mdi-code-parentheses:before{content:\"\\F0172\"}.mdi-code-parentheses-box:before{content:\"\\F10D7\"}.mdi-code-string:before{content:\"\\F0173\"}.mdi-code-tags:before{content:\"\\F0174\"}.mdi-code-tags-check:before{content:\"\\F0694\"}.mdi-codepen:before{content:\"\\F0175\"}.mdi-coffee:before{content:\"\\F0176\"}.mdi-coffee-maker:before{content:\"\\F109F\"}.mdi-coffee-off:before{content:\"\\F0FAA\"}.mdi-coffee-off-outline:before{content:\"\\F0FAB\"}.mdi-coffee-outline:before{content:\"\\F06CA\"}.mdi-coffee-to-go:before{content:\"\\F0177\"}.mdi-coffee-to-go-outline:before{content:\"\\F130E\"}.mdi-coffin:before{content:\"\\F0B7F\"}.mdi-cog:before{content:\"\\F0493\"}.mdi-cog-box:before{content:\"\\F0494\"}.mdi-cog-clockwise:before{content:\"\\F11DD\"}.mdi-cog-counterclockwise:before{content:\"\\F11DE\"}.mdi-cog-off:before{content:\"\\F13CE\"}.mdi-cog-off-outline:before{content:\"\\F13CF\"}.mdi-cog-outline:before{content:\"\\F08BB\"}.mdi-cog-refresh:before{content:\"\\F145E\"}.mdi-cog-refresh-outline:before{content:\"\\F145F\"}.mdi-cog-sync:before{content:\"\\F1460\"}.mdi-cog-sync-outline:before{content:\"\\F1461\"}.mdi-cog-transfer:before{content:\"\\F105B\"}.mdi-cog-transfer-outline:before{content:\"\\F105C\"}.mdi-cogs:before{content:\"\\F08D6\"}.mdi-collage:before{content:\"\\F0640\"}.mdi-collapse-all:before{content:\"\\F0AA6\"}.mdi-collapse-all-outline:before{content:\"\\F0AA7\"}.mdi-color-helper:before{content:\"\\F0179\"}.mdi-comma:before{content:\"\\F0E23\"}.mdi-comma-box:before{content:\"\\F0E2B\"}.mdi-comma-box-outline:before{content:\"\\F0E24\"}.mdi-comma-circle:before{content:\"\\F0E25\"}.mdi-comma-circle-outline:before{content:\"\\F0E26\"}.mdi-comment:before{content:\"\\F017A\"}.mdi-comment-account:before{content:\"\\F017B\"}.mdi-comment-account-outline:before{content:\"\\F017C\"}.mdi-comment-alert:before{content:\"\\F017D\"}.mdi-comment-alert-outline:before{content:\"\\F017E\"}.mdi-comment-arrow-left:before{content:\"\\F09E1\"}.mdi-comment-arrow-left-outline:before{content:\"\\F09E2\"}.mdi-comment-arrow-right:before{content:\"\\F09E3\"}.mdi-comment-arrow-right-outline:before{content:\"\\F09E4\"}.mdi-comment-bookmark:before{content:\"\\F15AE\"}.mdi-comment-bookmark-outline:before{content:\"\\F15AF\"}.mdi-comment-check:before{content:\"\\F017F\"}.mdi-comment-check-outline:before{content:\"\\F0180\"}.mdi-comment-edit:before{content:\"\\F11BF\"}.mdi-comment-edit-outline:before{content:\"\\F12C4\"}.mdi-comment-eye:before{content:\"\\F0A3A\"}.mdi-comment-eye-outline:before{content:\"\\F0A3B\"}.mdi-comment-flash:before{content:\"\\F15B0\"}.mdi-comment-flash-outline:before{content:\"\\F15B1\"}.mdi-comment-minus:before{content:\"\\F15DF\"}.mdi-comment-minus-outline:before{content:\"\\F15E0\"}.mdi-comment-multiple:before{content:\"\\F085F\"}.mdi-comment-multiple-outline:before{content:\"\\F0181\"}.mdi-comment-off:before{content:\"\\F15E1\"}.mdi-comment-off-outline:before{content:\"\\F15E2\"}.mdi-comment-outline:before{content:\"\\F0182\"}.mdi-comment-plus:before{content:\"\\F09E5\"}.mdi-comment-plus-outline:before{content:\"\\F0183\"}.mdi-comment-processing:before{content:\"\\F0184\"}.mdi-comment-processing-outline:before{content:\"\\F0185\"}.mdi-comment-question:before{content:\"\\F0817\"}.mdi-comment-question-outline:before{content:\"\\F0186\"}.mdi-comment-quote:before{content:\"\\F1021\"}.mdi-comment-quote-outline:before{content:\"\\F1022\"}.mdi-comment-remove:before{content:\"\\F05DE\"}.mdi-comment-remove-outline:before{content:\"\\F0187\"}.mdi-comment-search:before{content:\"\\F0A3C\"}.mdi-comment-search-outline:before{content:\"\\F0A3D\"}.mdi-comment-text:before{content:\"\\F0188\"}.mdi-comment-text-multiple:before{content:\"\\F0860\"}.mdi-comment-text-multiple-outline:before{content:\"\\F0861\"}.mdi-comment-text-outline:before{content:\"\\F0189\"}.mdi-compare:before{content:\"\\F018A\"}.mdi-compare-horizontal:before{content:\"\\F1492\"}.mdi-compare-vertical:before{content:\"\\F1493\"}.mdi-compass:before{content:\"\\F018B\"}.mdi-compass-off:before{content:\"\\F0B80\"}.mdi-compass-off-outline:before{content:\"\\F0B81\"}.mdi-compass-outline:before{content:\"\\F018C\"}.mdi-compass-rose:before{content:\"\\F1382\"}.mdi-concourse-ci:before{content:\"\\F10A0\"}.mdi-connection:before{content:\"\\F1616\"}.mdi-console:before{content:\"\\F018D\"}.mdi-console-line:before{content:\"\\F07B7\"}.mdi-console-network:before{content:\"\\F08A9\"}.mdi-console-network-outline:before{content:\"\\F0C60\"}.mdi-consolidate:before{content:\"\\F10D8\"}.mdi-contactless-payment:before{content:\"\\F0D6A\"}.mdi-contactless-payment-circle:before{content:\"\\F0321\"}.mdi-contactless-payment-circle-outline:before{content:\"\\F0408\"}.mdi-contacts:before{content:\"\\F06CB\"}.mdi-contacts-outline:before{content:\"\\F05B8\"}.mdi-contain:before{content:\"\\F0A3E\"}.mdi-contain-end:before{content:\"\\F0A3F\"}.mdi-contain-start:before{content:\"\\F0A40\"}.mdi-content-copy:before{content:\"\\F018F\"}.mdi-content-cut:before{content:\"\\F0190\"}.mdi-content-duplicate:before{content:\"\\F0191\"}.mdi-content-paste:before{content:\"\\F0192\"}.mdi-content-save:before{content:\"\\F0193\"}.mdi-content-save-alert:before{content:\"\\F0F42\"}.mdi-content-save-alert-outline:before{content:\"\\F0F43\"}.mdi-content-save-all:before{content:\"\\F0194\"}.mdi-content-save-all-outline:before{content:\"\\F0F44\"}.mdi-content-save-cog:before{content:\"\\F145B\"}.mdi-content-save-cog-outline:before{content:\"\\F145C\"}.mdi-content-save-edit:before{content:\"\\F0CFB\"}.mdi-content-save-edit-outline:before{content:\"\\F0CFC\"}.mdi-content-save-move:before{content:\"\\F0E27\"}.mdi-content-save-move-outline:before{content:\"\\F0E28\"}.mdi-content-save-off:before{content:\"\\F1643\"}.mdi-content-save-off-outline:before{content:\"\\F1644\"}.mdi-content-save-outline:before{content:\"\\F0818\"}.mdi-content-save-settings:before{content:\"\\F061B\"}.mdi-content-save-settings-outline:before{content:\"\\F0B2E\"}.mdi-contrast:before{content:\"\\F0195\"}.mdi-contrast-box:before{content:\"\\F0196\"}.mdi-contrast-circle:before{content:\"\\F0197\"}.mdi-controller-classic:before{content:\"\\F0B82\"}.mdi-controller-classic-outline:before{content:\"\\F0B83\"}.mdi-cookie:before{content:\"\\F0198\"}.mdi-cookie-alert:before{content:\"\\F16D0\"}.mdi-cookie-alert-outline:before{content:\"\\F16D1\"}.mdi-cookie-check:before{content:\"\\F16D2\"}.mdi-cookie-check-outline:before{content:\"\\F16D3\"}.mdi-cookie-cog:before{content:\"\\F16D4\"}.mdi-cookie-cog-outline:before{content:\"\\F16D5\"}.mdi-cookie-minus:before{content:\"\\F16DA\"}.mdi-cookie-minus-outline:before{content:\"\\F16DB\"}.mdi-cookie-outline:before{content:\"\\F16DE\"}.mdi-cookie-plus:before{content:\"\\F16D6\"}.mdi-cookie-plus-outline:before{content:\"\\F16D7\"}.mdi-cookie-remove:before{content:\"\\F16D8\"}.mdi-cookie-remove-outline:before{content:\"\\F16D9\"}.mdi-cookie-settings:before{content:\"\\F16DC\"}.mdi-cookie-settings-outline:before{content:\"\\F16DD\"}.mdi-coolant-temperature:before{content:\"\\F03C8\"}.mdi-copyright:before{content:\"\\F05E6\"}.mdi-cordova:before{content:\"\\F0958\"}.mdi-corn:before{content:\"\\F07B8\"}.mdi-corn-off:before{content:\"\\F13EF\"}.mdi-cosine-wave:before{content:\"\\F1479\"}.mdi-counter:before{content:\"\\F0199\"}.mdi-cow:before{content:\"\\F019A\"}.mdi-cpu-32-bit:before{content:\"\\F0EDF\"}.mdi-cpu-64-bit:before{content:\"\\F0EE0\"}.mdi-crane:before{content:\"\\F0862\"}.mdi-creation:before{content:\"\\F0674\"}.mdi-creative-commons:before{content:\"\\F0D6B\"}.mdi-credit-card:before{content:\"\\F0FEF\"}.mdi-credit-card-check:before{content:\"\\F13D0\"}.mdi-credit-card-check-outline:before{content:\"\\F13D1\"}.mdi-credit-card-clock:before{content:\"\\F0EE1\"}.mdi-credit-card-clock-outline:before{content:\"\\F0EE2\"}.mdi-credit-card-marker:before{content:\"\\F06A8\"}.mdi-credit-card-marker-outline:before{content:\"\\F0DBE\"}.mdi-credit-card-minus:before{content:\"\\F0FAC\"}.mdi-credit-card-minus-outline:before{content:\"\\F0FAD\"}.mdi-credit-card-multiple:before{content:\"\\F0FF0\"}.mdi-credit-card-multiple-outline:before{content:\"\\F019C\"}.mdi-credit-card-off:before{content:\"\\F0FF1\"}.mdi-credit-card-off-outline:before{content:\"\\F05E4\"}.mdi-credit-card-outline:before{content:\"\\F019B\"}.mdi-credit-card-plus:before{content:\"\\F0FF2\"}.mdi-credit-card-plus-outline:before{content:\"\\F0676\"}.mdi-credit-card-refresh:before{content:\"\\F1645\"}.mdi-credit-card-refresh-outline:before{content:\"\\F1646\"}.mdi-credit-card-refund:before{content:\"\\F0FF3\"}.mdi-credit-card-refund-outline:before{content:\"\\F0AA8\"}.mdi-credit-card-remove:before{content:\"\\F0FAE\"}.mdi-credit-card-remove-outline:before{content:\"\\F0FAF\"}.mdi-credit-card-scan:before{content:\"\\F0FF4\"}.mdi-credit-card-scan-outline:before{content:\"\\F019D\"}.mdi-credit-card-search:before{content:\"\\F1647\"}.mdi-credit-card-search-outline:before{content:\"\\F1648\"}.mdi-credit-card-settings:before{content:\"\\F0FF5\"}.mdi-credit-card-settings-outline:before{content:\"\\F08D7\"}.mdi-credit-card-sync:before{content:\"\\F1649\"}.mdi-credit-card-sync-outline:before{content:\"\\F164A\"}.mdi-credit-card-wireless:before{content:\"\\F0802\"}.mdi-credit-card-wireless-off:before{content:\"\\F057A\"}.mdi-credit-card-wireless-off-outline:before{content:\"\\F057B\"}.mdi-credit-card-wireless-outline:before{content:\"\\F0D6C\"}.mdi-cricket:before{content:\"\\F0D6D\"}.mdi-crop:before{content:\"\\F019E\"}.mdi-crop-free:before{content:\"\\F019F\"}.mdi-crop-landscape:before{content:\"\\F01A0\"}.mdi-crop-portrait:before{content:\"\\F01A1\"}.mdi-crop-rotate:before{content:\"\\F0696\"}.mdi-crop-square:before{content:\"\\F01A2\"}.mdi-crosshairs:before{content:\"\\F01A3\"}.mdi-crosshairs-gps:before{content:\"\\F01A4\"}.mdi-crosshairs-off:before{content:\"\\F0F45\"}.mdi-crosshairs-question:before{content:\"\\F1136\"}.mdi-crown:before{content:\"\\F01A5\"}.mdi-crown-outline:before{content:\"\\F11D0\"}.mdi-cryengine:before{content:\"\\F0959\"}.mdi-crystal-ball:before{content:\"\\F0B2F\"}.mdi-cube:before{content:\"\\F01A6\"}.mdi-cube-off:before{content:\"\\F141C\"}.mdi-cube-off-outline:before{content:\"\\F141D\"}.mdi-cube-outline:before{content:\"\\F01A7\"}.mdi-cube-scan:before{content:\"\\F0B84\"}.mdi-cube-send:before{content:\"\\F01A8\"}.mdi-cube-unfolded:before{content:\"\\F01A9\"}.mdi-cup:before{content:\"\\F01AA\"}.mdi-cup-off:before{content:\"\\F05E5\"}.mdi-cup-off-outline:before{content:\"\\F137D\"}.mdi-cup-outline:before{content:\"\\F130F\"}.mdi-cup-water:before{content:\"\\F01AB\"}.mdi-cupboard:before{content:\"\\F0F46\"}.mdi-cupboard-outline:before{content:\"\\F0F47\"}.mdi-cupcake:before{content:\"\\F095A\"}.mdi-curling:before{content:\"\\F0863\"}.mdi-currency-bdt:before{content:\"\\F0864\"}.mdi-currency-brl:before{content:\"\\F0B85\"}.mdi-currency-btc:before{content:\"\\F01AC\"}.mdi-currency-cny:before{content:\"\\F07BA\"}.mdi-currency-eth:before{content:\"\\F07BB\"}.mdi-currency-eur:before{content:\"\\F01AD\"}.mdi-currency-eur-off:before{content:\"\\F1315\"}.mdi-currency-gbp:before{content:\"\\F01AE\"}.mdi-currency-ils:before{content:\"\\F0C61\"}.mdi-currency-inr:before{content:\"\\F01AF\"}.mdi-currency-jpy:before{content:\"\\F07BC\"}.mdi-currency-krw:before{content:\"\\F07BD\"}.mdi-currency-kzt:before{content:\"\\F0865\"}.mdi-currency-mnt:before{content:\"\\F1512\"}.mdi-currency-ngn:before{content:\"\\F01B0\"}.mdi-currency-php:before{content:\"\\F09E6\"}.mdi-currency-rial:before{content:\"\\F0E9C\"}.mdi-currency-rub:before{content:\"\\F01B1\"}.mdi-currency-sign:before{content:\"\\F07BE\"}.mdi-currency-try:before{content:\"\\F01B2\"}.mdi-currency-twd:before{content:\"\\F07BF\"}.mdi-currency-usd:before{content:\"\\F01C1\"}.mdi-currency-usd-circle:before{content:\"\\F116B\"}.mdi-currency-usd-circle-outline:before{content:\"\\F0178\"}.mdi-currency-usd-off:before{content:\"\\F067A\"}.mdi-current-ac:before{content:\"\\F1480\"}.mdi-current-dc:before{content:\"\\F095C\"}.mdi-cursor-default:before{content:\"\\F01C0\"}.mdi-cursor-default-click:before{content:\"\\F0CFD\"}.mdi-cursor-default-click-outline:before{content:\"\\F0CFE\"}.mdi-cursor-default-gesture:before{content:\"\\F1127\"}.mdi-cursor-default-gesture-outline:before{content:\"\\F1128\"}.mdi-cursor-default-outline:before{content:\"\\F01BF\"}.mdi-cursor-move:before{content:\"\\F01BE\"}.mdi-cursor-pointer:before{content:\"\\F01BD\"}.mdi-cursor-text:before{content:\"\\F05E7\"}.mdi-dance-ballroom:before{content:\"\\F15FB\"}.mdi-dance-pole:before{content:\"\\F1578\"}.mdi-data-matrix:before{content:\"\\F153C\"}.mdi-data-matrix-edit:before{content:\"\\F153D\"}.mdi-data-matrix-minus:before{content:\"\\F153E\"}.mdi-data-matrix-plus:before{content:\"\\F153F\"}.mdi-data-matrix-remove:before{content:\"\\F1540\"}.mdi-data-matrix-scan:before{content:\"\\F1541\"}.mdi-database:before{content:\"\\F01BC\"}.mdi-database-alert:before{content:\"\\F163A\"}.mdi-database-alert-outline:before{content:\"\\F1624\"}.mdi-database-arrow-down:before{content:\"\\F163B\"}.mdi-database-arrow-down-outline:before{content:\"\\F1625\"}.mdi-database-arrow-left:before{content:\"\\F163C\"}.mdi-database-arrow-left-outline:before{content:\"\\F1626\"}.mdi-database-arrow-right:before{content:\"\\F163D\"}.mdi-database-arrow-right-outline:before{content:\"\\F1627\"}.mdi-database-arrow-up:before{content:\"\\F163E\"}.mdi-database-arrow-up-outline:before{content:\"\\F1628\"}.mdi-database-check:before{content:\"\\F0AA9\"}.mdi-database-check-outline:before{content:\"\\F1629\"}.mdi-database-clock:before{content:\"\\F163F\"}.mdi-database-clock-outline:before{content:\"\\F162A\"}.mdi-database-cog:before{content:\"\\F164B\"}.mdi-database-cog-outline:before{content:\"\\F164C\"}.mdi-database-edit:before{content:\"\\F0B86\"}.mdi-database-edit-outline:before{content:\"\\F162B\"}.mdi-database-export:before{content:\"\\F095E\"}.mdi-database-export-outline:before{content:\"\\F162C\"}.mdi-database-import:before{content:\"\\F095D\"}.mdi-database-import-outline:before{content:\"\\F162D\"}.mdi-database-lock:before{content:\"\\F0AAA\"}.mdi-database-lock-outline:before{content:\"\\F162E\"}.mdi-database-marker:before{content:\"\\F12F6\"}.mdi-database-marker-outline:before{content:\"\\F162F\"}.mdi-database-minus:before{content:\"\\F01BB\"}.mdi-database-minus-outline:before{content:\"\\F1630\"}.mdi-database-off:before{content:\"\\F1640\"}.mdi-database-off-outline:before{content:\"\\F1631\"}.mdi-database-outline:before{content:\"\\F1632\"}.mdi-database-plus:before{content:\"\\F01BA\"}.mdi-database-plus-outline:before{content:\"\\F1633\"}.mdi-database-refresh:before{content:\"\\F05C2\"}.mdi-database-refresh-outline:before{content:\"\\F1634\"}.mdi-database-remove:before{content:\"\\F0D00\"}.mdi-database-remove-outline:before{content:\"\\F1635\"}.mdi-database-search:before{content:\"\\F0866\"}.mdi-database-search-outline:before{content:\"\\F1636\"}.mdi-database-settings:before{content:\"\\F0D01\"}.mdi-database-settings-outline:before{content:\"\\F1637\"}.mdi-database-sync:before{content:\"\\F0CFF\"}.mdi-database-sync-outline:before{content:\"\\F1638\"}.mdi-death-star:before{content:\"\\F08D8\"}.mdi-death-star-variant:before{content:\"\\F08D9\"}.mdi-deathly-hallows:before{content:\"\\F0B87\"}.mdi-debian:before{content:\"\\F08DA\"}.mdi-debug-step-into:before{content:\"\\F01B9\"}.mdi-debug-step-out:before{content:\"\\F01B8\"}.mdi-debug-step-over:before{content:\"\\F01B7\"}.mdi-decagram:before{content:\"\\F076C\"}.mdi-decagram-outline:before{content:\"\\F076D\"}.mdi-decimal:before{content:\"\\F10A1\"}.mdi-decimal-comma:before{content:\"\\F10A2\"}.mdi-decimal-comma-decrease:before{content:\"\\F10A3\"}.mdi-decimal-comma-increase:before{content:\"\\F10A4\"}.mdi-decimal-decrease:before{content:\"\\F01B6\"}.mdi-decimal-increase:before{content:\"\\F01B5\"}.mdi-delete:before{content:\"\\F01B4\"}.mdi-delete-alert:before{content:\"\\F10A5\"}.mdi-delete-alert-outline:before{content:\"\\F10A6\"}.mdi-delete-circle:before{content:\"\\F0683\"}.mdi-delete-circle-outline:before{content:\"\\F0B88\"}.mdi-delete-clock:before{content:\"\\F1556\"}.mdi-delete-clock-outline:before{content:\"\\F1557\"}.mdi-delete-empty:before{content:\"\\F06CC\"}.mdi-delete-empty-outline:before{content:\"\\F0E9D\"}.mdi-delete-forever:before{content:\"\\F05E8\"}.mdi-delete-forever-outline:before{content:\"\\F0B89\"}.mdi-delete-off:before{content:\"\\F10A7\"}.mdi-delete-off-outline:before{content:\"\\F10A8\"}.mdi-delete-outline:before{content:\"\\F09E7\"}.mdi-delete-restore:before{content:\"\\F0819\"}.mdi-delete-sweep:before{content:\"\\F05E9\"}.mdi-delete-sweep-outline:before{content:\"\\F0C62\"}.mdi-delete-variant:before{content:\"\\F01B3\"}.mdi-delta:before{content:\"\\F01C2\"}.mdi-desk:before{content:\"\\F1239\"}.mdi-desk-lamp:before{content:\"\\F095F\"}.mdi-deskphone:before{content:\"\\F01C3\"}.mdi-desktop-classic:before{content:\"\\F07C0\"}.mdi-desktop-mac:before{content:\"\\F01C4\"}.mdi-desktop-mac-dashboard:before{content:\"\\F09E8\"}.mdi-desktop-tower:before{content:\"\\F01C5\"}.mdi-desktop-tower-monitor:before{content:\"\\F0AAB\"}.mdi-details:before{content:\"\\F01C6\"}.mdi-dev-to:before{content:\"\\F0D6E\"}.mdi-developer-board:before{content:\"\\F0697\"}.mdi-deviantart:before{content:\"\\F01C7\"}.mdi-devices:before{content:\"\\F0FB0\"}.mdi-diabetes:before{content:\"\\F1126\"}.mdi-dialpad:before{content:\"\\F061C\"}.mdi-diameter:before{content:\"\\F0C63\"}.mdi-diameter-outline:before{content:\"\\F0C64\"}.mdi-diameter-variant:before{content:\"\\F0C65\"}.mdi-diamond:before{content:\"\\F0B8A\"}.mdi-diamond-outline:before{content:\"\\F0B8B\"}.mdi-diamond-stone:before{content:\"\\F01C8\"}.mdi-dice-1:before{content:\"\\F01CA\"}.mdi-dice-1-outline:before{content:\"\\F114A\"}.mdi-dice-2:before{content:\"\\F01CB\"}.mdi-dice-2-outline:before{content:\"\\F114B\"}.mdi-dice-3:before{content:\"\\F01CC\"}.mdi-dice-3-outline:before{content:\"\\F114C\"}.mdi-dice-4:before{content:\"\\F01CD\"}.mdi-dice-4-outline:before{content:\"\\F114D\"}.mdi-dice-5:before{content:\"\\F01CE\"}.mdi-dice-5-outline:before{content:\"\\F114E\"}.mdi-dice-6:before{content:\"\\F01CF\"}.mdi-dice-6-outline:before{content:\"\\F114F\"}.mdi-dice-d10:before{content:\"\\F1153\"}.mdi-dice-d10-outline:before{content:\"\\F076F\"}.mdi-dice-d12:before{content:\"\\F1154\"}.mdi-dice-d12-outline:before{content:\"\\F0867\"}.mdi-dice-d20:before{content:\"\\F1155\"}.mdi-dice-d20-outline:before{content:\"\\F05EA\"}.mdi-dice-d4:before{content:\"\\F1150\"}.mdi-dice-d4-outline:before{content:\"\\F05EB\"}.mdi-dice-d6:before{content:\"\\F1151\"}.mdi-dice-d6-outline:before{content:\"\\F05ED\"}.mdi-dice-d8:before{content:\"\\F1152\"}.mdi-dice-d8-outline:before{content:\"\\F05EC\"}.mdi-dice-multiple:before{content:\"\\F076E\"}.mdi-dice-multiple-outline:before{content:\"\\F1156\"}.mdi-digital-ocean:before{content:\"\\F1237\"}.mdi-dip-switch:before{content:\"\\F07C1\"}.mdi-directions:before{content:\"\\F01D0\"}.mdi-directions-fork:before{content:\"\\F0641\"}.mdi-disc:before{content:\"\\F05EE\"}.mdi-disc-alert:before{content:\"\\F01D1\"}.mdi-disc-player:before{content:\"\\F0960\"}.mdi-discord:before{content:\"\\F066F\"}.mdi-dishwasher:before{content:\"\\F0AAC\"}.mdi-dishwasher-alert:before{content:\"\\F11B8\"}.mdi-dishwasher-off:before{content:\"\\F11B9\"}.mdi-disqus:before{content:\"\\F01D2\"}.mdi-distribute-horizontal-center:before{content:\"\\F11C9\"}.mdi-distribute-horizontal-left:before{content:\"\\F11C8\"}.mdi-distribute-horizontal-right:before{content:\"\\F11CA\"}.mdi-distribute-vertical-bottom:before{content:\"\\F11CB\"}.mdi-distribute-vertical-center:before{content:\"\\F11CC\"}.mdi-distribute-vertical-top:before{content:\"\\F11CD\"}.mdi-diving-flippers:before{content:\"\\F0DBF\"}.mdi-diving-helmet:before{content:\"\\F0DC0\"}.mdi-diving-scuba:before{content:\"\\F0DC1\"}.mdi-diving-scuba-flag:before{content:\"\\F0DC2\"}.mdi-diving-scuba-tank:before{content:\"\\F0DC3\"}.mdi-diving-scuba-tank-multiple:before{content:\"\\F0DC4\"}.mdi-diving-snorkel:before{content:\"\\F0DC5\"}.mdi-division:before{content:\"\\F01D4\"}.mdi-division-box:before{content:\"\\F01D5\"}.mdi-dlna:before{content:\"\\F0A41\"}.mdi-dna:before{content:\"\\F0684\"}.mdi-dns:before{content:\"\\F01D6\"}.mdi-dns-outline:before{content:\"\\F0B8C\"}.mdi-do-not-disturb:before{content:\"\\F0698\"}.mdi-do-not-disturb-off:before{content:\"\\F0699\"}.mdi-dock-bottom:before{content:\"\\F10A9\"}.mdi-dock-left:before{content:\"\\F10AA\"}.mdi-dock-right:before{content:\"\\F10AB\"}.mdi-dock-top:before{content:\"\\F1513\"}.mdi-dock-window:before{content:\"\\F10AC\"}.mdi-docker:before{content:\"\\F0868\"}.mdi-doctor:before{content:\"\\F0A42\"}.mdi-dog:before{content:\"\\F0A43\"}.mdi-dog-service:before{content:\"\\F0AAD\"}.mdi-dog-side:before{content:\"\\F0A44\"}.mdi-dolby:before{content:\"\\F06B3\"}.mdi-dolly:before{content:\"\\F0E9E\"}.mdi-domain:before{content:\"\\F01D7\"}.mdi-domain-off:before{content:\"\\F0D6F\"}.mdi-domain-plus:before{content:\"\\F10AD\"}.mdi-domain-remove:before{content:\"\\F10AE\"}.mdi-dome-light:before{content:\"\\F141E\"}.mdi-domino-mask:before{content:\"\\F1023\"}.mdi-donkey:before{content:\"\\F07C2\"}.mdi-door:before{content:\"\\F081A\"}.mdi-door-closed:before{content:\"\\F081B\"}.mdi-door-closed-lock:before{content:\"\\F10AF\"}.mdi-door-open:before{content:\"\\F081C\"}.mdi-doorbell:before{content:\"\\F12E6\"}.mdi-doorbell-video:before{content:\"\\F0869\"}.mdi-dot-net:before{content:\"\\F0AAE\"}.mdi-dots-grid:before{content:\"\\F15FC\"}.mdi-dots-hexagon:before{content:\"\\F15FF\"}.mdi-dots-horizontal:before{content:\"\\F01D8\"}.mdi-dots-horizontal-circle:before{content:\"\\F07C3\"}.mdi-dots-horizontal-circle-outline:before{content:\"\\F0B8D\"}.mdi-dots-square:before{content:\"\\F15FD\"}.mdi-dots-triangle:before{content:\"\\F15FE\"}.mdi-dots-vertical:before{content:\"\\F01D9\"}.mdi-dots-vertical-circle:before{content:\"\\F07C4\"}.mdi-dots-vertical-circle-outline:before{content:\"\\F0B8E\"}.mdi-douban:before{content:\"\\F069A\"}.mdi-download:before{content:\"\\F01DA\"}.mdi-download-box:before{content:\"\\F1462\"}.mdi-download-box-outline:before{content:\"\\F1463\"}.mdi-download-circle:before{content:\"\\F1464\"}.mdi-download-circle-outline:before{content:\"\\F1465\"}.mdi-download-lock:before{content:\"\\F1320\"}.mdi-download-lock-outline:before{content:\"\\F1321\"}.mdi-download-multiple:before{content:\"\\F09E9\"}.mdi-download-network:before{content:\"\\F06F4\"}.mdi-download-network-outline:before{content:\"\\F0C66\"}.mdi-download-off:before{content:\"\\F10B0\"}.mdi-download-off-outline:before{content:\"\\F10B1\"}.mdi-download-outline:before{content:\"\\F0B8F\"}.mdi-drag:before{content:\"\\F01DB\"}.mdi-drag-horizontal:before{content:\"\\F01DC\"}.mdi-drag-horizontal-variant:before{content:\"\\F12F0\"}.mdi-drag-variant:before{content:\"\\F0B90\"}.mdi-drag-vertical:before{content:\"\\F01DD\"}.mdi-drag-vertical-variant:before{content:\"\\F12F1\"}.mdi-drama-masks:before{content:\"\\F0D02\"}.mdi-draw:before{content:\"\\F0F49\"}.mdi-drawing:before{content:\"\\F01DE\"}.mdi-drawing-box:before{content:\"\\F01DF\"}.mdi-dresser:before{content:\"\\F0F4A\"}.mdi-dresser-outline:before{content:\"\\F0F4B\"}.mdi-drone:before{content:\"\\F01E2\"}.mdi-dropbox:before{content:\"\\F01E3\"}.mdi-drupal:before{content:\"\\F01E4\"}.mdi-duck:before{content:\"\\F01E5\"}.mdi-dumbbell:before{content:\"\\F01E6\"}.mdi-dump-truck:before{content:\"\\F0C67\"}.mdi-ear-hearing:before{content:\"\\F07C5\"}.mdi-ear-hearing-off:before{content:\"\\F0A45\"}.mdi-earth:before{content:\"\\F01E7\"}.mdi-earth-arrow-right:before{content:\"\\F1311\"}.mdi-earth-box:before{content:\"\\F06CD\"}.mdi-earth-box-minus:before{content:\"\\F1407\"}.mdi-earth-box-off:before{content:\"\\F06CE\"}.mdi-earth-box-plus:before{content:\"\\F1406\"}.mdi-earth-box-remove:before{content:\"\\F1408\"}.mdi-earth-minus:before{content:\"\\F1404\"}.mdi-earth-off:before{content:\"\\F01E8\"}.mdi-earth-plus:before{content:\"\\F1403\"}.mdi-earth-remove:before{content:\"\\F1405\"}.mdi-egg:before{content:\"\\F0AAF\"}.mdi-egg-easter:before{content:\"\\F0AB0\"}.mdi-egg-off:before{content:\"\\F13F0\"}.mdi-egg-off-outline:before{content:\"\\F13F1\"}.mdi-egg-outline:before{content:\"\\F13F2\"}.mdi-eiffel-tower:before{content:\"\\F156B\"}.mdi-eight-track:before{content:\"\\F09EA\"}.mdi-eject:before{content:\"\\F01EA\"}.mdi-eject-outline:before{content:\"\\F0B91\"}.mdi-electric-switch:before{content:\"\\F0E9F\"}.mdi-electric-switch-closed:before{content:\"\\F10D9\"}.mdi-electron-framework:before{content:\"\\F1024\"}.mdi-elephant:before{content:\"\\F07C6\"}.mdi-elevation-decline:before{content:\"\\F01EB\"}.mdi-elevation-rise:before{content:\"\\F01EC\"}.mdi-elevator:before{content:\"\\F01ED\"}.mdi-elevator-down:before{content:\"\\F12C2\"}.mdi-elevator-passenger:before{content:\"\\F1381\"}.mdi-elevator-up:before{content:\"\\F12C1\"}.mdi-ellipse:before{content:\"\\F0EA0\"}.mdi-ellipse-outline:before{content:\"\\F0EA1\"}.mdi-email:before{content:\"\\F01EE\"}.mdi-email-alert:before{content:\"\\F06CF\"}.mdi-email-alert-outline:before{content:\"\\F0D42\"}.mdi-email-box:before{content:\"\\F0D03\"}.mdi-email-check:before{content:\"\\F0AB1\"}.mdi-email-check-outline:before{content:\"\\F0AB2\"}.mdi-email-edit:before{content:\"\\F0EE3\"}.mdi-email-edit-outline:before{content:\"\\F0EE4\"}.mdi-email-lock:before{content:\"\\F01F1\"}.mdi-email-mark-as-unread:before{content:\"\\F0B92\"}.mdi-email-minus:before{content:\"\\F0EE5\"}.mdi-email-minus-outline:before{content:\"\\F0EE6\"}.mdi-email-multiple:before{content:\"\\F0EE7\"}.mdi-email-multiple-outline:before{content:\"\\F0EE8\"}.mdi-email-newsletter:before{content:\"\\F0FB1\"}.mdi-email-off:before{content:\"\\F13E3\"}.mdi-email-off-outline:before{content:\"\\F13E4\"}.mdi-email-open:before{content:\"\\F01EF\"}.mdi-email-open-multiple:before{content:\"\\F0EE9\"}.mdi-email-open-multiple-outline:before{content:\"\\F0EEA\"}.mdi-email-open-outline:before{content:\"\\F05EF\"}.mdi-email-outline:before{content:\"\\F01F0\"}.mdi-email-plus:before{content:\"\\F09EB\"}.mdi-email-plus-outline:before{content:\"\\F09EC\"}.mdi-email-receive:before{content:\"\\F10DA\"}.mdi-email-receive-outline:before{content:\"\\F10DB\"}.mdi-email-remove:before{content:\"\\F1661\"}.mdi-email-remove-outline:before{content:\"\\F1662\"}.mdi-email-search:before{content:\"\\F0961\"}.mdi-email-search-outline:before{content:\"\\F0962\"}.mdi-email-send:before{content:\"\\F10DC\"}.mdi-email-send-outline:before{content:\"\\F10DD\"}.mdi-email-sync:before{content:\"\\F12C7\"}.mdi-email-sync-outline:before{content:\"\\F12C8\"}.mdi-email-variant:before{content:\"\\F05F0\"}.mdi-ember:before{content:\"\\F0B30\"}.mdi-emby:before{content:\"\\F06B4\"}.mdi-emoticon:before{content:\"\\F0C68\"}.mdi-emoticon-angry:before{content:\"\\F0C69\"}.mdi-emoticon-angry-outline:before{content:\"\\F0C6A\"}.mdi-emoticon-confused:before{content:\"\\F10DE\"}.mdi-emoticon-confused-outline:before{content:\"\\F10DF\"}.mdi-emoticon-cool:before{content:\"\\F0C6B\"}.mdi-emoticon-cool-outline:before{content:\"\\F01F3\"}.mdi-emoticon-cry:before{content:\"\\F0C6C\"}.mdi-emoticon-cry-outline:before{content:\"\\F0C6D\"}.mdi-emoticon-dead:before{content:\"\\F0C6E\"}.mdi-emoticon-dead-outline:before{content:\"\\F069B\"}.mdi-emoticon-devil:before{content:\"\\F0C6F\"}.mdi-emoticon-devil-outline:before{content:\"\\F01F4\"}.mdi-emoticon-excited:before{content:\"\\F0C70\"}.mdi-emoticon-excited-outline:before{content:\"\\F069C\"}.mdi-emoticon-frown:before{content:\"\\F0F4C\"}.mdi-emoticon-frown-outline:before{content:\"\\F0F4D\"}.mdi-emoticon-happy:before{content:\"\\F0C71\"}.mdi-emoticon-happy-outline:before{content:\"\\F01F5\"}.mdi-emoticon-kiss:before{content:\"\\F0C72\"}.mdi-emoticon-kiss-outline:before{content:\"\\F0C73\"}.mdi-emoticon-lol:before{content:\"\\F1214\"}.mdi-emoticon-lol-outline:before{content:\"\\F1215\"}.mdi-emoticon-neutral:before{content:\"\\F0C74\"}.mdi-emoticon-neutral-outline:before{content:\"\\F01F6\"}.mdi-emoticon-outline:before{content:\"\\F01F2\"}.mdi-emoticon-poop:before{content:\"\\F01F7\"}.mdi-emoticon-poop-outline:before{content:\"\\F0C75\"}.mdi-emoticon-sad:before{content:\"\\F0C76\"}.mdi-emoticon-sad-outline:before{content:\"\\F01F8\"}.mdi-emoticon-sick:before{content:\"\\F157C\"}.mdi-emoticon-sick-outline:before{content:\"\\F157D\"}.mdi-emoticon-tongue:before{content:\"\\F01F9\"}.mdi-emoticon-tongue-outline:before{content:\"\\F0C77\"}.mdi-emoticon-wink:before{content:\"\\F0C78\"}.mdi-emoticon-wink-outline:before{content:\"\\F0C79\"}.mdi-engine:before{content:\"\\F01FA\"}.mdi-engine-off:before{content:\"\\F0A46\"}.mdi-engine-off-outline:before{content:\"\\F0A47\"}.mdi-engine-outline:before{content:\"\\F01FB\"}.mdi-epsilon:before{content:\"\\F10E0\"}.mdi-equal:before{content:\"\\F01FC\"}.mdi-equal-box:before{content:\"\\F01FD\"}.mdi-equalizer:before{content:\"\\F0EA2\"}.mdi-equalizer-outline:before{content:\"\\F0EA3\"}.mdi-eraser:before{content:\"\\F01FE\"}.mdi-eraser-variant:before{content:\"\\F0642\"}.mdi-escalator:before{content:\"\\F01FF\"}.mdi-escalator-box:before{content:\"\\F1399\"}.mdi-escalator-down:before{content:\"\\F12C0\"}.mdi-escalator-up:before{content:\"\\F12BF\"}.mdi-eslint:before{content:\"\\F0C7A\"}.mdi-et:before{content:\"\\F0AB3\"}.mdi-ethereum:before{content:\"\\F086A\"}.mdi-ethernet:before{content:\"\\F0200\"}.mdi-ethernet-cable:before{content:\"\\F0201\"}.mdi-ethernet-cable-off:before{content:\"\\F0202\"}.mdi-ev-plug-ccs1:before{content:\"\\F1519\"}.mdi-ev-plug-ccs2:before{content:\"\\F151A\"}.mdi-ev-plug-chademo:before{content:\"\\F151B\"}.mdi-ev-plug-tesla:before{content:\"\\F151C\"}.mdi-ev-plug-type1:before{content:\"\\F151D\"}.mdi-ev-plug-type2:before{content:\"\\F151E\"}.mdi-ev-station:before{content:\"\\F05F1\"}.mdi-evernote:before{content:\"\\F0204\"}.mdi-excavator:before{content:\"\\F1025\"}.mdi-exclamation:before{content:\"\\F0205\"}.mdi-exclamation-thick:before{content:\"\\F1238\"}.mdi-exit-run:before{content:\"\\F0A48\"}.mdi-exit-to-app:before{content:\"\\F0206\"}.mdi-expand-all:before{content:\"\\F0AB4\"}.mdi-expand-all-outline:before{content:\"\\F0AB5\"}.mdi-expansion-card:before{content:\"\\F08AE\"}.mdi-expansion-card-variant:before{content:\"\\F0FB2\"}.mdi-exponent:before{content:\"\\F0963\"}.mdi-exponent-box:before{content:\"\\F0964\"}.mdi-export:before{content:\"\\F0207\"}.mdi-export-variant:before{content:\"\\F0B93\"}.mdi-eye:before{content:\"\\F0208\"}.mdi-eye-check:before{content:\"\\F0D04\"}.mdi-eye-check-outline:before{content:\"\\F0D05\"}.mdi-eye-circle:before{content:\"\\F0B94\"}.mdi-eye-circle-outline:before{content:\"\\F0B95\"}.mdi-eye-minus:before{content:\"\\F1026\"}.mdi-eye-minus-outline:before{content:\"\\F1027\"}.mdi-eye-off:before{content:\"\\F0209\"}.mdi-eye-off-outline:before{content:\"\\F06D1\"}.mdi-eye-outline:before{content:\"\\F06D0\"}.mdi-eye-plus:before{content:\"\\F086B\"}.mdi-eye-plus-outline:before{content:\"\\F086C\"}.mdi-eye-remove:before{content:\"\\F15E3\"}.mdi-eye-remove-outline:before{content:\"\\F15E4\"}.mdi-eye-settings:before{content:\"\\F086D\"}.mdi-eye-settings-outline:before{content:\"\\F086E\"}.mdi-eyedropper:before{content:\"\\F020A\"}.mdi-eyedropper-minus:before{content:\"\\F13DD\"}.mdi-eyedropper-off:before{content:\"\\F13DF\"}.mdi-eyedropper-plus:before{content:\"\\F13DC\"}.mdi-eyedropper-remove:before{content:\"\\F13DE\"}.mdi-eyedropper-variant:before{content:\"\\F020B\"}.mdi-face:before{content:\"\\F0643\"}.mdi-face-agent:before{content:\"\\F0D70\"}.mdi-face-mask:before{content:\"\\F1586\"}.mdi-face-mask-outline:before{content:\"\\F1587\"}.mdi-face-outline:before{content:\"\\F0B96\"}.mdi-face-profile:before{content:\"\\F0644\"}.mdi-face-profile-woman:before{content:\"\\F1076\"}.mdi-face-recognition:before{content:\"\\F0C7B\"}.mdi-face-shimmer:before{content:\"\\F15CC\"}.mdi-face-shimmer-outline:before{content:\"\\F15CD\"}.mdi-face-woman:before{content:\"\\F1077\"}.mdi-face-woman-outline:before{content:\"\\F1078\"}.mdi-face-woman-shimmer:before{content:\"\\F15CE\"}.mdi-face-woman-shimmer-outline:before{content:\"\\F15CF\"}.mdi-facebook:before{content:\"\\F020C\"}.mdi-facebook-gaming:before{content:\"\\F07DD\"}.mdi-facebook-messenger:before{content:\"\\F020E\"}.mdi-facebook-workplace:before{content:\"\\F0B31\"}.mdi-factory:before{content:\"\\F020F\"}.mdi-family-tree:before{content:\"\\F160E\"}.mdi-fan:before{content:\"\\F0210\"}.mdi-fan-alert:before{content:\"\\F146C\"}.mdi-fan-chevron-down:before{content:\"\\F146D\"}.mdi-fan-chevron-up:before{content:\"\\F146E\"}.mdi-fan-minus:before{content:\"\\F1470\"}.mdi-fan-off:before{content:\"\\F081D\"}.mdi-fan-plus:before{content:\"\\F146F\"}.mdi-fan-remove:before{content:\"\\F1471\"}.mdi-fan-speed-1:before{content:\"\\F1472\"}.mdi-fan-speed-2:before{content:\"\\F1473\"}.mdi-fan-speed-3:before{content:\"\\F1474\"}.mdi-fast-forward:before{content:\"\\F0211\"}.mdi-fast-forward-10:before{content:\"\\F0D71\"}.mdi-fast-forward-30:before{content:\"\\F0D06\"}.mdi-fast-forward-5:before{content:\"\\F11F8\"}.mdi-fast-forward-60:before{content:\"\\F160B\"}.mdi-fast-forward-outline:before{content:\"\\F06D2\"}.mdi-fax:before{content:\"\\F0212\"}.mdi-feather:before{content:\"\\F06D3\"}.mdi-feature-search:before{content:\"\\F0A49\"}.mdi-feature-search-outline:before{content:\"\\F0A4A\"}.mdi-fedora:before{content:\"\\F08DB\"}.mdi-fencing:before{content:\"\\F14C1\"}.mdi-ferris-wheel:before{content:\"\\F0EA4\"}.mdi-ferry:before{content:\"\\F0213\"}.mdi-file:before{content:\"\\F0214\"}.mdi-file-account:before{content:\"\\F073B\"}.mdi-file-account-outline:before{content:\"\\F1028\"}.mdi-file-alert:before{content:\"\\F0A4B\"}.mdi-file-alert-outline:before{content:\"\\F0A4C\"}.mdi-file-cabinet:before{content:\"\\F0AB6\"}.mdi-file-cad:before{content:\"\\F0EEB\"}.mdi-file-cad-box:before{content:\"\\F0EEC\"}.mdi-file-cancel:before{content:\"\\F0DC6\"}.mdi-file-cancel-outline:before{content:\"\\F0DC7\"}.mdi-file-certificate:before{content:\"\\F1186\"}.mdi-file-certificate-outline:before{content:\"\\F1187\"}.mdi-file-chart:before{content:\"\\F0215\"}.mdi-file-chart-outline:before{content:\"\\F1029\"}.mdi-file-check:before{content:\"\\F0216\"}.mdi-file-check-outline:before{content:\"\\F0E29\"}.mdi-file-clock:before{content:\"\\F12E1\"}.mdi-file-clock-outline:before{content:\"\\F12E2\"}.mdi-file-cloud:before{content:\"\\F0217\"}.mdi-file-cloud-outline:before{content:\"\\F102A\"}.mdi-file-code:before{content:\"\\F022E\"}.mdi-file-code-outline:before{content:\"\\F102B\"}.mdi-file-cog:before{content:\"\\F107B\"}.mdi-file-cog-outline:before{content:\"\\F107C\"}.mdi-file-compare:before{content:\"\\F08AA\"}.mdi-file-delimited:before{content:\"\\F0218\"}.mdi-file-delimited-outline:before{content:\"\\F0EA5\"}.mdi-file-document:before{content:\"\\F0219\"}.mdi-file-document-edit:before{content:\"\\F0DC8\"}.mdi-file-document-edit-outline:before{content:\"\\F0DC9\"}.mdi-file-document-multiple:before{content:\"\\F1517\"}.mdi-file-document-multiple-outline:before{content:\"\\F1518\"}.mdi-file-document-outline:before{content:\"\\F09EE\"}.mdi-file-download:before{content:\"\\F0965\"}.mdi-file-download-outline:before{content:\"\\F0966\"}.mdi-file-edit:before{content:\"\\F11E7\"}.mdi-file-edit-outline:before{content:\"\\F11E8\"}.mdi-file-excel:before{content:\"\\F021B\"}.mdi-file-excel-box:before{content:\"\\F021C\"}.mdi-file-excel-box-outline:before{content:\"\\F102C\"}.mdi-file-excel-outline:before{content:\"\\F102D\"}.mdi-file-export:before{content:\"\\F021D\"}.mdi-file-export-outline:before{content:\"\\F102E\"}.mdi-file-eye:before{content:\"\\F0DCA\"}.mdi-file-eye-outline:before{content:\"\\F0DCB\"}.mdi-file-find:before{content:\"\\F021E\"}.mdi-file-find-outline:before{content:\"\\F0B97\"}.mdi-file-hidden:before{content:\"\\F0613\"}.mdi-file-image:before{content:\"\\F021F\"}.mdi-file-image-outline:before{content:\"\\F0EB0\"}.mdi-file-import:before{content:\"\\F0220\"}.mdi-file-import-outline:before{content:\"\\F102F\"}.mdi-file-key:before{content:\"\\F1184\"}.mdi-file-key-outline:before{content:\"\\F1185\"}.mdi-file-link:before{content:\"\\F1177\"}.mdi-file-link-outline:before{content:\"\\F1178\"}.mdi-file-lock:before{content:\"\\F0221\"}.mdi-file-lock-outline:before{content:\"\\F1030\"}.mdi-file-move:before{content:\"\\F0AB9\"}.mdi-file-move-outline:before{content:\"\\F1031\"}.mdi-file-multiple:before{content:\"\\F0222\"}.mdi-file-multiple-outline:before{content:\"\\F1032\"}.mdi-file-music:before{content:\"\\F0223\"}.mdi-file-music-outline:before{content:\"\\F0E2A\"}.mdi-file-outline:before{content:\"\\F0224\"}.mdi-file-pdf:before{content:\"\\F0225\"}.mdi-file-pdf-box:before{content:\"\\F0226\"}.mdi-file-pdf-box-outline:before{content:\"\\F0FB3\"}.mdi-file-pdf-outline:before{content:\"\\F0E2D\"}.mdi-file-percent:before{content:\"\\F081E\"}.mdi-file-percent-outline:before{content:\"\\F1033\"}.mdi-file-phone:before{content:\"\\F1179\"}.mdi-file-phone-outline:before{content:\"\\F117A\"}.mdi-file-plus:before{content:\"\\F0752\"}.mdi-file-plus-outline:before{content:\"\\F0EED\"}.mdi-file-powerpoint:before{content:\"\\F0227\"}.mdi-file-powerpoint-box:before{content:\"\\F0228\"}.mdi-file-powerpoint-box-outline:before{content:\"\\F1034\"}.mdi-file-powerpoint-outline:before{content:\"\\F1035\"}.mdi-file-presentation-box:before{content:\"\\F0229\"}.mdi-file-question:before{content:\"\\F086F\"}.mdi-file-question-outline:before{content:\"\\F1036\"}.mdi-file-refresh:before{content:\"\\F0918\"}.mdi-file-refresh-outline:before{content:\"\\F0541\"}.mdi-file-remove:before{content:\"\\F0B98\"}.mdi-file-remove-outline:before{content:\"\\F1037\"}.mdi-file-replace:before{content:\"\\F0B32\"}.mdi-file-replace-outline:before{content:\"\\F0B33\"}.mdi-file-restore:before{content:\"\\F0670\"}.mdi-file-restore-outline:before{content:\"\\F1038\"}.mdi-file-search:before{content:\"\\F0C7C\"}.mdi-file-search-outline:before{content:\"\\F0C7D\"}.mdi-file-send:before{content:\"\\F022A\"}.mdi-file-send-outline:before{content:\"\\F1039\"}.mdi-file-settings:before{content:\"\\F1079\"}.mdi-file-settings-outline:before{content:\"\\F107A\"}.mdi-file-star:before{content:\"\\F103A\"}.mdi-file-star-outline:before{content:\"\\F103B\"}.mdi-file-swap:before{content:\"\\F0FB4\"}.mdi-file-swap-outline:before{content:\"\\F0FB5\"}.mdi-file-sync:before{content:\"\\F1216\"}.mdi-file-sync-outline:before{content:\"\\F1217\"}.mdi-file-table:before{content:\"\\F0C7E\"}.mdi-file-table-box:before{content:\"\\F10E1\"}.mdi-file-table-box-multiple:before{content:\"\\F10E2\"}.mdi-file-table-box-multiple-outline:before{content:\"\\F10E3\"}.mdi-file-table-box-outline:before{content:\"\\F10E4\"}.mdi-file-table-outline:before{content:\"\\F0C7F\"}.mdi-file-tree:before{content:\"\\F0645\"}.mdi-file-tree-outline:before{content:\"\\F13D2\"}.mdi-file-undo:before{content:\"\\F08DC\"}.mdi-file-undo-outline:before{content:\"\\F103C\"}.mdi-file-upload:before{content:\"\\F0A4D\"}.mdi-file-upload-outline:before{content:\"\\F0A4E\"}.mdi-file-video:before{content:\"\\F022B\"}.mdi-file-video-outline:before{content:\"\\F0E2C\"}.mdi-file-word:before{content:\"\\F022C\"}.mdi-file-word-box:before{content:\"\\F022D\"}.mdi-file-word-box-outline:before{content:\"\\F103D\"}.mdi-file-word-outline:before{content:\"\\F103E\"}.mdi-film:before{content:\"\\F022F\"}.mdi-filmstrip:before{content:\"\\F0230\"}.mdi-filmstrip-box:before{content:\"\\F0332\"}.mdi-filmstrip-box-multiple:before{content:\"\\F0D18\"}.mdi-filmstrip-off:before{content:\"\\F0231\"}.mdi-filter:before{content:\"\\F0232\"}.mdi-filter-menu:before{content:\"\\F10E5\"}.mdi-filter-menu-outline:before{content:\"\\F10E6\"}.mdi-filter-minus:before{content:\"\\F0EEE\"}.mdi-filter-minus-outline:before{content:\"\\F0EEF\"}.mdi-filter-off:before{content:\"\\F14EF\"}.mdi-filter-off-outline:before{content:\"\\F14F0\"}.mdi-filter-outline:before{content:\"\\F0233\"}.mdi-filter-plus:before{content:\"\\F0EF0\"}.mdi-filter-plus-outline:before{content:\"\\F0EF1\"}.mdi-filter-remove:before{content:\"\\F0234\"}.mdi-filter-remove-outline:before{content:\"\\F0235\"}.mdi-filter-variant:before{content:\"\\F0236\"}.mdi-filter-variant-minus:before{content:\"\\F1112\"}.mdi-filter-variant-plus:before{content:\"\\F1113\"}.mdi-filter-variant-remove:before{content:\"\\F103F\"}.mdi-finance:before{content:\"\\F081F\"}.mdi-find-replace:before{content:\"\\F06D4\"}.mdi-fingerprint:before{content:\"\\F0237\"}.mdi-fingerprint-off:before{content:\"\\F0EB1\"}.mdi-fire:before{content:\"\\F0238\"}.mdi-fire-alert:before{content:\"\\F15D7\"}.mdi-fire-extinguisher:before{content:\"\\F0EF2\"}.mdi-fire-hydrant:before{content:\"\\F1137\"}.mdi-fire-hydrant-alert:before{content:\"\\F1138\"}.mdi-fire-hydrant-off:before{content:\"\\F1139\"}.mdi-fire-truck:before{content:\"\\F08AB\"}.mdi-firebase:before{content:\"\\F0967\"}.mdi-firefox:before{content:\"\\F0239\"}.mdi-fireplace:before{content:\"\\F0E2E\"}.mdi-fireplace-off:before{content:\"\\F0E2F\"}.mdi-firework:before{content:\"\\F0E30\"}.mdi-fish:before{content:\"\\F023A\"}.mdi-fish-off:before{content:\"\\F13F3\"}.mdi-fishbowl:before{content:\"\\F0EF3\"}.mdi-fishbowl-outline:before{content:\"\\F0EF4\"}.mdi-fit-to-page:before{content:\"\\F0EF5\"}.mdi-fit-to-page-outline:before{content:\"\\F0EF6\"}.mdi-flag:before{content:\"\\F023B\"}.mdi-flag-checkered:before{content:\"\\F023C\"}.mdi-flag-minus:before{content:\"\\F0B99\"}.mdi-flag-minus-outline:before{content:\"\\F10B2\"}.mdi-flag-outline:before{content:\"\\F023D\"}.mdi-flag-plus:before{content:\"\\F0B9A\"}.mdi-flag-plus-outline:before{content:\"\\F10B3\"}.mdi-flag-remove:before{content:\"\\F0B9B\"}.mdi-flag-remove-outline:before{content:\"\\F10B4\"}.mdi-flag-triangle:before{content:\"\\F023F\"}.mdi-flag-variant:before{content:\"\\F0240\"}.mdi-flag-variant-outline:before{content:\"\\F023E\"}.mdi-flare:before{content:\"\\F0D72\"}.mdi-flash:before{content:\"\\F0241\"}.mdi-flash-alert:before{content:\"\\F0EF7\"}.mdi-flash-alert-outline:before{content:\"\\F0EF8\"}.mdi-flash-auto:before{content:\"\\F0242\"}.mdi-flash-circle:before{content:\"\\F0820\"}.mdi-flash-off:before{content:\"\\F0243\"}.mdi-flash-outline:before{content:\"\\F06D5\"}.mdi-flash-red-eye:before{content:\"\\F067B\"}.mdi-flashlight:before{content:\"\\F0244\"}.mdi-flashlight-off:before{content:\"\\F0245\"}.mdi-flask:before{content:\"\\F0093\"}.mdi-flask-empty:before{content:\"\\F0094\"}.mdi-flask-empty-minus:before{content:\"\\F123A\"}.mdi-flask-empty-minus-outline:before{content:\"\\F123B\"}.mdi-flask-empty-off:before{content:\"\\F13F4\"}.mdi-flask-empty-off-outline:before{content:\"\\F13F5\"}.mdi-flask-empty-outline:before{content:\"\\F0095\"}.mdi-flask-empty-plus:before{content:\"\\F123C\"}.mdi-flask-empty-plus-outline:before{content:\"\\F123D\"}.mdi-flask-empty-remove:before{content:\"\\F123E\"}.mdi-flask-empty-remove-outline:before{content:\"\\F123F\"}.mdi-flask-minus:before{content:\"\\F1240\"}.mdi-flask-minus-outline:before{content:\"\\F1241\"}.mdi-flask-off:before{content:\"\\F13F6\"}.mdi-flask-off-outline:before{content:\"\\F13F7\"}.mdi-flask-outline:before{content:\"\\F0096\"}.mdi-flask-plus:before{content:\"\\F1242\"}.mdi-flask-plus-outline:before{content:\"\\F1243\"}.mdi-flask-remove:before{content:\"\\F1244\"}.mdi-flask-remove-outline:before{content:\"\\F1245\"}.mdi-flask-round-bottom:before{content:\"\\F124B\"}.mdi-flask-round-bottom-empty:before{content:\"\\F124C\"}.mdi-flask-round-bottom-empty-outline:before{content:\"\\F124D\"}.mdi-flask-round-bottom-outline:before{content:\"\\F124E\"}.mdi-fleur-de-lis:before{content:\"\\F1303\"}.mdi-flip-horizontal:before{content:\"\\F10E7\"}.mdi-flip-to-back:before{content:\"\\F0247\"}.mdi-flip-to-front:before{content:\"\\F0248\"}.mdi-flip-vertical:before{content:\"\\F10E8\"}.mdi-floor-lamp:before{content:\"\\F08DD\"}.mdi-floor-lamp-dual:before{content:\"\\F1040\"}.mdi-floor-lamp-variant:before{content:\"\\F1041\"}.mdi-floor-plan:before{content:\"\\F0821\"}.mdi-floppy:before{content:\"\\F0249\"}.mdi-floppy-variant:before{content:\"\\F09EF\"}.mdi-flower:before{content:\"\\F024A\"}.mdi-flower-outline:before{content:\"\\F09F0\"}.mdi-flower-poppy:before{content:\"\\F0D08\"}.mdi-flower-tulip:before{content:\"\\F09F1\"}.mdi-flower-tulip-outline:before{content:\"\\F09F2\"}.mdi-focus-auto:before{content:\"\\F0F4E\"}.mdi-focus-field:before{content:\"\\F0F4F\"}.mdi-focus-field-horizontal:before{content:\"\\F0F50\"}.mdi-focus-field-vertical:before{content:\"\\F0F51\"}.mdi-folder:before{content:\"\\F024B\"}.mdi-folder-account:before{content:\"\\F024C\"}.mdi-folder-account-outline:before{content:\"\\F0B9C\"}.mdi-folder-alert:before{content:\"\\F0DCC\"}.mdi-folder-alert-outline:before{content:\"\\F0DCD\"}.mdi-folder-clock:before{content:\"\\F0ABA\"}.mdi-folder-clock-outline:before{content:\"\\F0ABB\"}.mdi-folder-cog:before{content:\"\\F107F\"}.mdi-folder-cog-outline:before{content:\"\\F1080\"}.mdi-folder-download:before{content:\"\\F024D\"}.mdi-folder-download-outline:before{content:\"\\F10E9\"}.mdi-folder-edit:before{content:\"\\F08DE\"}.mdi-folder-edit-outline:before{content:\"\\F0DCE\"}.mdi-folder-google-drive:before{content:\"\\F024E\"}.mdi-folder-heart:before{content:\"\\F10EA\"}.mdi-folder-heart-outline:before{content:\"\\F10EB\"}.mdi-folder-home:before{content:\"\\F10B5\"}.mdi-folder-home-outline:before{content:\"\\F10B6\"}.mdi-folder-image:before{content:\"\\F024F\"}.mdi-folder-information:before{content:\"\\F10B7\"}.mdi-folder-information-outline:before{content:\"\\F10B8\"}.mdi-folder-key:before{content:\"\\F08AC\"}.mdi-folder-key-network:before{content:\"\\F08AD\"}.mdi-folder-key-network-outline:before{content:\"\\F0C80\"}.mdi-folder-key-outline:before{content:\"\\F10EC\"}.mdi-folder-lock:before{content:\"\\F0250\"}.mdi-folder-lock-open:before{content:\"\\F0251\"}.mdi-folder-marker:before{content:\"\\F126D\"}.mdi-folder-marker-outline:before{content:\"\\F126E\"}.mdi-folder-move:before{content:\"\\F0252\"}.mdi-folder-move-outline:before{content:\"\\F1246\"}.mdi-folder-multiple:before{content:\"\\F0253\"}.mdi-folder-multiple-image:before{content:\"\\F0254\"}.mdi-folder-multiple-outline:before{content:\"\\F0255\"}.mdi-folder-multiple-plus:before{content:\"\\F147E\"}.mdi-folder-multiple-plus-outline:before{content:\"\\F147F\"}.mdi-folder-music:before{content:\"\\F1359\"}.mdi-folder-music-outline:before{content:\"\\F135A\"}.mdi-folder-network:before{content:\"\\F0870\"}.mdi-folder-network-outline:before{content:\"\\F0C81\"}.mdi-folder-open:before{content:\"\\F0770\"}.mdi-folder-open-outline:before{content:\"\\F0DCF\"}.mdi-folder-outline:before{content:\"\\F0256\"}.mdi-folder-plus:before{content:\"\\F0257\"}.mdi-folder-plus-outline:before{content:\"\\F0B9D\"}.mdi-folder-pound:before{content:\"\\F0D09\"}.mdi-folder-pound-outline:before{content:\"\\F0D0A\"}.mdi-folder-refresh:before{content:\"\\F0749\"}.mdi-folder-refresh-outline:before{content:\"\\F0542\"}.mdi-folder-remove:before{content:\"\\F0258\"}.mdi-folder-remove-outline:before{content:\"\\F0B9E\"}.mdi-folder-search:before{content:\"\\F0968\"}.mdi-folder-search-outline:before{content:\"\\F0969\"}.mdi-folder-settings:before{content:\"\\F107D\"}.mdi-folder-settings-outline:before{content:\"\\F107E\"}.mdi-folder-star:before{content:\"\\F069D\"}.mdi-folder-star-multiple:before{content:\"\\F13D3\"}.mdi-folder-star-multiple-outline:before{content:\"\\F13D4\"}.mdi-folder-star-outline:before{content:\"\\F0B9F\"}.mdi-folder-swap:before{content:\"\\F0FB6\"}.mdi-folder-swap-outline:before{content:\"\\F0FB7\"}.mdi-folder-sync:before{content:\"\\F0D0B\"}.mdi-folder-sync-outline:before{content:\"\\F0D0C\"}.mdi-folder-table:before{content:\"\\F12E3\"}.mdi-folder-table-outline:before{content:\"\\F12E4\"}.mdi-folder-text:before{content:\"\\F0C82\"}.mdi-folder-text-outline:before{content:\"\\F0C83\"}.mdi-folder-upload:before{content:\"\\F0259\"}.mdi-folder-upload-outline:before{content:\"\\F10ED\"}.mdi-folder-zip:before{content:\"\\F06EB\"}.mdi-folder-zip-outline:before{content:\"\\F07B9\"}.mdi-font-awesome:before{content:\"\\F003A\"}.mdi-food:before{content:\"\\F025A\"}.mdi-food-apple:before{content:\"\\F025B\"}.mdi-food-apple-outline:before{content:\"\\F0C84\"}.mdi-food-croissant:before{content:\"\\F07C8\"}.mdi-food-drumstick:before{content:\"\\F141F\"}.mdi-food-drumstick-off:before{content:\"\\F1468\"}.mdi-food-drumstick-off-outline:before{content:\"\\F1469\"}.mdi-food-drumstick-outline:before{content:\"\\F1420\"}.mdi-food-fork-drink:before{content:\"\\F05F2\"}.mdi-food-halal:before{content:\"\\F1572\"}.mdi-food-kosher:before{content:\"\\F1573\"}.mdi-food-off:before{content:\"\\F05F3\"}.mdi-food-steak:before{content:\"\\F146A\"}.mdi-food-steak-off:before{content:\"\\F146B\"}.mdi-food-variant:before{content:\"\\F025C\"}.mdi-food-variant-off:before{content:\"\\F13E5\"}.mdi-foot-print:before{content:\"\\F0F52\"}.mdi-football:before{content:\"\\F025D\"}.mdi-football-australian:before{content:\"\\F025E\"}.mdi-football-helmet:before{content:\"\\F025F\"}.mdi-forklift:before{content:\"\\F07C9\"}.mdi-form-dropdown:before{content:\"\\F1400\"}.mdi-form-select:before{content:\"\\F1401\"}.mdi-form-textarea:before{content:\"\\F1095\"}.mdi-form-textbox:before{content:\"\\F060E\"}.mdi-form-textbox-lock:before{content:\"\\F135D\"}.mdi-form-textbox-password:before{content:\"\\F07F5\"}.mdi-format-align-bottom:before{content:\"\\F0753\"}.mdi-format-align-center:before{content:\"\\F0260\"}.mdi-format-align-justify:before{content:\"\\F0261\"}.mdi-format-align-left:before{content:\"\\F0262\"}.mdi-format-align-middle:before{content:\"\\F0754\"}.mdi-format-align-right:before{content:\"\\F0263\"}.mdi-format-align-top:before{content:\"\\F0755\"}.mdi-format-annotation-minus:before{content:\"\\F0ABC\"}.mdi-format-annotation-plus:before{content:\"\\F0646\"}.mdi-format-bold:before{content:\"\\F0264\"}.mdi-format-clear:before{content:\"\\F0265\"}.mdi-format-color-fill:before{content:\"\\F0266\"}.mdi-format-color-highlight:before{content:\"\\F0E31\"}.mdi-format-color-marker-cancel:before{content:\"\\F1313\"}.mdi-format-color-text:before{content:\"\\F069E\"}.mdi-format-columns:before{content:\"\\F08DF\"}.mdi-format-float-center:before{content:\"\\F0267\"}.mdi-format-float-left:before{content:\"\\F0268\"}.mdi-format-float-none:before{content:\"\\F0269\"}.mdi-format-float-right:before{content:\"\\F026A\"}.mdi-format-font:before{content:\"\\F06D6\"}.mdi-format-font-size-decrease:before{content:\"\\F09F3\"}.mdi-format-font-size-increase:before{content:\"\\F09F4\"}.mdi-format-header-1:before{content:\"\\F026B\"}.mdi-format-header-2:before{content:\"\\F026C\"}.mdi-format-header-3:before{content:\"\\F026D\"}.mdi-format-header-4:before{content:\"\\F026E\"}.mdi-format-header-5:before{content:\"\\F026F\"}.mdi-format-header-6:before{content:\"\\F0270\"}.mdi-format-header-decrease:before{content:\"\\F0271\"}.mdi-format-header-equal:before{content:\"\\F0272\"}.mdi-format-header-increase:before{content:\"\\F0273\"}.mdi-format-header-pound:before{content:\"\\F0274\"}.mdi-format-horizontal-align-center:before{content:\"\\F061E\"}.mdi-format-horizontal-align-left:before{content:\"\\F061F\"}.mdi-format-horizontal-align-right:before{content:\"\\F0620\"}.mdi-format-indent-decrease:before{content:\"\\F0275\"}.mdi-format-indent-increase:before{content:\"\\F0276\"}.mdi-format-italic:before{content:\"\\F0277\"}.mdi-format-letter-case:before{content:\"\\F0B34\"}.mdi-format-letter-case-lower:before{content:\"\\F0B35\"}.mdi-format-letter-case-upper:before{content:\"\\F0B36\"}.mdi-format-letter-ends-with:before{content:\"\\F0FB8\"}.mdi-format-letter-matches:before{content:\"\\F0FB9\"}.mdi-format-letter-starts-with:before{content:\"\\F0FBA\"}.mdi-format-line-spacing:before{content:\"\\F0278\"}.mdi-format-line-style:before{content:\"\\F05C8\"}.mdi-format-line-weight:before{content:\"\\F05C9\"}.mdi-format-list-bulleted:before{content:\"\\F0279\"}.mdi-format-list-bulleted-square:before{content:\"\\F0DD0\"}.mdi-format-list-bulleted-triangle:before{content:\"\\F0EB2\"}.mdi-format-list-bulleted-type:before{content:\"\\F027A\"}.mdi-format-list-checkbox:before{content:\"\\F096A\"}.mdi-format-list-checks:before{content:\"\\F0756\"}.mdi-format-list-numbered:before{content:\"\\F027B\"}.mdi-format-list-numbered-rtl:before{content:\"\\F0D0D\"}.mdi-format-list-text:before{content:\"\\F126F\"}.mdi-format-overline:before{content:\"\\F0EB3\"}.mdi-format-page-break:before{content:\"\\F06D7\"}.mdi-format-paint:before{content:\"\\F027C\"}.mdi-format-paragraph:before{content:\"\\F027D\"}.mdi-format-pilcrow:before{content:\"\\F06D8\"}.mdi-format-quote-close:before{content:\"\\F027E\"}.mdi-format-quote-close-outline:before{content:\"\\F11A8\"}.mdi-format-quote-open:before{content:\"\\F0757\"}.mdi-format-quote-open-outline:before{content:\"\\F11A7\"}.mdi-format-rotate-90:before{content:\"\\F06AA\"}.mdi-format-section:before{content:\"\\F069F\"}.mdi-format-size:before{content:\"\\F027F\"}.mdi-format-strikethrough:before{content:\"\\F0280\"}.mdi-format-strikethrough-variant:before{content:\"\\F0281\"}.mdi-format-subscript:before{content:\"\\F0282\"}.mdi-format-superscript:before{content:\"\\F0283\"}.mdi-format-text:before{content:\"\\F0284\"}.mdi-format-text-rotation-angle-down:before{content:\"\\F0FBB\"}.mdi-format-text-rotation-angle-up:before{content:\"\\F0FBC\"}.mdi-format-text-rotation-down:before{content:\"\\F0D73\"}.mdi-format-text-rotation-down-vertical:before{content:\"\\F0FBD\"}.mdi-format-text-rotation-none:before{content:\"\\F0D74\"}.mdi-format-text-rotation-up:before{content:\"\\F0FBE\"}.mdi-format-text-rotation-vertical:before{content:\"\\F0FBF\"}.mdi-format-text-variant:before{content:\"\\F0E32\"}.mdi-format-text-variant-outline:before{content:\"\\F150F\"}.mdi-format-text-wrapping-clip:before{content:\"\\F0D0E\"}.mdi-format-text-wrapping-overflow:before{content:\"\\F0D0F\"}.mdi-format-text-wrapping-wrap:before{content:\"\\F0D10\"}.mdi-format-textbox:before{content:\"\\F0D11\"}.mdi-format-textdirection-l-to-r:before{content:\"\\F0285\"}.mdi-format-textdirection-r-to-l:before{content:\"\\F0286\"}.mdi-format-title:before{content:\"\\F05F4\"}.mdi-format-underline:before{content:\"\\F0287\"}.mdi-format-vertical-align-bottom:before{content:\"\\F0621\"}.mdi-format-vertical-align-center:before{content:\"\\F0622\"}.mdi-format-vertical-align-top:before{content:\"\\F0623\"}.mdi-format-wrap-inline:before{content:\"\\F0288\"}.mdi-format-wrap-square:before{content:\"\\F0289\"}.mdi-format-wrap-tight:before{content:\"\\F028A\"}.mdi-format-wrap-top-bottom:before{content:\"\\F028B\"}.mdi-forum:before{content:\"\\F028C\"}.mdi-forum-outline:before{content:\"\\F0822\"}.mdi-forward:before{content:\"\\F028D\"}.mdi-forwardburger:before{content:\"\\F0D75\"}.mdi-fountain:before{content:\"\\F096B\"}.mdi-fountain-pen:before{content:\"\\F0D12\"}.mdi-fountain-pen-tip:before{content:\"\\F0D13\"}.mdi-freebsd:before{content:\"\\F08E0\"}.mdi-frequently-asked-questions:before{content:\"\\F0EB4\"}.mdi-fridge:before{content:\"\\F0290\"}.mdi-fridge-alert:before{content:\"\\F11B1\"}.mdi-fridge-alert-outline:before{content:\"\\F11B2\"}.mdi-fridge-bottom:before{content:\"\\F0292\"}.mdi-fridge-industrial:before{content:\"\\F15EE\"}.mdi-fridge-industrial-alert:before{content:\"\\F15EF\"}.mdi-fridge-industrial-alert-outline:before{content:\"\\F15F0\"}.mdi-fridge-industrial-off:before{content:\"\\F15F1\"}.mdi-fridge-industrial-off-outline:before{content:\"\\F15F2\"}.mdi-fridge-industrial-outline:before{content:\"\\F15F3\"}.mdi-fridge-off:before{content:\"\\F11AF\"}.mdi-fridge-off-outline:before{content:\"\\F11B0\"}.mdi-fridge-outline:before{content:\"\\F028F\"}.mdi-fridge-top:before{content:\"\\F0291\"}.mdi-fridge-variant:before{content:\"\\F15F4\"}.mdi-fridge-variant-alert:before{content:\"\\F15F5\"}.mdi-fridge-variant-alert-outline:before{content:\"\\F15F6\"}.mdi-fridge-variant-off:before{content:\"\\F15F7\"}.mdi-fridge-variant-off-outline:before{content:\"\\F15F8\"}.mdi-fridge-variant-outline:before{content:\"\\F15F9\"}.mdi-fruit-cherries:before{content:\"\\F1042\"}.mdi-fruit-cherries-off:before{content:\"\\F13F8\"}.mdi-fruit-citrus:before{content:\"\\F1043\"}.mdi-fruit-citrus-off:before{content:\"\\F13F9\"}.mdi-fruit-grapes:before{content:\"\\F1044\"}.mdi-fruit-grapes-outline:before{content:\"\\F1045\"}.mdi-fruit-pineapple:before{content:\"\\F1046\"}.mdi-fruit-watermelon:before{content:\"\\F1047\"}.mdi-fuel:before{content:\"\\F07CA\"}.mdi-fullscreen:before{content:\"\\F0293\"}.mdi-fullscreen-exit:before{content:\"\\F0294\"}.mdi-function:before{content:\"\\F0295\"}.mdi-function-variant:before{content:\"\\F0871\"}.mdi-furigana-horizontal:before{content:\"\\F1081\"}.mdi-furigana-vertical:before{content:\"\\F1082\"}.mdi-fuse:before{content:\"\\F0C85\"}.mdi-fuse-alert:before{content:\"\\F142D\"}.mdi-fuse-blade:before{content:\"\\F0C86\"}.mdi-fuse-off:before{content:\"\\F142C\"}.mdi-gamepad:before{content:\"\\F0296\"}.mdi-gamepad-circle:before{content:\"\\F0E33\"}.mdi-gamepad-circle-down:before{content:\"\\F0E34\"}.mdi-gamepad-circle-left:before{content:\"\\F0E35\"}.mdi-gamepad-circle-outline:before{content:\"\\F0E36\"}.mdi-gamepad-circle-right:before{content:\"\\F0E37\"}.mdi-gamepad-circle-up:before{content:\"\\F0E38\"}.mdi-gamepad-down:before{content:\"\\F0E39\"}.mdi-gamepad-left:before{content:\"\\F0E3A\"}.mdi-gamepad-right:before{content:\"\\F0E3B\"}.mdi-gamepad-round:before{content:\"\\F0E3C\"}.mdi-gamepad-round-down:before{content:\"\\F0E3D\"}.mdi-gamepad-round-left:before{content:\"\\F0E3E\"}.mdi-gamepad-round-outline:before{content:\"\\F0E3F\"}.mdi-gamepad-round-right:before{content:\"\\F0E40\"}.mdi-gamepad-round-up:before{content:\"\\F0E41\"}.mdi-gamepad-square:before{content:\"\\F0EB5\"}.mdi-gamepad-square-outline:before{content:\"\\F0EB6\"}.mdi-gamepad-up:before{content:\"\\F0E42\"}.mdi-gamepad-variant:before{content:\"\\F0297\"}.mdi-gamepad-variant-outline:before{content:\"\\F0EB7\"}.mdi-gamma:before{content:\"\\F10EE\"}.mdi-gantry-crane:before{content:\"\\F0DD1\"}.mdi-garage:before{content:\"\\F06D9\"}.mdi-garage-alert:before{content:\"\\F0872\"}.mdi-garage-alert-variant:before{content:\"\\F12D5\"}.mdi-garage-open:before{content:\"\\F06DA\"}.mdi-garage-open-variant:before{content:\"\\F12D4\"}.mdi-garage-variant:before{content:\"\\F12D3\"}.mdi-gas-cylinder:before{content:\"\\F0647\"}.mdi-gas-station:before{content:\"\\F0298\"}.mdi-gas-station-off:before{content:\"\\F1409\"}.mdi-gas-station-off-outline:before{content:\"\\F140A\"}.mdi-gas-station-outline:before{content:\"\\F0EB8\"}.mdi-gate:before{content:\"\\F0299\"}.mdi-gate-and:before{content:\"\\F08E1\"}.mdi-gate-arrow-right:before{content:\"\\F1169\"}.mdi-gate-nand:before{content:\"\\F08E2\"}.mdi-gate-nor:before{content:\"\\F08E3\"}.mdi-gate-not:before{content:\"\\F08E4\"}.mdi-gate-open:before{content:\"\\F116A\"}.mdi-gate-or:before{content:\"\\F08E5\"}.mdi-gate-xnor:before{content:\"\\F08E6\"}.mdi-gate-xor:before{content:\"\\F08E7\"}.mdi-gatsby:before{content:\"\\F0E43\"}.mdi-gauge:before{content:\"\\F029A\"}.mdi-gauge-empty:before{content:\"\\F0873\"}.mdi-gauge-full:before{content:\"\\F0874\"}.mdi-gauge-low:before{content:\"\\F0875\"}.mdi-gavel:before{content:\"\\F029B\"}.mdi-gender-female:before{content:\"\\F029C\"}.mdi-gender-male:before{content:\"\\F029D\"}.mdi-gender-male-female:before{content:\"\\F029E\"}.mdi-gender-male-female-variant:before{content:\"\\F113F\"}.mdi-gender-non-binary:before{content:\"\\F1140\"}.mdi-gender-transgender:before{content:\"\\F029F\"}.mdi-gentoo:before{content:\"\\F08E8\"}.mdi-gesture:before{content:\"\\F07CB\"}.mdi-gesture-double-tap:before{content:\"\\F073C\"}.mdi-gesture-pinch:before{content:\"\\F0ABD\"}.mdi-gesture-spread:before{content:\"\\F0ABE\"}.mdi-gesture-swipe:before{content:\"\\F0D76\"}.mdi-gesture-swipe-down:before{content:\"\\F073D\"}.mdi-gesture-swipe-horizontal:before{content:\"\\F0ABF\"}.mdi-gesture-swipe-left:before{content:\"\\F073E\"}.mdi-gesture-swipe-right:before{content:\"\\F073F\"}.mdi-gesture-swipe-up:before{content:\"\\F0740\"}.mdi-gesture-swipe-vertical:before{content:\"\\F0AC0\"}.mdi-gesture-tap:before{content:\"\\F0741\"}.mdi-gesture-tap-box:before{content:\"\\F12A9\"}.mdi-gesture-tap-button:before{content:\"\\F12A8\"}.mdi-gesture-tap-hold:before{content:\"\\F0D77\"}.mdi-gesture-two-double-tap:before{content:\"\\F0742\"}.mdi-gesture-two-tap:before{content:\"\\F0743\"}.mdi-ghost:before{content:\"\\F02A0\"}.mdi-ghost-off:before{content:\"\\F09F5\"}.mdi-ghost-off-outline:before{content:\"\\F165C\"}.mdi-ghost-outline:before{content:\"\\F165D\"}.mdi-gif:before{content:\"\\F0D78\"}.mdi-gift:before{content:\"\\F0E44\"}.mdi-gift-outline:before{content:\"\\F02A1\"}.mdi-git:before{content:\"\\F02A2\"}.mdi-github:before{content:\"\\F02A4\"}.mdi-gitlab:before{content:\"\\F0BA0\"}.mdi-glass-cocktail:before{content:\"\\F0356\"}.mdi-glass-cocktail-off:before{content:\"\\F15E6\"}.mdi-glass-flute:before{content:\"\\F02A5\"}.mdi-glass-mug:before{content:\"\\F02A6\"}.mdi-glass-mug-off:before{content:\"\\F15E7\"}.mdi-glass-mug-variant:before{content:\"\\F1116\"}.mdi-glass-mug-variant-off:before{content:\"\\F15E8\"}.mdi-glass-pint-outline:before{content:\"\\F130D\"}.mdi-glass-stange:before{content:\"\\F02A7\"}.mdi-glass-tulip:before{content:\"\\F02A8\"}.mdi-glass-wine:before{content:\"\\F0876\"}.mdi-glasses:before{content:\"\\F02AA\"}.mdi-globe-light:before{content:\"\\F12D7\"}.mdi-globe-model:before{content:\"\\F08E9\"}.mdi-gmail:before{content:\"\\F02AB\"}.mdi-gnome:before{content:\"\\F02AC\"}.mdi-go-kart:before{content:\"\\F0D79\"}.mdi-go-kart-track:before{content:\"\\F0D7A\"}.mdi-gog:before{content:\"\\F0BA1\"}.mdi-gold:before{content:\"\\F124F\"}.mdi-golf:before{content:\"\\F0823\"}.mdi-golf-cart:before{content:\"\\F11A4\"}.mdi-golf-tee:before{content:\"\\F1083\"}.mdi-gondola:before{content:\"\\F0686\"}.mdi-goodreads:before{content:\"\\F0D7B\"}.mdi-google:before{content:\"\\F02AD\"}.mdi-google-ads:before{content:\"\\F0C87\"}.mdi-google-analytics:before{content:\"\\F07CC\"}.mdi-google-assistant:before{content:\"\\F07CD\"}.mdi-google-cardboard:before{content:\"\\F02AE\"}.mdi-google-chrome:before{content:\"\\F02AF\"}.mdi-google-circles:before{content:\"\\F02B0\"}.mdi-google-circles-communities:before{content:\"\\F02B1\"}.mdi-google-circles-extended:before{content:\"\\F02B2\"}.mdi-google-circles-group:before{content:\"\\F02B3\"}.mdi-google-classroom:before{content:\"\\F02C0\"}.mdi-google-cloud:before{content:\"\\F11F6\"}.mdi-google-controller:before{content:\"\\F02B4\"}.mdi-google-controller-off:before{content:\"\\F02B5\"}.mdi-google-downasaur:before{content:\"\\F1362\"}.mdi-google-drive:before{content:\"\\F02B6\"}.mdi-google-earth:before{content:\"\\F02B7\"}.mdi-google-fit:before{content:\"\\F096C\"}.mdi-google-glass:before{content:\"\\F02B8\"}.mdi-google-hangouts:before{content:\"\\F02C9\"}.mdi-google-home:before{content:\"\\F0824\"}.mdi-google-keep:before{content:\"\\F06DC\"}.mdi-google-lens:before{content:\"\\F09F6\"}.mdi-google-maps:before{content:\"\\F05F5\"}.mdi-google-my-business:before{content:\"\\F1048\"}.mdi-google-nearby:before{content:\"\\F02B9\"}.mdi-google-photos:before{content:\"\\F06DD\"}.mdi-google-play:before{content:\"\\F02BC\"}.mdi-google-plus:before{content:\"\\F02BD\"}.mdi-google-podcast:before{content:\"\\F0EB9\"}.mdi-google-spreadsheet:before{content:\"\\F09F7\"}.mdi-google-street-view:before{content:\"\\F0C88\"}.mdi-google-translate:before{content:\"\\F02BF\"}.mdi-gradient:before{content:\"\\F06A0\"}.mdi-grain:before{content:\"\\F0D7C\"}.mdi-graph:before{content:\"\\F1049\"}.mdi-graph-outline:before{content:\"\\F104A\"}.mdi-graphql:before{content:\"\\F0877\"}.mdi-grass:before{content:\"\\F1510\"}.mdi-grave-stone:before{content:\"\\F0BA2\"}.mdi-grease-pencil:before{content:\"\\F0648\"}.mdi-greater-than:before{content:\"\\F096D\"}.mdi-greater-than-or-equal:before{content:\"\\F096E\"}.mdi-grid:before{content:\"\\F02C1\"}.mdi-grid-large:before{content:\"\\F0758\"}.mdi-grid-off:before{content:\"\\F02C2\"}.mdi-grill:before{content:\"\\F0E45\"}.mdi-grill-outline:before{content:\"\\F118A\"}.mdi-group:before{content:\"\\F02C3\"}.mdi-guitar-acoustic:before{content:\"\\F0771\"}.mdi-guitar-electric:before{content:\"\\F02C4\"}.mdi-guitar-pick:before{content:\"\\F02C5\"}.mdi-guitar-pick-outline:before{content:\"\\F02C6\"}.mdi-guy-fawkes-mask:before{content:\"\\F0825\"}.mdi-hail:before{content:\"\\F0AC1\"}.mdi-hair-dryer:before{content:\"\\F10EF\"}.mdi-hair-dryer-outline:before{content:\"\\F10F0\"}.mdi-halloween:before{content:\"\\F0BA3\"}.mdi-hamburger:before{content:\"\\F0685\"}.mdi-hammer:before{content:\"\\F08EA\"}.mdi-hammer-screwdriver:before{content:\"\\F1322\"}.mdi-hammer-wrench:before{content:\"\\F1323\"}.mdi-hand:before{content:\"\\F0A4F\"}.mdi-hand-heart:before{content:\"\\F10F1\"}.mdi-hand-heart-outline:before{content:\"\\F157E\"}.mdi-hand-left:before{content:\"\\F0E46\"}.mdi-hand-okay:before{content:\"\\F0A50\"}.mdi-hand-peace:before{content:\"\\F0A51\"}.mdi-hand-peace-variant:before{content:\"\\F0A52\"}.mdi-hand-pointing-down:before{content:\"\\F0A53\"}.mdi-hand-pointing-left:before{content:\"\\F0A54\"}.mdi-hand-pointing-right:before{content:\"\\F02C7\"}.mdi-hand-pointing-up:before{content:\"\\F0A55\"}.mdi-hand-right:before{content:\"\\F0E47\"}.mdi-hand-saw:before{content:\"\\F0E48\"}.mdi-hand-wash:before{content:\"\\F157F\"}.mdi-hand-wash-outline:before{content:\"\\F1580\"}.mdi-hand-water:before{content:\"\\F139F\"}.mdi-handball:before{content:\"\\F0F53\"}.mdi-handcuffs:before{content:\"\\F113E\"}.mdi-handshake:before{content:\"\\F1218\"}.mdi-handshake-outline:before{content:\"\\F15A1\"}.mdi-hanger:before{content:\"\\F02C8\"}.mdi-hard-hat:before{content:\"\\F096F\"}.mdi-harddisk:before{content:\"\\F02CA\"}.mdi-harddisk-plus:before{content:\"\\F104B\"}.mdi-harddisk-remove:before{content:\"\\F104C\"}.mdi-hat-fedora:before{content:\"\\F0BA4\"}.mdi-hazard-lights:before{content:\"\\F0C89\"}.mdi-hdr:before{content:\"\\F0D7D\"}.mdi-hdr-off:before{content:\"\\F0D7E\"}.mdi-head:before{content:\"\\F135E\"}.mdi-head-alert:before{content:\"\\F1338\"}.mdi-head-alert-outline:before{content:\"\\F1339\"}.mdi-head-check:before{content:\"\\F133A\"}.mdi-head-check-outline:before{content:\"\\F133B\"}.mdi-head-cog:before{content:\"\\F133C\"}.mdi-head-cog-outline:before{content:\"\\F133D\"}.mdi-head-dots-horizontal:before{content:\"\\F133E\"}.mdi-head-dots-horizontal-outline:before{content:\"\\F133F\"}.mdi-head-flash:before{content:\"\\F1340\"}.mdi-head-flash-outline:before{content:\"\\F1341\"}.mdi-head-heart:before{content:\"\\F1342\"}.mdi-head-heart-outline:before{content:\"\\F1343\"}.mdi-head-lightbulb:before{content:\"\\F1344\"}.mdi-head-lightbulb-outline:before{content:\"\\F1345\"}.mdi-head-minus:before{content:\"\\F1346\"}.mdi-head-minus-outline:before{content:\"\\F1347\"}.mdi-head-outline:before{content:\"\\F135F\"}.mdi-head-plus:before{content:\"\\F1348\"}.mdi-head-plus-outline:before{content:\"\\F1349\"}.mdi-head-question:before{content:\"\\F134A\"}.mdi-head-question-outline:before{content:\"\\F134B\"}.mdi-head-remove:before{content:\"\\F134C\"}.mdi-head-remove-outline:before{content:\"\\F134D\"}.mdi-head-snowflake:before{content:\"\\F134E\"}.mdi-head-snowflake-outline:before{content:\"\\F134F\"}.mdi-head-sync:before{content:\"\\F1350\"}.mdi-head-sync-outline:before{content:\"\\F1351\"}.mdi-headphones:before{content:\"\\F02CB\"}.mdi-headphones-bluetooth:before{content:\"\\F0970\"}.mdi-headphones-box:before{content:\"\\F02CC\"}.mdi-headphones-off:before{content:\"\\F07CE\"}.mdi-headphones-settings:before{content:\"\\F02CD\"}.mdi-headset:before{content:\"\\F02CE\"}.mdi-headset-dock:before{content:\"\\F02CF\"}.mdi-headset-off:before{content:\"\\F02D0\"}.mdi-heart:before{content:\"\\F02D1\"}.mdi-heart-box:before{content:\"\\F02D2\"}.mdi-heart-box-outline:before{content:\"\\F02D3\"}.mdi-heart-broken:before{content:\"\\F02D4\"}.mdi-heart-broken-outline:before{content:\"\\F0D14\"}.mdi-heart-circle:before{content:\"\\F0971\"}.mdi-heart-circle-outline:before{content:\"\\F0972\"}.mdi-heart-cog:before{content:\"\\F1663\"}.mdi-heart-cog-outline:before{content:\"\\F1664\"}.mdi-heart-flash:before{content:\"\\F0EF9\"}.mdi-heart-half:before{content:\"\\F06DF\"}.mdi-heart-half-full:before{content:\"\\F06DE\"}.mdi-heart-half-outline:before{content:\"\\F06E0\"}.mdi-heart-minus:before{content:\"\\F142F\"}.mdi-heart-minus-outline:before{content:\"\\F1432\"}.mdi-heart-multiple:before{content:\"\\F0A56\"}.mdi-heart-multiple-outline:before{content:\"\\F0A57\"}.mdi-heart-off:before{content:\"\\F0759\"}.mdi-heart-off-outline:before{content:\"\\F1434\"}.mdi-heart-outline:before{content:\"\\F02D5\"}.mdi-heart-plus:before{content:\"\\F142E\"}.mdi-heart-plus-outline:before{content:\"\\F1431\"}.mdi-heart-pulse:before{content:\"\\F05F6\"}.mdi-heart-remove:before{content:\"\\F1430\"}.mdi-heart-remove-outline:before{content:\"\\F1433\"}.mdi-heart-settings:before{content:\"\\F1665\"}.mdi-heart-settings-outline:before{content:\"\\F1666\"}.mdi-helicopter:before{content:\"\\F0AC2\"}.mdi-help:before{content:\"\\F02D6\"}.mdi-help-box:before{content:\"\\F078B\"}.mdi-help-circle:before{content:\"\\F02D7\"}.mdi-help-circle-outline:before{content:\"\\F0625\"}.mdi-help-network:before{content:\"\\F06F5\"}.mdi-help-network-outline:before{content:\"\\F0C8A\"}.mdi-help-rhombus:before{content:\"\\F0BA5\"}.mdi-help-rhombus-outline:before{content:\"\\F0BA6\"}.mdi-hexadecimal:before{content:\"\\F12A7\"}.mdi-hexagon:before{content:\"\\F02D8\"}.mdi-hexagon-multiple:before{content:\"\\F06E1\"}.mdi-hexagon-multiple-outline:before{content:\"\\F10F2\"}.mdi-hexagon-outline:before{content:\"\\F02D9\"}.mdi-hexagon-slice-1:before{content:\"\\F0AC3\"}.mdi-hexagon-slice-2:before{content:\"\\F0AC4\"}.mdi-hexagon-slice-3:before{content:\"\\F0AC5\"}.mdi-hexagon-slice-4:before{content:\"\\F0AC6\"}.mdi-hexagon-slice-5:before{content:\"\\F0AC7\"}.mdi-hexagon-slice-6:before{content:\"\\F0AC8\"}.mdi-hexagram:before{content:\"\\F0AC9\"}.mdi-hexagram-outline:before{content:\"\\F0ACA\"}.mdi-high-definition:before{content:\"\\F07CF\"}.mdi-high-definition-box:before{content:\"\\F0878\"}.mdi-highway:before{content:\"\\F05F7\"}.mdi-hiking:before{content:\"\\F0D7F\"}.mdi-hinduism:before{content:\"\\F0973\"}.mdi-history:before{content:\"\\F02DA\"}.mdi-hockey-puck:before{content:\"\\F0879\"}.mdi-hockey-sticks:before{content:\"\\F087A\"}.mdi-hololens:before{content:\"\\F02DB\"}.mdi-home:before{content:\"\\F02DC\"}.mdi-home-account:before{content:\"\\F0826\"}.mdi-home-alert:before{content:\"\\F087B\"}.mdi-home-alert-outline:before{content:\"\\F15D0\"}.mdi-home-analytics:before{content:\"\\F0EBA\"}.mdi-home-assistant:before{content:\"\\F07D0\"}.mdi-home-automation:before{content:\"\\F07D1\"}.mdi-home-circle:before{content:\"\\F07D2\"}.mdi-home-circle-outline:before{content:\"\\F104D\"}.mdi-home-city:before{content:\"\\F0D15\"}.mdi-home-city-outline:before{content:\"\\F0D16\"}.mdi-home-currency-usd:before{content:\"\\F08AF\"}.mdi-home-edit:before{content:\"\\F1159\"}.mdi-home-edit-outline:before{content:\"\\F115A\"}.mdi-home-export-outline:before{content:\"\\F0F9B\"}.mdi-home-flood:before{content:\"\\F0EFA\"}.mdi-home-floor-0:before{content:\"\\F0DD2\"}.mdi-home-floor-1:before{content:\"\\F0D80\"}.mdi-home-floor-2:before{content:\"\\F0D81\"}.mdi-home-floor-3:before{content:\"\\F0D82\"}.mdi-home-floor-a:before{content:\"\\F0D83\"}.mdi-home-floor-b:before{content:\"\\F0D84\"}.mdi-home-floor-g:before{content:\"\\F0D85\"}.mdi-home-floor-l:before{content:\"\\F0D86\"}.mdi-home-floor-negative-1:before{content:\"\\F0DD3\"}.mdi-home-group:before{content:\"\\F0DD4\"}.mdi-home-heart:before{content:\"\\F0827\"}.mdi-home-import-outline:before{content:\"\\F0F9C\"}.mdi-home-lightbulb:before{content:\"\\F1251\"}.mdi-home-lightbulb-outline:before{content:\"\\F1252\"}.mdi-home-lock:before{content:\"\\F08EB\"}.mdi-home-lock-open:before{content:\"\\F08EC\"}.mdi-home-map-marker:before{content:\"\\F05F8\"}.mdi-home-minus:before{content:\"\\F0974\"}.mdi-home-minus-outline:before{content:\"\\F13D5\"}.mdi-home-modern:before{content:\"\\F02DD\"}.mdi-home-outline:before{content:\"\\F06A1\"}.mdi-home-plus:before{content:\"\\F0975\"}.mdi-home-plus-outline:before{content:\"\\F13D6\"}.mdi-home-remove:before{content:\"\\F1247\"}.mdi-home-remove-outline:before{content:\"\\F13D7\"}.mdi-home-roof:before{content:\"\\F112B\"}.mdi-home-search:before{content:\"\\F13B0\"}.mdi-home-search-outline:before{content:\"\\F13B1\"}.mdi-home-thermometer:before{content:\"\\F0F54\"}.mdi-home-thermometer-outline:before{content:\"\\F0F55\"}.mdi-home-variant:before{content:\"\\F02DE\"}.mdi-home-variant-outline:before{content:\"\\F0BA7\"}.mdi-hook:before{content:\"\\F06E2\"}.mdi-hook-off:before{content:\"\\F06E3\"}.mdi-hops:before{content:\"\\F02DF\"}.mdi-horizontal-rotate-clockwise:before{content:\"\\F10F3\"}.mdi-horizontal-rotate-counterclockwise:before{content:\"\\F10F4\"}.mdi-horse:before{content:\"\\F15BF\"}.mdi-horse-human:before{content:\"\\F15C0\"}.mdi-horse-variant:before{content:\"\\F15C1\"}.mdi-horseshoe:before{content:\"\\F0A58\"}.mdi-hospital:before{content:\"\\F0FF6\"}.mdi-hospital-box:before{content:\"\\F02E0\"}.mdi-hospital-box-outline:before{content:\"\\F0FF7\"}.mdi-hospital-building:before{content:\"\\F02E1\"}.mdi-hospital-marker:before{content:\"\\F02E2\"}.mdi-hot-tub:before{content:\"\\F0828\"}.mdi-hours-24:before{content:\"\\F1478\"}.mdi-hubspot:before{content:\"\\F0D17\"}.mdi-hulu:before{content:\"\\F0829\"}.mdi-human:before{content:\"\\F02E6\"}.mdi-human-baby-changing-table:before{content:\"\\F138B\"}.mdi-human-cane:before{content:\"\\F1581\"}.mdi-human-capacity-decrease:before{content:\"\\F159B\"}.mdi-human-capacity-increase:before{content:\"\\F159C\"}.mdi-human-child:before{content:\"\\F02E7\"}.mdi-human-edit:before{content:\"\\F14E8\"}.mdi-human-female:before{content:\"\\F0649\"}.mdi-human-female-boy:before{content:\"\\F0A59\"}.mdi-human-female-dance:before{content:\"\\F15C9\"}.mdi-human-female-female:before{content:\"\\F0A5A\"}.mdi-human-female-girl:before{content:\"\\F0A5B\"}.mdi-human-greeting:before{content:\"\\F064A\"}.mdi-human-greeting-proximity:before{content:\"\\F159D\"}.mdi-human-handsdown:before{content:\"\\F064B\"}.mdi-human-handsup:before{content:\"\\F064C\"}.mdi-human-male:before{content:\"\\F064D\"}.mdi-human-male-boy:before{content:\"\\F0A5C\"}.mdi-human-male-child:before{content:\"\\F138C\"}.mdi-human-male-female:before{content:\"\\F02E8\"}.mdi-human-male-girl:before{content:\"\\F0A5D\"}.mdi-human-male-height:before{content:\"\\F0EFB\"}.mdi-human-male-height-variant:before{content:\"\\F0EFC\"}.mdi-human-male-male:before{content:\"\\F0A5E\"}.mdi-human-pregnant:before{content:\"\\F05CF\"}.mdi-human-queue:before{content:\"\\F1571\"}.mdi-human-scooter:before{content:\"\\F11E9\"}.mdi-human-wheelchair:before{content:\"\\F138D\"}.mdi-humble-bundle:before{content:\"\\F0744\"}.mdi-hvac:before{content:\"\\F1352\"}.mdi-hvac-off:before{content:\"\\F159E\"}.mdi-hydraulic-oil-level:before{content:\"\\F1324\"}.mdi-hydraulic-oil-temperature:before{content:\"\\F1325\"}.mdi-hydro-power:before{content:\"\\F12E5\"}.mdi-ice-cream:before{content:\"\\F082A\"}.mdi-ice-cream-off:before{content:\"\\F0E52\"}.mdi-ice-pop:before{content:\"\\F0EFD\"}.mdi-id-card:before{content:\"\\F0FC0\"}.mdi-identifier:before{content:\"\\F0EFE\"}.mdi-ideogram-cjk:before{content:\"\\F1331\"}.mdi-ideogram-cjk-variant:before{content:\"\\F1332\"}.mdi-iframe:before{content:\"\\F0C8B\"}.mdi-iframe-array:before{content:\"\\F10F5\"}.mdi-iframe-array-outline:before{content:\"\\F10F6\"}.mdi-iframe-braces:before{content:\"\\F10F7\"}.mdi-iframe-braces-outline:before{content:\"\\F10F8\"}.mdi-iframe-outline:before{content:\"\\F0C8C\"}.mdi-iframe-parentheses:before{content:\"\\F10F9\"}.mdi-iframe-parentheses-outline:before{content:\"\\F10FA\"}.mdi-iframe-variable:before{content:\"\\F10FB\"}.mdi-iframe-variable-outline:before{content:\"\\F10FC\"}.mdi-image:before{content:\"\\F02E9\"}.mdi-image-album:before{content:\"\\F02EA\"}.mdi-image-area:before{content:\"\\F02EB\"}.mdi-image-area-close:before{content:\"\\F02EC\"}.mdi-image-auto-adjust:before{content:\"\\F0FC1\"}.mdi-image-broken:before{content:\"\\F02ED\"}.mdi-image-broken-variant:before{content:\"\\F02EE\"}.mdi-image-edit:before{content:\"\\F11E3\"}.mdi-image-edit-outline:before{content:\"\\F11E4\"}.mdi-image-filter-black-white:before{content:\"\\F02F0\"}.mdi-image-filter-center-focus:before{content:\"\\F02F1\"}.mdi-image-filter-center-focus-strong:before{content:\"\\F0EFF\"}.mdi-image-filter-center-focus-strong-outline:before{content:\"\\F0F00\"}.mdi-image-filter-center-focus-weak:before{content:\"\\F02F2\"}.mdi-image-filter-drama:before{content:\"\\F02F3\"}.mdi-image-filter-frames:before{content:\"\\F02F4\"}.mdi-image-filter-hdr:before{content:\"\\F02F5\"}.mdi-image-filter-none:before{content:\"\\F02F6\"}.mdi-image-filter-tilt-shift:before{content:\"\\F02F7\"}.mdi-image-filter-vintage:before{content:\"\\F02F8\"}.mdi-image-frame:before{content:\"\\F0E49\"}.mdi-image-minus:before{content:\"\\F1419\"}.mdi-image-move:before{content:\"\\F09F8\"}.mdi-image-multiple:before{content:\"\\F02F9\"}.mdi-image-multiple-outline:before{content:\"\\F02EF\"}.mdi-image-off:before{content:\"\\F082B\"}.mdi-image-off-outline:before{content:\"\\F11D1\"}.mdi-image-outline:before{content:\"\\F0976\"}.mdi-image-plus:before{content:\"\\F087C\"}.mdi-image-remove:before{content:\"\\F1418\"}.mdi-image-search:before{content:\"\\F0977\"}.mdi-image-search-outline:before{content:\"\\F0978\"}.mdi-image-size-select-actual:before{content:\"\\F0C8D\"}.mdi-image-size-select-large:before{content:\"\\F0C8E\"}.mdi-image-size-select-small:before{content:\"\\F0C8F\"}.mdi-image-text:before{content:\"\\F160D\"}.mdi-import:before{content:\"\\F02FA\"}.mdi-inbox:before{content:\"\\F0687\"}.mdi-inbox-arrow-down:before{content:\"\\F02FB\"}.mdi-inbox-arrow-down-outline:before{content:\"\\F1270\"}.mdi-inbox-arrow-up:before{content:\"\\F03D1\"}.mdi-inbox-arrow-up-outline:before{content:\"\\F1271\"}.mdi-inbox-full:before{content:\"\\F1272\"}.mdi-inbox-full-outline:before{content:\"\\F1273\"}.mdi-inbox-multiple:before{content:\"\\F08B0\"}.mdi-inbox-multiple-outline:before{content:\"\\F0BA8\"}.mdi-inbox-outline:before{content:\"\\F1274\"}.mdi-inbox-remove:before{content:\"\\F159F\"}.mdi-inbox-remove-outline:before{content:\"\\F15A0\"}.mdi-incognito:before{content:\"\\F05F9\"}.mdi-incognito-circle:before{content:\"\\F1421\"}.mdi-incognito-circle-off:before{content:\"\\F1422\"}.mdi-incognito-off:before{content:\"\\F0075\"}.mdi-infinity:before{content:\"\\F06E4\"}.mdi-information:before{content:\"\\F02FC\"}.mdi-information-outline:before{content:\"\\F02FD\"}.mdi-information-variant:before{content:\"\\F064E\"}.mdi-instagram:before{content:\"\\F02FE\"}.mdi-instrument-triangle:before{content:\"\\F104E\"}.mdi-invert-colors:before{content:\"\\F0301\"}.mdi-invert-colors-off:before{content:\"\\F0E4A\"}.mdi-iobroker:before{content:\"\\F12E8\"}.mdi-ip:before{content:\"\\F0A5F\"}.mdi-ip-network:before{content:\"\\F0A60\"}.mdi-ip-network-outline:before{content:\"\\F0C90\"}.mdi-ipod:before{content:\"\\F0C91\"}.mdi-islam:before{content:\"\\F0979\"}.mdi-island:before{content:\"\\F104F\"}.mdi-iv-bag:before{content:\"\\F10B9\"}.mdi-jabber:before{content:\"\\F0DD5\"}.mdi-jeepney:before{content:\"\\F0302\"}.mdi-jellyfish:before{content:\"\\F0F01\"}.mdi-jellyfish-outline:before{content:\"\\F0F02\"}.mdi-jira:before{content:\"\\F0303\"}.mdi-jquery:before{content:\"\\F087D\"}.mdi-jsfiddle:before{content:\"\\F0304\"}.mdi-judaism:before{content:\"\\F097A\"}.mdi-jump-rope:before{content:\"\\F12FF\"}.mdi-kabaddi:before{content:\"\\F0D87\"}.mdi-kangaroo:before{content:\"\\F1558\"}.mdi-karate:before{content:\"\\F082C\"}.mdi-keg:before{content:\"\\F0305\"}.mdi-kettle:before{content:\"\\F05FA\"}.mdi-kettle-alert:before{content:\"\\F1317\"}.mdi-kettle-alert-outline:before{content:\"\\F1318\"}.mdi-kettle-off:before{content:\"\\F131B\"}.mdi-kettle-off-outline:before{content:\"\\F131C\"}.mdi-kettle-outline:before{content:\"\\F0F56\"}.mdi-kettle-steam:before{content:\"\\F1319\"}.mdi-kettle-steam-outline:before{content:\"\\F131A\"}.mdi-kettlebell:before{content:\"\\F1300\"}.mdi-key:before{content:\"\\F0306\"}.mdi-key-arrow-right:before{content:\"\\F1312\"}.mdi-key-chain:before{content:\"\\F1574\"}.mdi-key-chain-variant:before{content:\"\\F1575\"}.mdi-key-change:before{content:\"\\F0307\"}.mdi-key-link:before{content:\"\\F119F\"}.mdi-key-minus:before{content:\"\\F0308\"}.mdi-key-outline:before{content:\"\\F0DD6\"}.mdi-key-plus:before{content:\"\\F0309\"}.mdi-key-remove:before{content:\"\\F030A\"}.mdi-key-star:before{content:\"\\F119E\"}.mdi-key-variant:before{content:\"\\F030B\"}.mdi-key-wireless:before{content:\"\\F0FC2\"}.mdi-keyboard:before{content:\"\\F030C\"}.mdi-keyboard-backspace:before{content:\"\\F030D\"}.mdi-keyboard-caps:before{content:\"\\F030E\"}.mdi-keyboard-close:before{content:\"\\F030F\"}.mdi-keyboard-esc:before{content:\"\\F12B7\"}.mdi-keyboard-f1:before{content:\"\\F12AB\"}.mdi-keyboard-f10:before{content:\"\\F12B4\"}.mdi-keyboard-f11:before{content:\"\\F12B5\"}.mdi-keyboard-f12:before{content:\"\\F12B6\"}.mdi-keyboard-f2:before{content:\"\\F12AC\"}.mdi-keyboard-f3:before{content:\"\\F12AD\"}.mdi-keyboard-f4:before{content:\"\\F12AE\"}.mdi-keyboard-f5:before{content:\"\\F12AF\"}.mdi-keyboard-f6:before{content:\"\\F12B0\"}.mdi-keyboard-f7:before{content:\"\\F12B1\"}.mdi-keyboard-f8:before{content:\"\\F12B2\"}.mdi-keyboard-f9:before{content:\"\\F12B3\"}.mdi-keyboard-off:before{content:\"\\F0310\"}.mdi-keyboard-off-outline:before{content:\"\\F0E4B\"}.mdi-keyboard-outline:before{content:\"\\F097B\"}.mdi-keyboard-return:before{content:\"\\F0311\"}.mdi-keyboard-settings:before{content:\"\\F09F9\"}.mdi-keyboard-settings-outline:before{content:\"\\F09FA\"}.mdi-keyboard-space:before{content:\"\\F1050\"}.mdi-keyboard-tab:before{content:\"\\F0312\"}.mdi-keyboard-variant:before{content:\"\\F0313\"}.mdi-khanda:before{content:\"\\F10FD\"}.mdi-kickstarter:before{content:\"\\F0745\"}.mdi-klingon:before{content:\"\\F135B\"}.mdi-knife:before{content:\"\\F09FB\"}.mdi-knife-military:before{content:\"\\F09FC\"}.mdi-kodi:before{content:\"\\F0314\"}.mdi-kubernetes:before{content:\"\\F10FE\"}.mdi-label:before{content:\"\\F0315\"}.mdi-label-multiple:before{content:\"\\F1375\"}.mdi-label-multiple-outline:before{content:\"\\F1376\"}.mdi-label-off:before{content:\"\\F0ACB\"}.mdi-label-off-outline:before{content:\"\\F0ACC\"}.mdi-label-outline:before{content:\"\\F0316\"}.mdi-label-percent:before{content:\"\\F12EA\"}.mdi-label-percent-outline:before{content:\"\\F12EB\"}.mdi-label-variant:before{content:\"\\F0ACD\"}.mdi-label-variant-outline:before{content:\"\\F0ACE\"}.mdi-ladder:before{content:\"\\F15A2\"}.mdi-ladybug:before{content:\"\\F082D\"}.mdi-lambda:before{content:\"\\F0627\"}.mdi-lamp:before{content:\"\\F06B5\"}.mdi-lamps:before{content:\"\\F1576\"}.mdi-lan:before{content:\"\\F0317\"}.mdi-lan-check:before{content:\"\\F12AA\"}.mdi-lan-connect:before{content:\"\\F0318\"}.mdi-lan-disconnect:before{content:\"\\F0319\"}.mdi-lan-pending:before{content:\"\\F031A\"}.mdi-language-c:before{content:\"\\F0671\"}.mdi-language-cpp:before{content:\"\\F0672\"}.mdi-language-csharp:before{content:\"\\F031B\"}.mdi-language-css3:before{content:\"\\F031C\"}.mdi-language-fortran:before{content:\"\\F121A\"}.mdi-language-go:before{content:\"\\F07D3\"}.mdi-language-haskell:before{content:\"\\F0C92\"}.mdi-language-html5:before{content:\"\\F031D\"}.mdi-language-java:before{content:\"\\F0B37\"}.mdi-language-javascript:before{content:\"\\F031E\"}.mdi-language-kotlin:before{content:\"\\F1219\"}.mdi-language-lua:before{content:\"\\F08B1\"}.mdi-language-markdown:before{content:\"\\F0354\"}.mdi-language-markdown-outline:before{content:\"\\F0F5B\"}.mdi-language-php:before{content:\"\\F031F\"}.mdi-language-python:before{content:\"\\F0320\"}.mdi-language-r:before{content:\"\\F07D4\"}.mdi-language-ruby:before{content:\"\\F0D2D\"}.mdi-language-ruby-on-rails:before{content:\"\\F0ACF\"}.mdi-language-rust:before{content:\"\\F1617\"}.mdi-language-swift:before{content:\"\\F06E5\"}.mdi-language-typescript:before{content:\"\\F06E6\"}.mdi-language-xaml:before{content:\"\\F0673\"}.mdi-laptop:before{content:\"\\F0322\"}.mdi-laptop-chromebook:before{content:\"\\F0323\"}.mdi-laptop-mac:before{content:\"\\F0324\"}.mdi-laptop-off:before{content:\"\\F06E7\"}.mdi-laptop-windows:before{content:\"\\F0325\"}.mdi-laravel:before{content:\"\\F0AD0\"}.mdi-laser-pointer:before{content:\"\\F1484\"}.mdi-lasso:before{content:\"\\F0F03\"}.mdi-lastpass:before{content:\"\\F0446\"}.mdi-latitude:before{content:\"\\F0F57\"}.mdi-launch:before{content:\"\\F0327\"}.mdi-lava-lamp:before{content:\"\\F07D5\"}.mdi-layers:before{content:\"\\F0328\"}.mdi-layers-minus:before{content:\"\\F0E4C\"}.mdi-layers-off:before{content:\"\\F0329\"}.mdi-layers-off-outline:before{content:\"\\F09FD\"}.mdi-layers-outline:before{content:\"\\F09FE\"}.mdi-layers-plus:before{content:\"\\F0E4D\"}.mdi-layers-remove:before{content:\"\\F0E4E\"}.mdi-layers-search:before{content:\"\\F1206\"}.mdi-layers-search-outline:before{content:\"\\F1207\"}.mdi-layers-triple:before{content:\"\\F0F58\"}.mdi-layers-triple-outline:before{content:\"\\F0F59\"}.mdi-lead-pencil:before{content:\"\\F064F\"}.mdi-leaf:before{content:\"\\F032A\"}.mdi-leaf-maple:before{content:\"\\F0C93\"}.mdi-leaf-maple-off:before{content:\"\\F12DA\"}.mdi-leaf-off:before{content:\"\\F12D9\"}.mdi-leak:before{content:\"\\F0DD7\"}.mdi-leak-off:before{content:\"\\F0DD8\"}.mdi-led-off:before{content:\"\\F032B\"}.mdi-led-on:before{content:\"\\F032C\"}.mdi-led-outline:before{content:\"\\F032D\"}.mdi-led-strip:before{content:\"\\F07D6\"}.mdi-led-strip-variant:before{content:\"\\F1051\"}.mdi-led-variant-off:before{content:\"\\F032E\"}.mdi-led-variant-on:before{content:\"\\F032F\"}.mdi-led-variant-outline:before{content:\"\\F0330\"}.mdi-leek:before{content:\"\\F117D\"}.mdi-less-than:before{content:\"\\F097C\"}.mdi-less-than-or-equal:before{content:\"\\F097D\"}.mdi-library:before{content:\"\\F0331\"}.mdi-library-shelves:before{content:\"\\F0BA9\"}.mdi-license:before{content:\"\\F0FC3\"}.mdi-lifebuoy:before{content:\"\\F087E\"}.mdi-light-switch:before{content:\"\\F097E\"}.mdi-lightbulb:before{content:\"\\F0335\"}.mdi-lightbulb-cfl:before{content:\"\\F1208\"}.mdi-lightbulb-cfl-off:before{content:\"\\F1209\"}.mdi-lightbulb-cfl-spiral:before{content:\"\\F1275\"}.mdi-lightbulb-cfl-spiral-off:before{content:\"\\F12C3\"}.mdi-lightbulb-group:before{content:\"\\F1253\"}.mdi-lightbulb-group-off:before{content:\"\\F12CD\"}.mdi-lightbulb-group-off-outline:before{content:\"\\F12CE\"}.mdi-lightbulb-group-outline:before{content:\"\\F1254\"}.mdi-lightbulb-multiple:before{content:\"\\F1255\"}.mdi-lightbulb-multiple-off:before{content:\"\\F12CF\"}.mdi-lightbulb-multiple-off-outline:before{content:\"\\F12D0\"}.mdi-lightbulb-multiple-outline:before{content:\"\\F1256\"}.mdi-lightbulb-off:before{content:\"\\F0E4F\"}.mdi-lightbulb-off-outline:before{content:\"\\F0E50\"}.mdi-lightbulb-on:before{content:\"\\F06E8\"}.mdi-lightbulb-on-outline:before{content:\"\\F06E9\"}.mdi-lightbulb-outline:before{content:\"\\F0336\"}.mdi-lighthouse:before{content:\"\\F09FF\"}.mdi-lighthouse-on:before{content:\"\\F0A00\"}.mdi-lightning-bolt:before{content:\"\\F140B\"}.mdi-lightning-bolt-outline:before{content:\"\\F140C\"}.mdi-lingerie:before{content:\"\\F1476\"}.mdi-link:before{content:\"\\F0337\"}.mdi-link-box:before{content:\"\\F0D1A\"}.mdi-link-box-outline:before{content:\"\\F0D1B\"}.mdi-link-box-variant:before{content:\"\\F0D1C\"}.mdi-link-box-variant-outline:before{content:\"\\F0D1D\"}.mdi-link-lock:before{content:\"\\F10BA\"}.mdi-link-off:before{content:\"\\F0338\"}.mdi-link-plus:before{content:\"\\F0C94\"}.mdi-link-variant:before{content:\"\\F0339\"}.mdi-link-variant-minus:before{content:\"\\F10FF\"}.mdi-link-variant-off:before{content:\"\\F033A\"}.mdi-link-variant-plus:before{content:\"\\F1100\"}.mdi-link-variant-remove:before{content:\"\\F1101\"}.mdi-linkedin:before{content:\"\\F033B\"}.mdi-linux:before{content:\"\\F033D\"}.mdi-linux-mint:before{content:\"\\F08ED\"}.mdi-lipstick:before{content:\"\\F13B5\"}.mdi-list-status:before{content:\"\\F15AB\"}.mdi-litecoin:before{content:\"\\F0A61\"}.mdi-loading:before{content:\"\\F0772\"}.mdi-location-enter:before{content:\"\\F0FC4\"}.mdi-location-exit:before{content:\"\\F0FC5\"}.mdi-lock:before{content:\"\\F033E\"}.mdi-lock-alert:before{content:\"\\F08EE\"}.mdi-lock-alert-outline:before{content:\"\\F15D1\"}.mdi-lock-check:before{content:\"\\F139A\"}.mdi-lock-check-outline:before{content:\"\\F16A8\"}.mdi-lock-clock:before{content:\"\\F097F\"}.mdi-lock-minus:before{content:\"\\F16A9\"}.mdi-lock-minus-outline:before{content:\"\\F16AA\"}.mdi-lock-off:before{content:\"\\F1671\"}.mdi-lock-off-outline:before{content:\"\\F1672\"}.mdi-lock-open:before{content:\"\\F033F\"}.mdi-lock-open-alert:before{content:\"\\F139B\"}.mdi-lock-open-alert-outline:before{content:\"\\F15D2\"}.mdi-lock-open-check:before{content:\"\\F139C\"}.mdi-lock-open-check-outline:before{content:\"\\F16AB\"}.mdi-lock-open-minus:before{content:\"\\F16AC\"}.mdi-lock-open-minus-outline:before{content:\"\\F16AD\"}.mdi-lock-open-outline:before{content:\"\\F0340\"}.mdi-lock-open-plus:before{content:\"\\F16AE\"}.mdi-lock-open-plus-outline:before{content:\"\\F16AF\"}.mdi-lock-open-remove:before{content:\"\\F16B0\"}.mdi-lock-open-remove-outline:before{content:\"\\F16B1\"}.mdi-lock-open-variant:before{content:\"\\F0FC6\"}.mdi-lock-open-variant-outline:before{content:\"\\F0FC7\"}.mdi-lock-outline:before{content:\"\\F0341\"}.mdi-lock-pattern:before{content:\"\\F06EA\"}.mdi-lock-plus:before{content:\"\\F05FB\"}.mdi-lock-plus-outline:before{content:\"\\F16B2\"}.mdi-lock-question:before{content:\"\\F08EF\"}.mdi-lock-remove:before{content:\"\\F16B3\"}.mdi-lock-remove-outline:before{content:\"\\F16B4\"}.mdi-lock-reset:before{content:\"\\F0773\"}.mdi-lock-smart:before{content:\"\\F08B2\"}.mdi-locker:before{content:\"\\F07D7\"}.mdi-locker-multiple:before{content:\"\\F07D8\"}.mdi-login:before{content:\"\\F0342\"}.mdi-login-variant:before{content:\"\\F05FC\"}.mdi-logout:before{content:\"\\F0343\"}.mdi-logout-variant:before{content:\"\\F05FD\"}.mdi-longitude:before{content:\"\\F0F5A\"}.mdi-looks:before{content:\"\\F0344\"}.mdi-lotion:before{content:\"\\F1582\"}.mdi-lotion-outline:before{content:\"\\F1583\"}.mdi-lotion-plus:before{content:\"\\F1584\"}.mdi-lotion-plus-outline:before{content:\"\\F1585\"}.mdi-loupe:before{content:\"\\F0345\"}.mdi-lumx:before{content:\"\\F0346\"}.mdi-lungs:before{content:\"\\F1084\"}.mdi-magnet:before{content:\"\\F0347\"}.mdi-magnet-on:before{content:\"\\F0348\"}.mdi-magnify:before{content:\"\\F0349\"}.mdi-magnify-close:before{content:\"\\F0980\"}.mdi-magnify-minus:before{content:\"\\F034A\"}.mdi-magnify-minus-cursor:before{content:\"\\F0A62\"}.mdi-magnify-minus-outline:before{content:\"\\F06EC\"}.mdi-magnify-plus:before{content:\"\\F034B\"}.mdi-magnify-plus-cursor:before{content:\"\\F0A63\"}.mdi-magnify-plus-outline:before{content:\"\\F06ED\"}.mdi-magnify-remove-cursor:before{content:\"\\F120C\"}.mdi-magnify-remove-outline:before{content:\"\\F120D\"}.mdi-magnify-scan:before{content:\"\\F1276\"}.mdi-mail:before{content:\"\\F0EBB\"}.mdi-mailbox:before{content:\"\\F06EE\"}.mdi-mailbox-open:before{content:\"\\F0D88\"}.mdi-mailbox-open-outline:before{content:\"\\F0D89\"}.mdi-mailbox-open-up:before{content:\"\\F0D8A\"}.mdi-mailbox-open-up-outline:before{content:\"\\F0D8B\"}.mdi-mailbox-outline:before{content:\"\\F0D8C\"}.mdi-mailbox-up:before{content:\"\\F0D8D\"}.mdi-mailbox-up-outline:before{content:\"\\F0D8E\"}.mdi-manjaro:before{content:\"\\F160A\"}.mdi-map:before{content:\"\\F034D\"}.mdi-map-check:before{content:\"\\F0EBC\"}.mdi-map-check-outline:before{content:\"\\F0EBD\"}.mdi-map-clock:before{content:\"\\F0D1E\"}.mdi-map-clock-outline:before{content:\"\\F0D1F\"}.mdi-map-legend:before{content:\"\\F0A01\"}.mdi-map-marker:before{content:\"\\F034E\"}.mdi-map-marker-alert:before{content:\"\\F0F05\"}.mdi-map-marker-alert-outline:before{content:\"\\F0F06\"}.mdi-map-marker-check:before{content:\"\\F0C95\"}.mdi-map-marker-check-outline:before{content:\"\\F12FB\"}.mdi-map-marker-circle:before{content:\"\\F034F\"}.mdi-map-marker-distance:before{content:\"\\F08F0\"}.mdi-map-marker-down:before{content:\"\\F1102\"}.mdi-map-marker-left:before{content:\"\\F12DB\"}.mdi-map-marker-left-outline:before{content:\"\\F12DD\"}.mdi-map-marker-minus:before{content:\"\\F0650\"}.mdi-map-marker-minus-outline:before{content:\"\\F12F9\"}.mdi-map-marker-multiple:before{content:\"\\F0350\"}.mdi-map-marker-multiple-outline:before{content:\"\\F1277\"}.mdi-map-marker-off:before{content:\"\\F0351\"}.mdi-map-marker-off-outline:before{content:\"\\F12FD\"}.mdi-map-marker-outline:before{content:\"\\F07D9\"}.mdi-map-marker-path:before{content:\"\\F0D20\"}.mdi-map-marker-plus:before{content:\"\\F0651\"}.mdi-map-marker-plus-outline:before{content:\"\\F12F8\"}.mdi-map-marker-question:before{content:\"\\F0F07\"}.mdi-map-marker-question-outline:before{content:\"\\F0F08\"}.mdi-map-marker-radius:before{content:\"\\F0352\"}.mdi-map-marker-radius-outline:before{content:\"\\F12FC\"}.mdi-map-marker-remove:before{content:\"\\F0F09\"}.mdi-map-marker-remove-outline:before{content:\"\\F12FA\"}.mdi-map-marker-remove-variant:before{content:\"\\F0F0A\"}.mdi-map-marker-right:before{content:\"\\F12DC\"}.mdi-map-marker-right-outline:before{content:\"\\F12DE\"}.mdi-map-marker-star:before{content:\"\\F1608\"}.mdi-map-marker-star-outline:before{content:\"\\F1609\"}.mdi-map-marker-up:before{content:\"\\F1103\"}.mdi-map-minus:before{content:\"\\F0981\"}.mdi-map-outline:before{content:\"\\F0982\"}.mdi-map-plus:before{content:\"\\F0983\"}.mdi-map-search:before{content:\"\\F0984\"}.mdi-map-search-outline:before{content:\"\\F0985\"}.mdi-mapbox:before{content:\"\\F0BAA\"}.mdi-margin:before{content:\"\\F0353\"}.mdi-marker:before{content:\"\\F0652\"}.mdi-marker-cancel:before{content:\"\\F0DD9\"}.mdi-marker-check:before{content:\"\\F0355\"}.mdi-mastodon:before{content:\"\\F0AD1\"}.mdi-material-design:before{content:\"\\F0986\"}.mdi-material-ui:before{content:\"\\F0357\"}.mdi-math-compass:before{content:\"\\F0358\"}.mdi-math-cos:before{content:\"\\F0C96\"}.mdi-math-integral:before{content:\"\\F0FC8\"}.mdi-math-integral-box:before{content:\"\\F0FC9\"}.mdi-math-log:before{content:\"\\F1085\"}.mdi-math-norm:before{content:\"\\F0FCA\"}.mdi-math-norm-box:before{content:\"\\F0FCB\"}.mdi-math-sin:before{content:\"\\F0C97\"}.mdi-math-tan:before{content:\"\\F0C98\"}.mdi-matrix:before{content:\"\\F0628\"}.mdi-medal:before{content:\"\\F0987\"}.mdi-medal-outline:before{content:\"\\F1326\"}.mdi-medical-bag:before{content:\"\\F06EF\"}.mdi-meditation:before{content:\"\\F117B\"}.mdi-memory:before{content:\"\\F035B\"}.mdi-menu:before{content:\"\\F035C\"}.mdi-menu-down:before{content:\"\\F035D\"}.mdi-menu-down-outline:before{content:\"\\F06B6\"}.mdi-menu-left:before{content:\"\\F035E\"}.mdi-menu-left-outline:before{content:\"\\F0A02\"}.mdi-menu-open:before{content:\"\\F0BAB\"}.mdi-menu-right:before{content:\"\\F035F\"}.mdi-menu-right-outline:before{content:\"\\F0A03\"}.mdi-menu-swap:before{content:\"\\F0A64\"}.mdi-menu-swap-outline:before{content:\"\\F0A65\"}.mdi-menu-up:before{content:\"\\F0360\"}.mdi-menu-up-outline:before{content:\"\\F06B7\"}.mdi-merge:before{content:\"\\F0F5C\"}.mdi-message:before{content:\"\\F0361\"}.mdi-message-alert:before{content:\"\\F0362\"}.mdi-message-alert-outline:before{content:\"\\F0A04\"}.mdi-message-arrow-left:before{content:\"\\F12F2\"}.mdi-message-arrow-left-outline:before{content:\"\\F12F3\"}.mdi-message-arrow-right:before{content:\"\\F12F4\"}.mdi-message-arrow-right-outline:before{content:\"\\F12F5\"}.mdi-message-bookmark:before{content:\"\\F15AC\"}.mdi-message-bookmark-outline:before{content:\"\\F15AD\"}.mdi-message-bulleted:before{content:\"\\F06A2\"}.mdi-message-bulleted-off:before{content:\"\\F06A3\"}.mdi-message-cog:before{content:\"\\F06F1\"}.mdi-message-cog-outline:before{content:\"\\F1172\"}.mdi-message-draw:before{content:\"\\F0363\"}.mdi-message-flash:before{content:\"\\F15A9\"}.mdi-message-flash-outline:before{content:\"\\F15AA\"}.mdi-message-image:before{content:\"\\F0364\"}.mdi-message-image-outline:before{content:\"\\F116C\"}.mdi-message-lock:before{content:\"\\F0FCC\"}.mdi-message-lock-outline:before{content:\"\\F116D\"}.mdi-message-minus:before{content:\"\\F116E\"}.mdi-message-minus-outline:before{content:\"\\F116F\"}.mdi-message-off:before{content:\"\\F164D\"}.mdi-message-off-outline:before{content:\"\\F164E\"}.mdi-message-outline:before{content:\"\\F0365\"}.mdi-message-plus:before{content:\"\\F0653\"}.mdi-message-plus-outline:before{content:\"\\F10BB\"}.mdi-message-processing:before{content:\"\\F0366\"}.mdi-message-processing-outline:before{content:\"\\F1170\"}.mdi-message-reply:before{content:\"\\F0367\"}.mdi-message-reply-text:before{content:\"\\F0368\"}.mdi-message-settings:before{content:\"\\F06F0\"}.mdi-message-settings-outline:before{content:\"\\F1171\"}.mdi-message-text:before{content:\"\\F0369\"}.mdi-message-text-clock:before{content:\"\\F1173\"}.mdi-message-text-clock-outline:before{content:\"\\F1174\"}.mdi-message-text-lock:before{content:\"\\F0FCD\"}.mdi-message-text-lock-outline:before{content:\"\\F1175\"}.mdi-message-text-outline:before{content:\"\\F036A\"}.mdi-message-video:before{content:\"\\F036B\"}.mdi-meteor:before{content:\"\\F0629\"}.mdi-metronome:before{content:\"\\F07DA\"}.mdi-metronome-tick:before{content:\"\\F07DB\"}.mdi-micro-sd:before{content:\"\\F07DC\"}.mdi-microphone:before{content:\"\\F036C\"}.mdi-microphone-minus:before{content:\"\\F08B3\"}.mdi-microphone-off:before{content:\"\\F036D\"}.mdi-microphone-outline:before{content:\"\\F036E\"}.mdi-microphone-plus:before{content:\"\\F08B4\"}.mdi-microphone-settings:before{content:\"\\F036F\"}.mdi-microphone-variant:before{content:\"\\F0370\"}.mdi-microphone-variant-off:before{content:\"\\F0371\"}.mdi-microscope:before{content:\"\\F0654\"}.mdi-microsoft:before{content:\"\\F0372\"}.mdi-microsoft-access:before{content:\"\\F138E\"}.mdi-microsoft-azure:before{content:\"\\F0805\"}.mdi-microsoft-azure-devops:before{content:\"\\F0FD5\"}.mdi-microsoft-bing:before{content:\"\\F00A4\"}.mdi-microsoft-dynamics-365:before{content:\"\\F0988\"}.mdi-microsoft-edge:before{content:\"\\F01E9\"}.mdi-microsoft-edge-legacy:before{content:\"\\F1250\"}.mdi-microsoft-excel:before{content:\"\\F138F\"}.mdi-microsoft-internet-explorer:before{content:\"\\F0300\"}.mdi-microsoft-office:before{content:\"\\F03C6\"}.mdi-microsoft-onedrive:before{content:\"\\F03CA\"}.mdi-microsoft-onenote:before{content:\"\\F0747\"}.mdi-microsoft-outlook:before{content:\"\\F0D22\"}.mdi-microsoft-powerpoint:before{content:\"\\F1390\"}.mdi-microsoft-sharepoint:before{content:\"\\F1391\"}.mdi-microsoft-teams:before{content:\"\\F02BB\"}.mdi-microsoft-visual-studio:before{content:\"\\F0610\"}.mdi-microsoft-visual-studio-code:before{content:\"\\F0A1E\"}.mdi-microsoft-windows:before{content:\"\\F05B3\"}.mdi-microsoft-windows-classic:before{content:\"\\F0A21\"}.mdi-microsoft-word:before{content:\"\\F1392\"}.mdi-microsoft-xbox:before{content:\"\\F05B9\"}.mdi-microsoft-xbox-controller:before{content:\"\\F05BA\"}.mdi-microsoft-xbox-controller-battery-alert:before{content:\"\\F074B\"}.mdi-microsoft-xbox-controller-battery-charging:before{content:\"\\F0A22\"}.mdi-microsoft-xbox-controller-battery-empty:before{content:\"\\F074C\"}.mdi-microsoft-xbox-controller-battery-full:before{content:\"\\F074D\"}.mdi-microsoft-xbox-controller-battery-low:before{content:\"\\F074E\"}.mdi-microsoft-xbox-controller-battery-medium:before{content:\"\\F074F\"}.mdi-microsoft-xbox-controller-battery-unknown:before{content:\"\\F0750\"}.mdi-microsoft-xbox-controller-menu:before{content:\"\\F0E6F\"}.mdi-microsoft-xbox-controller-off:before{content:\"\\F05BB\"}.mdi-microsoft-xbox-controller-view:before{content:\"\\F0E70\"}.mdi-microsoft-yammer:before{content:\"\\F0789\"}.mdi-microwave:before{content:\"\\F0C99\"}.mdi-microwave-off:before{content:\"\\F1423\"}.mdi-middleware:before{content:\"\\F0F5D\"}.mdi-middleware-outline:before{content:\"\\F0F5E\"}.mdi-midi:before{content:\"\\F08F1\"}.mdi-midi-port:before{content:\"\\F08F2\"}.mdi-mine:before{content:\"\\F0DDA\"}.mdi-minecraft:before{content:\"\\F0373\"}.mdi-mini-sd:before{content:\"\\F0A05\"}.mdi-minidisc:before{content:\"\\F0A06\"}.mdi-minus:before{content:\"\\F0374\"}.mdi-minus-box:before{content:\"\\F0375\"}.mdi-minus-box-multiple:before{content:\"\\F1141\"}.mdi-minus-box-multiple-outline:before{content:\"\\F1142\"}.mdi-minus-box-outline:before{content:\"\\F06F2\"}.mdi-minus-circle:before{content:\"\\F0376\"}.mdi-minus-circle-multiple:before{content:\"\\F035A\"}.mdi-minus-circle-multiple-outline:before{content:\"\\F0AD3\"}.mdi-minus-circle-off:before{content:\"\\F1459\"}.mdi-minus-circle-off-outline:before{content:\"\\F145A\"}.mdi-minus-circle-outline:before{content:\"\\F0377\"}.mdi-minus-network:before{content:\"\\F0378\"}.mdi-minus-network-outline:before{content:\"\\F0C9A\"}.mdi-minus-thick:before{content:\"\\F1639\"}.mdi-mirror:before{content:\"\\F11FD\"}.mdi-mixed-martial-arts:before{content:\"\\F0D8F\"}.mdi-mixed-reality:before{content:\"\\F087F\"}.mdi-molecule:before{content:\"\\F0BAC\"}.mdi-molecule-co:before{content:\"\\F12FE\"}.mdi-molecule-co2:before{content:\"\\F07E4\"}.mdi-monitor:before{content:\"\\F0379\"}.mdi-monitor-cellphone:before{content:\"\\F0989\"}.mdi-monitor-cellphone-star:before{content:\"\\F098A\"}.mdi-monitor-clean:before{content:\"\\F1104\"}.mdi-monitor-dashboard:before{content:\"\\F0A07\"}.mdi-monitor-edit:before{content:\"\\F12C6\"}.mdi-monitor-eye:before{content:\"\\F13B4\"}.mdi-monitor-lock:before{content:\"\\F0DDB\"}.mdi-monitor-multiple:before{content:\"\\F037A\"}.mdi-monitor-off:before{content:\"\\F0D90\"}.mdi-monitor-screenshot:before{content:\"\\F0E51\"}.mdi-monitor-share:before{content:\"\\F1483\"}.mdi-monitor-speaker:before{content:\"\\F0F5F\"}.mdi-monitor-speaker-off:before{content:\"\\F0F60\"}.mdi-monitor-star:before{content:\"\\F0DDC\"}.mdi-moon-first-quarter:before{content:\"\\F0F61\"}.mdi-moon-full:before{content:\"\\F0F62\"}.mdi-moon-last-quarter:before{content:\"\\F0F63\"}.mdi-moon-new:before{content:\"\\F0F64\"}.mdi-moon-waning-crescent:before{content:\"\\F0F65\"}.mdi-moon-waning-gibbous:before{content:\"\\F0F66\"}.mdi-moon-waxing-crescent:before{content:\"\\F0F67\"}.mdi-moon-waxing-gibbous:before{content:\"\\F0F68\"}.mdi-moped:before{content:\"\\F1086\"}.mdi-moped-electric:before{content:\"\\F15B7\"}.mdi-moped-electric-outline:before{content:\"\\F15B8\"}.mdi-moped-outline:before{content:\"\\F15B9\"}.mdi-more:before{content:\"\\F037B\"}.mdi-mother-heart:before{content:\"\\F1314\"}.mdi-mother-nurse:before{content:\"\\F0D21\"}.mdi-motion:before{content:\"\\F15B2\"}.mdi-motion-outline:before{content:\"\\F15B3\"}.mdi-motion-pause:before{content:\"\\F1590\"}.mdi-motion-pause-outline:before{content:\"\\F1592\"}.mdi-motion-play:before{content:\"\\F158F\"}.mdi-motion-play-outline:before{content:\"\\F1591\"}.mdi-motion-sensor:before{content:\"\\F0D91\"}.mdi-motion-sensor-off:before{content:\"\\F1435\"}.mdi-motorbike:before{content:\"\\F037C\"}.mdi-motorbike-electric:before{content:\"\\F15BA\"}.mdi-mouse:before{content:\"\\F037D\"}.mdi-mouse-bluetooth:before{content:\"\\F098B\"}.mdi-mouse-move-down:before{content:\"\\F1550\"}.mdi-mouse-move-up:before{content:\"\\F1551\"}.mdi-mouse-move-vertical:before{content:\"\\F1552\"}.mdi-mouse-off:before{content:\"\\F037E\"}.mdi-mouse-variant:before{content:\"\\F037F\"}.mdi-mouse-variant-off:before{content:\"\\F0380\"}.mdi-move-resize:before{content:\"\\F0655\"}.mdi-move-resize-variant:before{content:\"\\F0656\"}.mdi-movie:before{content:\"\\F0381\"}.mdi-movie-edit:before{content:\"\\F1122\"}.mdi-movie-edit-outline:before{content:\"\\F1123\"}.mdi-movie-filter:before{content:\"\\F1124\"}.mdi-movie-filter-outline:before{content:\"\\F1125\"}.mdi-movie-open:before{content:\"\\F0FCE\"}.mdi-movie-open-outline:before{content:\"\\F0FCF\"}.mdi-movie-outline:before{content:\"\\F0DDD\"}.mdi-movie-roll:before{content:\"\\F07DE\"}.mdi-movie-search:before{content:\"\\F11D2\"}.mdi-movie-search-outline:before{content:\"\\F11D3\"}.mdi-mower:before{content:\"\\F166F\"}.mdi-mower-bag:before{content:\"\\F1670\"}.mdi-muffin:before{content:\"\\F098C\"}.mdi-multiplication:before{content:\"\\F0382\"}.mdi-multiplication-box:before{content:\"\\F0383\"}.mdi-mushroom:before{content:\"\\F07DF\"}.mdi-mushroom-off:before{content:\"\\F13FA\"}.mdi-mushroom-off-outline:before{content:\"\\F13FB\"}.mdi-mushroom-outline:before{content:\"\\F07E0\"}.mdi-music:before{content:\"\\F075A\"}.mdi-music-accidental-double-flat:before{content:\"\\F0F69\"}.mdi-music-accidental-double-sharp:before{content:\"\\F0F6A\"}.mdi-music-accidental-flat:before{content:\"\\F0F6B\"}.mdi-music-accidental-natural:before{content:\"\\F0F6C\"}.mdi-music-accidental-sharp:before{content:\"\\F0F6D\"}.mdi-music-box:before{content:\"\\F0384\"}.mdi-music-box-multiple:before{content:\"\\F0333\"}.mdi-music-box-multiple-outline:before{content:\"\\F0F04\"}.mdi-music-box-outline:before{content:\"\\F0385\"}.mdi-music-circle:before{content:\"\\F0386\"}.mdi-music-circle-outline:before{content:\"\\F0AD4\"}.mdi-music-clef-alto:before{content:\"\\F0F6E\"}.mdi-music-clef-bass:before{content:\"\\F0F6F\"}.mdi-music-clef-treble:before{content:\"\\F0F70\"}.mdi-music-note:before{content:\"\\F0387\"}.mdi-music-note-bluetooth:before{content:\"\\F05FE\"}.mdi-music-note-bluetooth-off:before{content:\"\\F05FF\"}.mdi-music-note-eighth:before{content:\"\\F0388\"}.mdi-music-note-eighth-dotted:before{content:\"\\F0F71\"}.mdi-music-note-half:before{content:\"\\F0389\"}.mdi-music-note-half-dotted:before{content:\"\\F0F72\"}.mdi-music-note-off:before{content:\"\\F038A\"}.mdi-music-note-off-outline:before{content:\"\\F0F73\"}.mdi-music-note-outline:before{content:\"\\F0F74\"}.mdi-music-note-plus:before{content:\"\\F0DDE\"}.mdi-music-note-quarter:before{content:\"\\F038B\"}.mdi-music-note-quarter-dotted:before{content:\"\\F0F75\"}.mdi-music-note-sixteenth:before{content:\"\\F038C\"}.mdi-music-note-sixteenth-dotted:before{content:\"\\F0F76\"}.mdi-music-note-whole:before{content:\"\\F038D\"}.mdi-music-note-whole-dotted:before{content:\"\\F0F77\"}.mdi-music-off:before{content:\"\\F075B\"}.mdi-music-rest-eighth:before{content:\"\\F0F78\"}.mdi-music-rest-half:before{content:\"\\F0F79\"}.mdi-music-rest-quarter:before{content:\"\\F0F7A\"}.mdi-music-rest-sixteenth:before{content:\"\\F0F7B\"}.mdi-music-rest-whole:before{content:\"\\F0F7C\"}.mdi-mustache:before{content:\"\\F15DE\"}.mdi-nail:before{content:\"\\F0DDF\"}.mdi-nas:before{content:\"\\F08F3\"}.mdi-nativescript:before{content:\"\\F0880\"}.mdi-nature:before{content:\"\\F038E\"}.mdi-nature-people:before{content:\"\\F038F\"}.mdi-navigation:before{content:\"\\F0390\"}.mdi-navigation-outline:before{content:\"\\F1607\"}.mdi-near-me:before{content:\"\\F05CD\"}.mdi-necklace:before{content:\"\\F0F0B\"}.mdi-needle:before{content:\"\\F0391\"}.mdi-netflix:before{content:\"\\F0746\"}.mdi-network:before{content:\"\\F06F3\"}.mdi-network-off:before{content:\"\\F0C9B\"}.mdi-network-off-outline:before{content:\"\\F0C9C\"}.mdi-network-outline:before{content:\"\\F0C9D\"}.mdi-network-strength-1:before{content:\"\\F08F4\"}.mdi-network-strength-1-alert:before{content:\"\\F08F5\"}.mdi-network-strength-2:before{content:\"\\F08F6\"}.mdi-network-strength-2-alert:before{content:\"\\F08F7\"}.mdi-network-strength-3:before{content:\"\\F08F8\"}.mdi-network-strength-3-alert:before{content:\"\\F08F9\"}.mdi-network-strength-4:before{content:\"\\F08FA\"}.mdi-network-strength-4-alert:before{content:\"\\F08FB\"}.mdi-network-strength-off:before{content:\"\\F08FC\"}.mdi-network-strength-off-outline:before{content:\"\\F08FD\"}.mdi-network-strength-outline:before{content:\"\\F08FE\"}.mdi-new-box:before{content:\"\\F0394\"}.mdi-newspaper:before{content:\"\\F0395\"}.mdi-newspaper-minus:before{content:\"\\F0F0C\"}.mdi-newspaper-plus:before{content:\"\\F0F0D\"}.mdi-newspaper-variant:before{content:\"\\F1001\"}.mdi-newspaper-variant-multiple:before{content:\"\\F1002\"}.mdi-newspaper-variant-multiple-outline:before{content:\"\\F1003\"}.mdi-newspaper-variant-outline:before{content:\"\\F1004\"}.mdi-nfc:before{content:\"\\F0396\"}.mdi-nfc-search-variant:before{content:\"\\F0E53\"}.mdi-nfc-tap:before{content:\"\\F0397\"}.mdi-nfc-variant:before{content:\"\\F0398\"}.mdi-nfc-variant-off:before{content:\"\\F0E54\"}.mdi-ninja:before{content:\"\\F0774\"}.mdi-nintendo-game-boy:before{content:\"\\F1393\"}.mdi-nintendo-switch:before{content:\"\\F07E1\"}.mdi-nintendo-wii:before{content:\"\\F05AB\"}.mdi-nintendo-wiiu:before{content:\"\\F072D\"}.mdi-nix:before{content:\"\\F1105\"}.mdi-nodejs:before{content:\"\\F0399\"}.mdi-noodles:before{content:\"\\F117E\"}.mdi-not-equal:before{content:\"\\F098D\"}.mdi-not-equal-variant:before{content:\"\\F098E\"}.mdi-note:before{content:\"\\F039A\"}.mdi-note-minus:before{content:\"\\F164F\"}.mdi-note-minus-outline:before{content:\"\\F1650\"}.mdi-note-multiple:before{content:\"\\F06B8\"}.mdi-note-multiple-outline:before{content:\"\\F06B9\"}.mdi-note-outline:before{content:\"\\F039B\"}.mdi-note-plus:before{content:\"\\F039C\"}.mdi-note-plus-outline:before{content:\"\\F039D\"}.mdi-note-remove:before{content:\"\\F1651\"}.mdi-note-remove-outline:before{content:\"\\F1652\"}.mdi-note-search:before{content:\"\\F1653\"}.mdi-note-search-outline:before{content:\"\\F1654\"}.mdi-note-text:before{content:\"\\F039E\"}.mdi-note-text-outline:before{content:\"\\F11D7\"}.mdi-notebook:before{content:\"\\F082E\"}.mdi-notebook-check:before{content:\"\\F14F5\"}.mdi-notebook-check-outline:before{content:\"\\F14F6\"}.mdi-notebook-edit:before{content:\"\\F14E7\"}.mdi-notebook-edit-outline:before{content:\"\\F14E9\"}.mdi-notebook-minus:before{content:\"\\F1610\"}.mdi-notebook-minus-outline:before{content:\"\\F1611\"}.mdi-notebook-multiple:before{content:\"\\F0E55\"}.mdi-notebook-outline:before{content:\"\\F0EBF\"}.mdi-notebook-plus:before{content:\"\\F1612\"}.mdi-notebook-plus-outline:before{content:\"\\F1613\"}.mdi-notebook-remove:before{content:\"\\F1614\"}.mdi-notebook-remove-outline:before{content:\"\\F1615\"}.mdi-notification-clear-all:before{content:\"\\F039F\"}.mdi-npm:before{content:\"\\F06F7\"}.mdi-nuke:before{content:\"\\F06A4\"}.mdi-null:before{content:\"\\F07E2\"}.mdi-numeric:before{content:\"\\F03A0\"}.mdi-numeric-0:before{content:\"\\F0B39\"}.mdi-numeric-0-box:before{content:\"\\F03A1\"}.mdi-numeric-0-box-multiple:before{content:\"\\F0F0E\"}.mdi-numeric-0-box-multiple-outline:before{content:\"\\F03A2\"}.mdi-numeric-0-box-outline:before{content:\"\\F03A3\"}.mdi-numeric-0-circle:before{content:\"\\F0C9E\"}.mdi-numeric-0-circle-outline:before{content:\"\\F0C9F\"}.mdi-numeric-1:before{content:\"\\F0B3A\"}.mdi-numeric-1-box:before{content:\"\\F03A4\"}.mdi-numeric-1-box-multiple:before{content:\"\\F0F0F\"}.mdi-numeric-1-box-multiple-outline:before{content:\"\\F03A5\"}.mdi-numeric-1-box-outline:before{content:\"\\F03A6\"}.mdi-numeric-1-circle:before{content:\"\\F0CA0\"}.mdi-numeric-1-circle-outline:before{content:\"\\F0CA1\"}.mdi-numeric-10:before{content:\"\\F0FE9\"}.mdi-numeric-10-box:before{content:\"\\F0F7D\"}.mdi-numeric-10-box-multiple:before{content:\"\\F0FEA\"}.mdi-numeric-10-box-multiple-outline:before{content:\"\\F0FEB\"}.mdi-numeric-10-box-outline:before{content:\"\\F0F7E\"}.mdi-numeric-10-circle:before{content:\"\\F0FEC\"}.mdi-numeric-10-circle-outline:before{content:\"\\F0FED\"}.mdi-numeric-2:before{content:\"\\F0B3B\"}.mdi-numeric-2-box:before{content:\"\\F03A7\"}.mdi-numeric-2-box-multiple:before{content:\"\\F0F10\"}.mdi-numeric-2-box-multiple-outline:before{content:\"\\F03A8\"}.mdi-numeric-2-box-outline:before{content:\"\\F03A9\"}.mdi-numeric-2-circle:before{content:\"\\F0CA2\"}.mdi-numeric-2-circle-outline:before{content:\"\\F0CA3\"}.mdi-numeric-3:before{content:\"\\F0B3C\"}.mdi-numeric-3-box:before{content:\"\\F03AA\"}.mdi-numeric-3-box-multiple:before{content:\"\\F0F11\"}.mdi-numeric-3-box-multiple-outline:before{content:\"\\F03AB\"}.mdi-numeric-3-box-outline:before{content:\"\\F03AC\"}.mdi-numeric-3-circle:before{content:\"\\F0CA4\"}.mdi-numeric-3-circle-outline:before{content:\"\\F0CA5\"}.mdi-numeric-4:before{content:\"\\F0B3D\"}.mdi-numeric-4-box:before{content:\"\\F03AD\"}.mdi-numeric-4-box-multiple:before{content:\"\\F0F12\"}.mdi-numeric-4-box-multiple-outline:before{content:\"\\F03B2\"}.mdi-numeric-4-box-outline:before{content:\"\\F03AE\"}.mdi-numeric-4-circle:before{content:\"\\F0CA6\"}.mdi-numeric-4-circle-outline:before{content:\"\\F0CA7\"}.mdi-numeric-5:before{content:\"\\F0B3E\"}.mdi-numeric-5-box:before{content:\"\\F03B1\"}.mdi-numeric-5-box-multiple:before{content:\"\\F0F13\"}.mdi-numeric-5-box-multiple-outline:before{content:\"\\F03AF\"}.mdi-numeric-5-box-outline:before{content:\"\\F03B0\"}.mdi-numeric-5-circle:before{content:\"\\F0CA8\"}.mdi-numeric-5-circle-outline:before{content:\"\\F0CA9\"}.mdi-numeric-6:before{content:\"\\F0B3F\"}.mdi-numeric-6-box:before{content:\"\\F03B3\"}.mdi-numeric-6-box-multiple:before{content:\"\\F0F14\"}.mdi-numeric-6-box-multiple-outline:before{content:\"\\F03B4\"}.mdi-numeric-6-box-outline:before{content:\"\\F03B5\"}.mdi-numeric-6-circle:before{content:\"\\F0CAA\"}.mdi-numeric-6-circle-outline:before{content:\"\\F0CAB\"}.mdi-numeric-7:before{content:\"\\F0B40\"}.mdi-numeric-7-box:before{content:\"\\F03B6\"}.mdi-numeric-7-box-multiple:before{content:\"\\F0F15\"}.mdi-numeric-7-box-multiple-outline:before{content:\"\\F03B7\"}.mdi-numeric-7-box-outline:before{content:\"\\F03B8\"}.mdi-numeric-7-circle:before{content:\"\\F0CAC\"}.mdi-numeric-7-circle-outline:before{content:\"\\F0CAD\"}.mdi-numeric-8:before{content:\"\\F0B41\"}.mdi-numeric-8-box:before{content:\"\\F03B9\"}.mdi-numeric-8-box-multiple:before{content:\"\\F0F16\"}.mdi-numeric-8-box-multiple-outline:before{content:\"\\F03BA\"}.mdi-numeric-8-box-outline:before{content:\"\\F03BB\"}.mdi-numeric-8-circle:before{content:\"\\F0CAE\"}.mdi-numeric-8-circle-outline:before{content:\"\\F0CAF\"}.mdi-numeric-9:before{content:\"\\F0B42\"}.mdi-numeric-9-box:before{content:\"\\F03BC\"}.mdi-numeric-9-box-multiple:before{content:\"\\F0F17\"}.mdi-numeric-9-box-multiple-outline:before{content:\"\\F03BD\"}.mdi-numeric-9-box-outline:before{content:\"\\F03BE\"}.mdi-numeric-9-circle:before{content:\"\\F0CB0\"}.mdi-numeric-9-circle-outline:before{content:\"\\F0CB1\"}.mdi-numeric-9-plus:before{content:\"\\F0FEE\"}.mdi-numeric-9-plus-box:before{content:\"\\F03BF\"}.mdi-numeric-9-plus-box-multiple:before{content:\"\\F0F18\"}.mdi-numeric-9-plus-box-multiple-outline:before{content:\"\\F03C0\"}.mdi-numeric-9-plus-box-outline:before{content:\"\\F03C1\"}.mdi-numeric-9-plus-circle:before{content:\"\\F0CB2\"}.mdi-numeric-9-plus-circle-outline:before{content:\"\\F0CB3\"}.mdi-numeric-negative-1:before{content:\"\\F1052\"}.mdi-numeric-positive-1:before{content:\"\\F15CB\"}.mdi-nut:before{content:\"\\F06F8\"}.mdi-nutrition:before{content:\"\\F03C2\"}.mdi-nuxt:before{content:\"\\F1106\"}.mdi-oar:before{content:\"\\F067C\"}.mdi-ocarina:before{content:\"\\F0DE0\"}.mdi-oci:before{content:\"\\F12E9\"}.mdi-ocr:before{content:\"\\F113A\"}.mdi-octagon:before{content:\"\\F03C3\"}.mdi-octagon-outline:before{content:\"\\F03C4\"}.mdi-octagram:before{content:\"\\F06F9\"}.mdi-octagram-outline:before{content:\"\\F0775\"}.mdi-odnoklassniki:before{content:\"\\F03C5\"}.mdi-offer:before{content:\"\\F121B\"}.mdi-office-building:before{content:\"\\F0991\"}.mdi-office-building-marker:before{content:\"\\F1520\"}.mdi-office-building-marker-outline:before{content:\"\\F1521\"}.mdi-office-building-outline:before{content:\"\\F151F\"}.mdi-oil:before{content:\"\\F03C7\"}.mdi-oil-lamp:before{content:\"\\F0F19\"}.mdi-oil-level:before{content:\"\\F1053\"}.mdi-oil-temperature:before{content:\"\\F0FF8\"}.mdi-omega:before{content:\"\\F03C9\"}.mdi-one-up:before{content:\"\\F0BAD\"}.mdi-onepassword:before{content:\"\\F0881\"}.mdi-opacity:before{content:\"\\F05CC\"}.mdi-open-in-app:before{content:\"\\F03CB\"}.mdi-open-in-new:before{content:\"\\F03CC\"}.mdi-open-source-initiative:before{content:\"\\F0BAE\"}.mdi-openid:before{content:\"\\F03CD\"}.mdi-opera:before{content:\"\\F03CE\"}.mdi-orbit:before{content:\"\\F0018\"}.mdi-orbit-variant:before{content:\"\\F15DB\"}.mdi-order-alphabetical-ascending:before{content:\"\\F020D\"}.mdi-order-alphabetical-descending:before{content:\"\\F0D07\"}.mdi-order-bool-ascending:before{content:\"\\F02BE\"}.mdi-order-bool-ascending-variant:before{content:\"\\F098F\"}.mdi-order-bool-descending:before{content:\"\\F1384\"}.mdi-order-bool-descending-variant:before{content:\"\\F0990\"}.mdi-order-numeric-ascending:before{content:\"\\F0545\"}.mdi-order-numeric-descending:before{content:\"\\F0546\"}.mdi-origin:before{content:\"\\F0B43\"}.mdi-ornament:before{content:\"\\F03CF\"}.mdi-ornament-variant:before{content:\"\\F03D0\"}.mdi-outdoor-lamp:before{content:\"\\F1054\"}.mdi-overscan:before{content:\"\\F1005\"}.mdi-owl:before{content:\"\\F03D2\"}.mdi-pac-man:before{content:\"\\F0BAF\"}.mdi-package:before{content:\"\\F03D3\"}.mdi-package-down:before{content:\"\\F03D4\"}.mdi-package-up:before{content:\"\\F03D5\"}.mdi-package-variant:before{content:\"\\F03D6\"}.mdi-package-variant-closed:before{content:\"\\F03D7\"}.mdi-page-first:before{content:\"\\F0600\"}.mdi-page-last:before{content:\"\\F0601\"}.mdi-page-layout-body:before{content:\"\\F06FA\"}.mdi-page-layout-footer:before{content:\"\\F06FB\"}.mdi-page-layout-header:before{content:\"\\F06FC\"}.mdi-page-layout-header-footer:before{content:\"\\F0F7F\"}.mdi-page-layout-sidebar-left:before{content:\"\\F06FD\"}.mdi-page-layout-sidebar-right:before{content:\"\\F06FE\"}.mdi-page-next:before{content:\"\\F0BB0\"}.mdi-page-next-outline:before{content:\"\\F0BB1\"}.mdi-page-previous:before{content:\"\\F0BB2\"}.mdi-page-previous-outline:before{content:\"\\F0BB3\"}.mdi-pail:before{content:\"\\F1417\"}.mdi-pail-minus:before{content:\"\\F1437\"}.mdi-pail-minus-outline:before{content:\"\\F143C\"}.mdi-pail-off:before{content:\"\\F1439\"}.mdi-pail-off-outline:before{content:\"\\F143E\"}.mdi-pail-outline:before{content:\"\\F143A\"}.mdi-pail-plus:before{content:\"\\F1436\"}.mdi-pail-plus-outline:before{content:\"\\F143B\"}.mdi-pail-remove:before{content:\"\\F1438\"}.mdi-pail-remove-outline:before{content:\"\\F143D\"}.mdi-palette:before{content:\"\\F03D8\"}.mdi-palette-advanced:before{content:\"\\F03D9\"}.mdi-palette-outline:before{content:\"\\F0E0C\"}.mdi-palette-swatch:before{content:\"\\F08B5\"}.mdi-palette-swatch-outline:before{content:\"\\F135C\"}.mdi-palm-tree:before{content:\"\\F1055\"}.mdi-pan:before{content:\"\\F0BB4\"}.mdi-pan-bottom-left:before{content:\"\\F0BB5\"}.mdi-pan-bottom-right:before{content:\"\\F0BB6\"}.mdi-pan-down:before{content:\"\\F0BB7\"}.mdi-pan-horizontal:before{content:\"\\F0BB8\"}.mdi-pan-left:before{content:\"\\F0BB9\"}.mdi-pan-right:before{content:\"\\F0BBA\"}.mdi-pan-top-left:before{content:\"\\F0BBB\"}.mdi-pan-top-right:before{content:\"\\F0BBC\"}.mdi-pan-up:before{content:\"\\F0BBD\"}.mdi-pan-vertical:before{content:\"\\F0BBE\"}.mdi-panda:before{content:\"\\F03DA\"}.mdi-pandora:before{content:\"\\F03DB\"}.mdi-panorama:before{content:\"\\F03DC\"}.mdi-panorama-fisheye:before{content:\"\\F03DD\"}.mdi-panorama-horizontal:before{content:\"\\F03DE\"}.mdi-panorama-vertical:before{content:\"\\F03DF\"}.mdi-panorama-wide-angle:before{content:\"\\F03E0\"}.mdi-paper-cut-vertical:before{content:\"\\F03E1\"}.mdi-paper-roll:before{content:\"\\F1157\"}.mdi-paper-roll-outline:before{content:\"\\F1158\"}.mdi-paperclip:before{content:\"\\F03E2\"}.mdi-parachute:before{content:\"\\F0CB4\"}.mdi-parachute-outline:before{content:\"\\F0CB5\"}.mdi-parking:before{content:\"\\F03E3\"}.mdi-party-popper:before{content:\"\\F1056\"}.mdi-passport:before{content:\"\\F07E3\"}.mdi-passport-biometric:before{content:\"\\F0DE1\"}.mdi-pasta:before{content:\"\\F1160\"}.mdi-patio-heater:before{content:\"\\F0F80\"}.mdi-patreon:before{content:\"\\F0882\"}.mdi-pause:before{content:\"\\F03E4\"}.mdi-pause-circle:before{content:\"\\F03E5\"}.mdi-pause-circle-outline:before{content:\"\\F03E6\"}.mdi-pause-octagon:before{content:\"\\F03E7\"}.mdi-pause-octagon-outline:before{content:\"\\F03E8\"}.mdi-paw:before{content:\"\\F03E9\"}.mdi-paw-off:before{content:\"\\F0657\"}.mdi-paw-off-outline:before{content:\"\\F1676\"}.mdi-paw-outline:before{content:\"\\F1675\"}.mdi-pdf-box:before{content:\"\\F0E56\"}.mdi-peace:before{content:\"\\F0884\"}.mdi-peanut:before{content:\"\\F0FFC\"}.mdi-peanut-off:before{content:\"\\F0FFD\"}.mdi-peanut-off-outline:before{content:\"\\F0FFF\"}.mdi-peanut-outline:before{content:\"\\F0FFE\"}.mdi-pen:before{content:\"\\F03EA\"}.mdi-pen-lock:before{content:\"\\F0DE2\"}.mdi-pen-minus:before{content:\"\\F0DE3\"}.mdi-pen-off:before{content:\"\\F0DE4\"}.mdi-pen-plus:before{content:\"\\F0DE5\"}.mdi-pen-remove:before{content:\"\\F0DE6\"}.mdi-pencil:before{content:\"\\F03EB\"}.mdi-pencil-box:before{content:\"\\F03EC\"}.mdi-pencil-box-multiple:before{content:\"\\F1144\"}.mdi-pencil-box-multiple-outline:before{content:\"\\F1145\"}.mdi-pencil-box-outline:before{content:\"\\F03ED\"}.mdi-pencil-circle:before{content:\"\\F06FF\"}.mdi-pencil-circle-outline:before{content:\"\\F0776\"}.mdi-pencil-lock:before{content:\"\\F03EE\"}.mdi-pencil-lock-outline:before{content:\"\\F0DE7\"}.mdi-pencil-minus:before{content:\"\\F0DE8\"}.mdi-pencil-minus-outline:before{content:\"\\F0DE9\"}.mdi-pencil-off:before{content:\"\\F03EF\"}.mdi-pencil-off-outline:before{content:\"\\F0DEA\"}.mdi-pencil-outline:before{content:\"\\F0CB6\"}.mdi-pencil-plus:before{content:\"\\F0DEB\"}.mdi-pencil-plus-outline:before{content:\"\\F0DEC\"}.mdi-pencil-remove:before{content:\"\\F0DED\"}.mdi-pencil-remove-outline:before{content:\"\\F0DEE\"}.mdi-pencil-ruler:before{content:\"\\F1353\"}.mdi-penguin:before{content:\"\\F0EC0\"}.mdi-pentagon:before{content:\"\\F0701\"}.mdi-pentagon-outline:before{content:\"\\F0700\"}.mdi-pentagram:before{content:\"\\F1667\"}.mdi-percent:before{content:\"\\F03F0\"}.mdi-percent-outline:before{content:\"\\F1278\"}.mdi-periodic-table:before{content:\"\\F08B6\"}.mdi-perspective-less:before{content:\"\\F0D23\"}.mdi-perspective-more:before{content:\"\\F0D24\"}.mdi-pharmacy:before{content:\"\\F03F1\"}.mdi-phone:before{content:\"\\F03F2\"}.mdi-phone-alert:before{content:\"\\F0F1A\"}.mdi-phone-alert-outline:before{content:\"\\F118E\"}.mdi-phone-bluetooth:before{content:\"\\F03F3\"}.mdi-phone-bluetooth-outline:before{content:\"\\F118F\"}.mdi-phone-cancel:before{content:\"\\F10BC\"}.mdi-phone-cancel-outline:before{content:\"\\F1190\"}.mdi-phone-check:before{content:\"\\F11A9\"}.mdi-phone-check-outline:before{content:\"\\F11AA\"}.mdi-phone-classic:before{content:\"\\F0602\"}.mdi-phone-classic-off:before{content:\"\\F1279\"}.mdi-phone-dial:before{content:\"\\F1559\"}.mdi-phone-dial-outline:before{content:\"\\F155A\"}.mdi-phone-forward:before{content:\"\\F03F4\"}.mdi-phone-forward-outline:before{content:\"\\F1191\"}.mdi-phone-hangup:before{content:\"\\F03F5\"}.mdi-phone-hangup-outline:before{content:\"\\F1192\"}.mdi-phone-in-talk:before{content:\"\\F03F6\"}.mdi-phone-in-talk-outline:before{content:\"\\F1182\"}.mdi-phone-incoming:before{content:\"\\F03F7\"}.mdi-phone-incoming-outline:before{content:\"\\F1193\"}.mdi-phone-lock:before{content:\"\\F03F8\"}.mdi-phone-lock-outline:before{content:\"\\F1194\"}.mdi-phone-log:before{content:\"\\F03F9\"}.mdi-phone-log-outline:before{content:\"\\F1195\"}.mdi-phone-message:before{content:\"\\F1196\"}.mdi-phone-message-outline:before{content:\"\\F1197\"}.mdi-phone-minus:before{content:\"\\F0658\"}.mdi-phone-minus-outline:before{content:\"\\F1198\"}.mdi-phone-missed:before{content:\"\\F03FA\"}.mdi-phone-missed-outline:before{content:\"\\F11A5\"}.mdi-phone-off:before{content:\"\\F0DEF\"}.mdi-phone-off-outline:before{content:\"\\F11A6\"}.mdi-phone-outgoing:before{content:\"\\F03FB\"}.mdi-phone-outgoing-outline:before{content:\"\\F1199\"}.mdi-phone-outline:before{content:\"\\F0DF0\"}.mdi-phone-paused:before{content:\"\\F03FC\"}.mdi-phone-paused-outline:before{content:\"\\F119A\"}.mdi-phone-plus:before{content:\"\\F0659\"}.mdi-phone-plus-outline:before{content:\"\\F119B\"}.mdi-phone-remove:before{content:\"\\F152F\"}.mdi-phone-remove-outline:before{content:\"\\F1530\"}.mdi-phone-return:before{content:\"\\F082F\"}.mdi-phone-return-outline:before{content:\"\\F119C\"}.mdi-phone-ring:before{content:\"\\F11AB\"}.mdi-phone-ring-outline:before{content:\"\\F11AC\"}.mdi-phone-rotate-landscape:before{content:\"\\F0885\"}.mdi-phone-rotate-portrait:before{content:\"\\F0886\"}.mdi-phone-settings:before{content:\"\\F03FD\"}.mdi-phone-settings-outline:before{content:\"\\F119D\"}.mdi-phone-voip:before{content:\"\\F03FE\"}.mdi-pi:before{content:\"\\F03FF\"}.mdi-pi-box:before{content:\"\\F0400\"}.mdi-pi-hole:before{content:\"\\F0DF1\"}.mdi-piano:before{content:\"\\F067D\"}.mdi-pickaxe:before{content:\"\\F08B7\"}.mdi-picture-in-picture-bottom-right:before{content:\"\\F0E57\"}.mdi-picture-in-picture-bottom-right-outline:before{content:\"\\F0E58\"}.mdi-picture-in-picture-top-right:before{content:\"\\F0E59\"}.mdi-picture-in-picture-top-right-outline:before{content:\"\\F0E5A\"}.mdi-pier:before{content:\"\\F0887\"}.mdi-pier-crane:before{content:\"\\F0888\"}.mdi-pig:before{content:\"\\F0401\"}.mdi-pig-variant:before{content:\"\\F1006\"}.mdi-pig-variant-outline:before{content:\"\\F1678\"}.mdi-piggy-bank:before{content:\"\\F1007\"}.mdi-piggy-bank-outline:before{content:\"\\F1679\"}.mdi-pill:before{content:\"\\F0402\"}.mdi-pillar:before{content:\"\\F0702\"}.mdi-pin:before{content:\"\\F0403\"}.mdi-pin-off:before{content:\"\\F0404\"}.mdi-pin-off-outline:before{content:\"\\F0930\"}.mdi-pin-outline:before{content:\"\\F0931\"}.mdi-pine-tree:before{content:\"\\F0405\"}.mdi-pine-tree-box:before{content:\"\\F0406\"}.mdi-pine-tree-fire:before{content:\"\\F141A\"}.mdi-pinterest:before{content:\"\\F0407\"}.mdi-pinwheel:before{content:\"\\F0AD5\"}.mdi-pinwheel-outline:before{content:\"\\F0AD6\"}.mdi-pipe:before{content:\"\\F07E5\"}.mdi-pipe-disconnected:before{content:\"\\F07E6\"}.mdi-pipe-leak:before{content:\"\\F0889\"}.mdi-pipe-wrench:before{content:\"\\F1354\"}.mdi-pirate:before{content:\"\\F0A08\"}.mdi-pistol:before{content:\"\\F0703\"}.mdi-piston:before{content:\"\\F088A\"}.mdi-pitchfork:before{content:\"\\F1553\"}.mdi-pizza:before{content:\"\\F0409\"}.mdi-play:before{content:\"\\F040A\"}.mdi-play-box:before{content:\"\\F127A\"}.mdi-play-box-multiple:before{content:\"\\F0D19\"}.mdi-play-box-multiple-outline:before{content:\"\\F13E6\"}.mdi-play-box-outline:before{content:\"\\F040B\"}.mdi-play-circle:before{content:\"\\F040C\"}.mdi-play-circle-outline:before{content:\"\\F040D\"}.mdi-play-network:before{content:\"\\F088B\"}.mdi-play-network-outline:before{content:\"\\F0CB7\"}.mdi-play-outline:before{content:\"\\F0F1B\"}.mdi-play-pause:before{content:\"\\F040E\"}.mdi-play-protected-content:before{content:\"\\F040F\"}.mdi-play-speed:before{content:\"\\F08FF\"}.mdi-playlist-check:before{content:\"\\F05C7\"}.mdi-playlist-edit:before{content:\"\\F0900\"}.mdi-playlist-minus:before{content:\"\\F0410\"}.mdi-playlist-music:before{content:\"\\F0CB8\"}.mdi-playlist-music-outline:before{content:\"\\F0CB9\"}.mdi-playlist-play:before{content:\"\\F0411\"}.mdi-playlist-plus:before{content:\"\\F0412\"}.mdi-playlist-remove:before{content:\"\\F0413\"}.mdi-playlist-star:before{content:\"\\F0DF2\"}.mdi-plex:before{content:\"\\F06BA\"}.mdi-plus:before{content:\"\\F0415\"}.mdi-plus-box:before{content:\"\\F0416\"}.mdi-plus-box-multiple:before{content:\"\\F0334\"}.mdi-plus-box-multiple-outline:before{content:\"\\F1143\"}.mdi-plus-box-outline:before{content:\"\\F0704\"}.mdi-plus-circle:before{content:\"\\F0417\"}.mdi-plus-circle-multiple:before{content:\"\\F034C\"}.mdi-plus-circle-multiple-outline:before{content:\"\\F0418\"}.mdi-plus-circle-outline:before{content:\"\\F0419\"}.mdi-plus-minus:before{content:\"\\F0992\"}.mdi-plus-minus-box:before{content:\"\\F0993\"}.mdi-plus-minus-variant:before{content:\"\\F14C9\"}.mdi-plus-network:before{content:\"\\F041A\"}.mdi-plus-network-outline:before{content:\"\\F0CBA\"}.mdi-plus-one:before{content:\"\\F041B\"}.mdi-plus-outline:before{content:\"\\F0705\"}.mdi-plus-thick:before{content:\"\\F11EC\"}.mdi-podcast:before{content:\"\\F0994\"}.mdi-podium:before{content:\"\\F0D25\"}.mdi-podium-bronze:before{content:\"\\F0D26\"}.mdi-podium-gold:before{content:\"\\F0D27\"}.mdi-podium-silver:before{content:\"\\F0D28\"}.mdi-point-of-sale:before{content:\"\\F0D92\"}.mdi-pokeball:before{content:\"\\F041D\"}.mdi-pokemon-go:before{content:\"\\F0A09\"}.mdi-poker-chip:before{content:\"\\F0830\"}.mdi-polaroid:before{content:\"\\F041E\"}.mdi-police-badge:before{content:\"\\F1167\"}.mdi-police-badge-outline:before{content:\"\\F1168\"}.mdi-poll:before{content:\"\\F041F\"}.mdi-poll-box:before{content:\"\\F0420\"}.mdi-poll-box-outline:before{content:\"\\F127B\"}.mdi-polo:before{content:\"\\F14C3\"}.mdi-polymer:before{content:\"\\F0421\"}.mdi-pool:before{content:\"\\F0606\"}.mdi-popcorn:before{content:\"\\F0422\"}.mdi-post:before{content:\"\\F1008\"}.mdi-post-outline:before{content:\"\\F1009\"}.mdi-postage-stamp:before{content:\"\\F0CBB\"}.mdi-pot:before{content:\"\\F02E5\"}.mdi-pot-mix:before{content:\"\\F065B\"}.mdi-pot-mix-outline:before{content:\"\\F0677\"}.mdi-pot-outline:before{content:\"\\F02FF\"}.mdi-pot-steam:before{content:\"\\F065A\"}.mdi-pot-steam-outline:before{content:\"\\F0326\"}.mdi-pound:before{content:\"\\F0423\"}.mdi-pound-box:before{content:\"\\F0424\"}.mdi-pound-box-outline:before{content:\"\\F117F\"}.mdi-power:before{content:\"\\F0425\"}.mdi-power-cycle:before{content:\"\\F0901\"}.mdi-power-off:before{content:\"\\F0902\"}.mdi-power-on:before{content:\"\\F0903\"}.mdi-power-plug:before{content:\"\\F06A5\"}.mdi-power-plug-off:before{content:\"\\F06A6\"}.mdi-power-plug-off-outline:before{content:\"\\F1424\"}.mdi-power-plug-outline:before{content:\"\\F1425\"}.mdi-power-settings:before{content:\"\\F0426\"}.mdi-power-sleep:before{content:\"\\F0904\"}.mdi-power-socket:before{content:\"\\F0427\"}.mdi-power-socket-au:before{content:\"\\F0905\"}.mdi-power-socket-de:before{content:\"\\F1107\"}.mdi-power-socket-eu:before{content:\"\\F07E7\"}.mdi-power-socket-fr:before{content:\"\\F1108\"}.mdi-power-socket-it:before{content:\"\\F14FF\"}.mdi-power-socket-jp:before{content:\"\\F1109\"}.mdi-power-socket-uk:before{content:\"\\F07E8\"}.mdi-power-socket-us:before{content:\"\\F07E9\"}.mdi-power-standby:before{content:\"\\F0906\"}.mdi-powershell:before{content:\"\\F0A0A\"}.mdi-prescription:before{content:\"\\F0706\"}.mdi-presentation:before{content:\"\\F0428\"}.mdi-presentation-play:before{content:\"\\F0429\"}.mdi-pretzel:before{content:\"\\F1562\"}.mdi-printer:before{content:\"\\F042A\"}.mdi-printer-3d:before{content:\"\\F042B\"}.mdi-printer-3d-nozzle:before{content:\"\\F0E5B\"}.mdi-printer-3d-nozzle-alert:before{content:\"\\F11C0\"}.mdi-printer-3d-nozzle-alert-outline:before{content:\"\\F11C1\"}.mdi-printer-3d-nozzle-outline:before{content:\"\\F0E5C\"}.mdi-printer-alert:before{content:\"\\F042C\"}.mdi-printer-check:before{content:\"\\F1146\"}.mdi-printer-eye:before{content:\"\\F1458\"}.mdi-printer-off:before{content:\"\\F0E5D\"}.mdi-printer-pos:before{content:\"\\F1057\"}.mdi-printer-search:before{content:\"\\F1457\"}.mdi-printer-settings:before{content:\"\\F0707\"}.mdi-printer-wireless:before{content:\"\\F0A0B\"}.mdi-priority-high:before{content:\"\\F0603\"}.mdi-priority-low:before{content:\"\\F0604\"}.mdi-professional-hexagon:before{content:\"\\F042D\"}.mdi-progress-alert:before{content:\"\\F0CBC\"}.mdi-progress-check:before{content:\"\\F0995\"}.mdi-progress-clock:before{content:\"\\F0996\"}.mdi-progress-close:before{content:\"\\F110A\"}.mdi-progress-download:before{content:\"\\F0997\"}.mdi-progress-question:before{content:\"\\F1522\"}.mdi-progress-upload:before{content:\"\\F0998\"}.mdi-progress-wrench:before{content:\"\\F0CBD\"}.mdi-projector:before{content:\"\\F042E\"}.mdi-projector-screen:before{content:\"\\F042F\"}.mdi-propane-tank:before{content:\"\\F1357\"}.mdi-propane-tank-outline:before{content:\"\\F1358\"}.mdi-protocol:before{content:\"\\F0FD8\"}.mdi-publish:before{content:\"\\F06A7\"}.mdi-pulse:before{content:\"\\F0430\"}.mdi-pump:before{content:\"\\F1402\"}.mdi-pumpkin:before{content:\"\\F0BBF\"}.mdi-purse:before{content:\"\\F0F1C\"}.mdi-purse-outline:before{content:\"\\F0F1D\"}.mdi-puzzle:before{content:\"\\F0431\"}.mdi-puzzle-check:before{content:\"\\F1426\"}.mdi-puzzle-check-outline:before{content:\"\\F1427\"}.mdi-puzzle-edit:before{content:\"\\F14D3\"}.mdi-puzzle-edit-outline:before{content:\"\\F14D9\"}.mdi-puzzle-heart:before{content:\"\\F14D4\"}.mdi-puzzle-heart-outline:before{content:\"\\F14DA\"}.mdi-puzzle-minus:before{content:\"\\F14D1\"}.mdi-puzzle-minus-outline:before{content:\"\\F14D7\"}.mdi-puzzle-outline:before{content:\"\\F0A66\"}.mdi-puzzle-plus:before{content:\"\\F14D0\"}.mdi-puzzle-plus-outline:before{content:\"\\F14D6\"}.mdi-puzzle-remove:before{content:\"\\F14D2\"}.mdi-puzzle-remove-outline:before{content:\"\\F14D8\"}.mdi-puzzle-star:before{content:\"\\F14D5\"}.mdi-puzzle-star-outline:before{content:\"\\F14DB\"}.mdi-qi:before{content:\"\\F0999\"}.mdi-qqchat:before{content:\"\\F0605\"}.mdi-qrcode:before{content:\"\\F0432\"}.mdi-qrcode-edit:before{content:\"\\F08B8\"}.mdi-qrcode-minus:before{content:\"\\F118C\"}.mdi-qrcode-plus:before{content:\"\\F118B\"}.mdi-qrcode-remove:before{content:\"\\F118D\"}.mdi-qrcode-scan:before{content:\"\\F0433\"}.mdi-quadcopter:before{content:\"\\F0434\"}.mdi-quality-high:before{content:\"\\F0435\"}.mdi-quality-low:before{content:\"\\F0A0C\"}.mdi-quality-medium:before{content:\"\\F0A0D\"}.mdi-quora:before{content:\"\\F0D29\"}.mdi-rabbit:before{content:\"\\F0907\"}.mdi-racing-helmet:before{content:\"\\F0D93\"}.mdi-racquetball:before{content:\"\\F0D94\"}.mdi-radar:before{content:\"\\F0437\"}.mdi-radiator:before{content:\"\\F0438\"}.mdi-radiator-disabled:before{content:\"\\F0AD7\"}.mdi-radiator-off:before{content:\"\\F0AD8\"}.mdi-radio:before{content:\"\\F0439\"}.mdi-radio-am:before{content:\"\\F0CBE\"}.mdi-radio-fm:before{content:\"\\F0CBF\"}.mdi-radio-handheld:before{content:\"\\F043A\"}.mdi-radio-off:before{content:\"\\F121C\"}.mdi-radio-tower:before{content:\"\\F043B\"}.mdi-radioactive:before{content:\"\\F043C\"}.mdi-radioactive-off:before{content:\"\\F0EC1\"}.mdi-radiobox-blank:before{content:\"\\F043D\"}.mdi-radiobox-marked:before{content:\"\\F043E\"}.mdi-radiology-box:before{content:\"\\F14C5\"}.mdi-radiology-box-outline:before{content:\"\\F14C6\"}.mdi-radius:before{content:\"\\F0CC0\"}.mdi-radius-outline:before{content:\"\\F0CC1\"}.mdi-railroad-light:before{content:\"\\F0F1E\"}.mdi-rake:before{content:\"\\F1544\"}.mdi-raspberry-pi:before{content:\"\\F043F\"}.mdi-ray-end:before{content:\"\\F0440\"}.mdi-ray-end-arrow:before{content:\"\\F0441\"}.mdi-ray-start:before{content:\"\\F0442\"}.mdi-ray-start-arrow:before{content:\"\\F0443\"}.mdi-ray-start-end:before{content:\"\\F0444\"}.mdi-ray-start-vertex-end:before{content:\"\\F15D8\"}.mdi-ray-vertex:before{content:\"\\F0445\"}.mdi-react:before{content:\"\\F0708\"}.mdi-read:before{content:\"\\F0447\"}.mdi-receipt:before{content:\"\\F0449\"}.mdi-record:before{content:\"\\F044A\"}.mdi-record-circle:before{content:\"\\F0EC2\"}.mdi-record-circle-outline:before{content:\"\\F0EC3\"}.mdi-record-player:before{content:\"\\F099A\"}.mdi-record-rec:before{content:\"\\F044B\"}.mdi-rectangle:before{content:\"\\F0E5E\"}.mdi-rectangle-outline:before{content:\"\\F0E5F\"}.mdi-recycle:before{content:\"\\F044C\"}.mdi-recycle-variant:before{content:\"\\F139D\"}.mdi-reddit:before{content:\"\\F044D\"}.mdi-redhat:before{content:\"\\F111B\"}.mdi-redo:before{content:\"\\F044E\"}.mdi-redo-variant:before{content:\"\\F044F\"}.mdi-reflect-horizontal:before{content:\"\\F0A0E\"}.mdi-reflect-vertical:before{content:\"\\F0A0F\"}.mdi-refresh:before{content:\"\\F0450\"}.mdi-refresh-circle:before{content:\"\\F1377\"}.mdi-regex:before{content:\"\\F0451\"}.mdi-registered-trademark:before{content:\"\\F0A67\"}.mdi-reiterate:before{content:\"\\F1588\"}.mdi-relation-many-to-many:before{content:\"\\F1496\"}.mdi-relation-many-to-one:before{content:\"\\F1497\"}.mdi-relation-many-to-one-or-many:before{content:\"\\F1498\"}.mdi-relation-many-to-only-one:before{content:\"\\F1499\"}.mdi-relation-many-to-zero-or-many:before{content:\"\\F149A\"}.mdi-relation-many-to-zero-or-one:before{content:\"\\F149B\"}.mdi-relation-one-or-many-to-many:before{content:\"\\F149C\"}.mdi-relation-one-or-many-to-one:before{content:\"\\F149D\"}.mdi-relation-one-or-many-to-one-or-many:before{content:\"\\F149E\"}.mdi-relation-one-or-many-to-only-one:before{content:\"\\F149F\"}.mdi-relation-one-or-many-to-zero-or-many:before{content:\"\\F14A0\"}.mdi-relation-one-or-many-to-zero-or-one:before{content:\"\\F14A1\"}.mdi-relation-one-to-many:before{content:\"\\F14A2\"}.mdi-relation-one-to-one:before{content:\"\\F14A3\"}.mdi-relation-one-to-one-or-many:before{content:\"\\F14A4\"}.mdi-relation-one-to-only-one:before{content:\"\\F14A5\"}.mdi-relation-one-to-zero-or-many:before{content:\"\\F14A6\"}.mdi-relation-one-to-zero-or-one:before{content:\"\\F14A7\"}.mdi-relation-only-one-to-many:before{content:\"\\F14A8\"}.mdi-relation-only-one-to-one:before{content:\"\\F14A9\"}.mdi-relation-only-one-to-one-or-many:before{content:\"\\F14AA\"}.mdi-relation-only-one-to-only-one:before{content:\"\\F14AB\"}.mdi-relation-only-one-to-zero-or-many:before{content:\"\\F14AC\"}.mdi-relation-only-one-to-zero-or-one:before{content:\"\\F14AD\"}.mdi-relation-zero-or-many-to-many:before{content:\"\\F14AE\"}.mdi-relation-zero-or-many-to-one:before{content:\"\\F14AF\"}.mdi-relation-zero-or-many-to-one-or-many:before{content:\"\\F14B0\"}.mdi-relation-zero-or-many-to-only-one:before{content:\"\\F14B1\"}.mdi-relation-zero-or-many-to-zero-or-many:before{content:\"\\F14B2\"}.mdi-relation-zero-or-many-to-zero-or-one:before{content:\"\\F14B3\"}.mdi-relation-zero-or-one-to-many:before{content:\"\\F14B4\"}.mdi-relation-zero-or-one-to-one:before{content:\"\\F14B5\"}.mdi-relation-zero-or-one-to-one-or-many:before{content:\"\\F14B6\"}.mdi-relation-zero-or-one-to-only-one:before{content:\"\\F14B7\"}.mdi-relation-zero-or-one-to-zero-or-many:before{content:\"\\F14B8\"}.mdi-relation-zero-or-one-to-zero-or-one:before{content:\"\\F14B9\"}.mdi-relative-scale:before{content:\"\\F0452\"}.mdi-reload:before{content:\"\\F0453\"}.mdi-reload-alert:before{content:\"\\F110B\"}.mdi-reminder:before{content:\"\\F088C\"}.mdi-remote:before{content:\"\\F0454\"}.mdi-remote-desktop:before{content:\"\\F08B9\"}.mdi-remote-off:before{content:\"\\F0EC4\"}.mdi-remote-tv:before{content:\"\\F0EC5\"}.mdi-remote-tv-off:before{content:\"\\F0EC6\"}.mdi-rename-box:before{content:\"\\F0455\"}.mdi-reorder-horizontal:before{content:\"\\F0688\"}.mdi-reorder-vertical:before{content:\"\\F0689\"}.mdi-repeat:before{content:\"\\F0456\"}.mdi-repeat-off:before{content:\"\\F0457\"}.mdi-repeat-once:before{content:\"\\F0458\"}.mdi-replay:before{content:\"\\F0459\"}.mdi-reply:before{content:\"\\F045A\"}.mdi-reply-all:before{content:\"\\F045B\"}.mdi-reply-all-outline:before{content:\"\\F0F1F\"}.mdi-reply-circle:before{content:\"\\F11AE\"}.mdi-reply-outline:before{content:\"\\F0F20\"}.mdi-reproduction:before{content:\"\\F045C\"}.mdi-resistor:before{content:\"\\F0B44\"}.mdi-resistor-nodes:before{content:\"\\F0B45\"}.mdi-resize:before{content:\"\\F0A68\"}.mdi-resize-bottom-right:before{content:\"\\F045D\"}.mdi-responsive:before{content:\"\\F045E\"}.mdi-restart:before{content:\"\\F0709\"}.mdi-restart-alert:before{content:\"\\F110C\"}.mdi-restart-off:before{content:\"\\F0D95\"}.mdi-restore:before{content:\"\\F099B\"}.mdi-restore-alert:before{content:\"\\F110D\"}.mdi-rewind:before{content:\"\\F045F\"}.mdi-rewind-10:before{content:\"\\F0D2A\"}.mdi-rewind-30:before{content:\"\\F0D96\"}.mdi-rewind-5:before{content:\"\\F11F9\"}.mdi-rewind-60:before{content:\"\\F160C\"}.mdi-rewind-outline:before{content:\"\\F070A\"}.mdi-rhombus:before{content:\"\\F070B\"}.mdi-rhombus-medium:before{content:\"\\F0A10\"}.mdi-rhombus-medium-outline:before{content:\"\\F14DC\"}.mdi-rhombus-outline:before{content:\"\\F070C\"}.mdi-rhombus-split:before{content:\"\\F0A11\"}.mdi-rhombus-split-outline:before{content:\"\\F14DD\"}.mdi-ribbon:before{content:\"\\F0460\"}.mdi-rice:before{content:\"\\F07EA\"}.mdi-rickshaw:before{content:\"\\F15BB\"}.mdi-rickshaw-electric:before{content:\"\\F15BC\"}.mdi-ring:before{content:\"\\F07EB\"}.mdi-rivet:before{content:\"\\F0E60\"}.mdi-road:before{content:\"\\F0461\"}.mdi-road-variant:before{content:\"\\F0462\"}.mdi-robber:before{content:\"\\F1058\"}.mdi-robot:before{content:\"\\F06A9\"}.mdi-robot-angry:before{content:\"\\F169D\"}.mdi-robot-angry-outline:before{content:\"\\F169E\"}.mdi-robot-confused:before{content:\"\\F169F\"}.mdi-robot-confused-outline:before{content:\"\\F16A0\"}.mdi-robot-dead:before{content:\"\\F16A1\"}.mdi-robot-dead-outline:before{content:\"\\F16A2\"}.mdi-robot-excited:before{content:\"\\F16A3\"}.mdi-robot-excited-outline:before{content:\"\\F16A4\"}.mdi-robot-industrial:before{content:\"\\F0B46\"}.mdi-robot-love:before{content:\"\\F16A5\"}.mdi-robot-love-outline:before{content:\"\\F16A6\"}.mdi-robot-mower:before{content:\"\\F11F7\"}.mdi-robot-mower-outline:before{content:\"\\F11F3\"}.mdi-robot-off:before{content:\"\\F16A7\"}.mdi-robot-off-outline:before{content:\"\\F167B\"}.mdi-robot-outline:before{content:\"\\F167A\"}.mdi-robot-vacuum:before{content:\"\\F070D\"}.mdi-robot-vacuum-variant:before{content:\"\\F0908\"}.mdi-rocket:before{content:\"\\F0463\"}.mdi-rocket-launch:before{content:\"\\F14DE\"}.mdi-rocket-launch-outline:before{content:\"\\F14DF\"}.mdi-rocket-outline:before{content:\"\\F13AF\"}.mdi-rodent:before{content:\"\\F1327\"}.mdi-roller-skate:before{content:\"\\F0D2B\"}.mdi-roller-skate-off:before{content:\"\\F0145\"}.mdi-rollerblade:before{content:\"\\F0D2C\"}.mdi-rollerblade-off:before{content:\"\\F002E\"}.mdi-rollupjs:before{content:\"\\F0BC0\"}.mdi-roman-numeral-1:before{content:\"\\F1088\"}.mdi-roman-numeral-10:before{content:\"\\F1091\"}.mdi-roman-numeral-2:before{content:\"\\F1089\"}.mdi-roman-numeral-3:before{content:\"\\F108A\"}.mdi-roman-numeral-4:before{content:\"\\F108B\"}.mdi-roman-numeral-5:before{content:\"\\F108C\"}.mdi-roman-numeral-6:before{content:\"\\F108D\"}.mdi-roman-numeral-7:before{content:\"\\F108E\"}.mdi-roman-numeral-8:before{content:\"\\F108F\"}.mdi-roman-numeral-9:before{content:\"\\F1090\"}.mdi-room-service:before{content:\"\\F088D\"}.mdi-room-service-outline:before{content:\"\\F0D97\"}.mdi-rotate-3d:before{content:\"\\F0EC7\"}.mdi-rotate-3d-variant:before{content:\"\\F0464\"}.mdi-rotate-left:before{content:\"\\F0465\"}.mdi-rotate-left-variant:before{content:\"\\F0466\"}.mdi-rotate-orbit:before{content:\"\\F0D98\"}.mdi-rotate-right:before{content:\"\\F0467\"}.mdi-rotate-right-variant:before{content:\"\\F0468\"}.mdi-rounded-corner:before{content:\"\\F0607\"}.mdi-router:before{content:\"\\F11E2\"}.mdi-router-network:before{content:\"\\F1087\"}.mdi-router-wireless:before{content:\"\\F0469\"}.mdi-router-wireless-off:before{content:\"\\F15A3\"}.mdi-router-wireless-settings:before{content:\"\\F0A69\"}.mdi-routes:before{content:\"\\F046A\"}.mdi-routes-clock:before{content:\"\\F1059\"}.mdi-rowing:before{content:\"\\F0608\"}.mdi-rss:before{content:\"\\F046B\"}.mdi-rss-box:before{content:\"\\F046C\"}.mdi-rss-off:before{content:\"\\F0F21\"}.mdi-rug:before{content:\"\\F1475\"}.mdi-rugby:before{content:\"\\F0D99\"}.mdi-ruler:before{content:\"\\F046D\"}.mdi-ruler-square:before{content:\"\\F0CC2\"}.mdi-ruler-square-compass:before{content:\"\\F0EBE\"}.mdi-run:before{content:\"\\F070E\"}.mdi-run-fast:before{content:\"\\F046E\"}.mdi-rv-truck:before{content:\"\\F11D4\"}.mdi-sack:before{content:\"\\F0D2E\"}.mdi-sack-percent:before{content:\"\\F0D2F\"}.mdi-safe:before{content:\"\\F0A6A\"}.mdi-safe-square:before{content:\"\\F127C\"}.mdi-safe-square-outline:before{content:\"\\F127D\"}.mdi-safety-goggles:before{content:\"\\F0D30\"}.mdi-sail-boat:before{content:\"\\F0EC8\"}.mdi-sale:before{content:\"\\F046F\"}.mdi-salesforce:before{content:\"\\F088E\"}.mdi-sass:before{content:\"\\F07EC\"}.mdi-satellite:before{content:\"\\F0470\"}.mdi-satellite-uplink:before{content:\"\\F0909\"}.mdi-satellite-variant:before{content:\"\\F0471\"}.mdi-sausage:before{content:\"\\F08BA\"}.mdi-saw-blade:before{content:\"\\F0E61\"}.mdi-sawtooth-wave:before{content:\"\\F147A\"}.mdi-saxophone:before{content:\"\\F0609\"}.mdi-scale:before{content:\"\\F0472\"}.mdi-scale-balance:before{content:\"\\F05D1\"}.mdi-scale-bathroom:before{content:\"\\F0473\"}.mdi-scale-off:before{content:\"\\F105A\"}.mdi-scan-helper:before{content:\"\\F13D8\"}.mdi-scanner:before{content:\"\\F06AB\"}.mdi-scanner-off:before{content:\"\\F090A\"}.mdi-scatter-plot:before{content:\"\\F0EC9\"}.mdi-scatter-plot-outline:before{content:\"\\F0ECA\"}.mdi-school:before{content:\"\\F0474\"}.mdi-school-outline:before{content:\"\\F1180\"}.mdi-scissors-cutting:before{content:\"\\F0A6B\"}.mdi-scooter:before{content:\"\\F15BD\"}.mdi-scooter-electric:before{content:\"\\F15BE\"}.mdi-scoreboard:before{content:\"\\F127E\"}.mdi-scoreboard-outline:before{content:\"\\F127F\"}.mdi-screen-rotation:before{content:\"\\F0475\"}.mdi-screen-rotation-lock:before{content:\"\\F0478\"}.mdi-screw-flat-top:before{content:\"\\F0DF3\"}.mdi-screw-lag:before{content:\"\\F0DF4\"}.mdi-screw-machine-flat-top:before{content:\"\\F0DF5\"}.mdi-screw-machine-round-top:before{content:\"\\F0DF6\"}.mdi-screw-round-top:before{content:\"\\F0DF7\"}.mdi-screwdriver:before{content:\"\\F0476\"}.mdi-script:before{content:\"\\F0BC1\"}.mdi-script-outline:before{content:\"\\F0477\"}.mdi-script-text:before{content:\"\\F0BC2\"}.mdi-script-text-outline:before{content:\"\\F0BC3\"}.mdi-sd:before{content:\"\\F0479\"}.mdi-seal:before{content:\"\\F047A\"}.mdi-seal-variant:before{content:\"\\F0FD9\"}.mdi-search-web:before{content:\"\\F070F\"}.mdi-seat:before{content:\"\\F0CC3\"}.mdi-seat-flat:before{content:\"\\F047B\"}.mdi-seat-flat-angled:before{content:\"\\F047C\"}.mdi-seat-individual-suite:before{content:\"\\F047D\"}.mdi-seat-legroom-extra:before{content:\"\\F047E\"}.mdi-seat-legroom-normal:before{content:\"\\F047F\"}.mdi-seat-legroom-reduced:before{content:\"\\F0480\"}.mdi-seat-outline:before{content:\"\\F0CC4\"}.mdi-seat-passenger:before{content:\"\\F1249\"}.mdi-seat-recline-extra:before{content:\"\\F0481\"}.mdi-seat-recline-normal:before{content:\"\\F0482\"}.mdi-seatbelt:before{content:\"\\F0CC5\"}.mdi-security:before{content:\"\\F0483\"}.mdi-security-network:before{content:\"\\F0484\"}.mdi-seed:before{content:\"\\F0E62\"}.mdi-seed-off:before{content:\"\\F13FD\"}.mdi-seed-off-outline:before{content:\"\\F13FE\"}.mdi-seed-outline:before{content:\"\\F0E63\"}.mdi-seesaw:before{content:\"\\F15A4\"}.mdi-segment:before{content:\"\\F0ECB\"}.mdi-select:before{content:\"\\F0485\"}.mdi-select-all:before{content:\"\\F0486\"}.mdi-select-color:before{content:\"\\F0D31\"}.mdi-select-compare:before{content:\"\\F0AD9\"}.mdi-select-drag:before{content:\"\\F0A6C\"}.mdi-select-group:before{content:\"\\F0F82\"}.mdi-select-inverse:before{content:\"\\F0487\"}.mdi-select-marker:before{content:\"\\F1280\"}.mdi-select-multiple:before{content:\"\\F1281\"}.mdi-select-multiple-marker:before{content:\"\\F1282\"}.mdi-select-off:before{content:\"\\F0488\"}.mdi-select-place:before{content:\"\\F0FDA\"}.mdi-select-search:before{content:\"\\F1204\"}.mdi-selection:before{content:\"\\F0489\"}.mdi-selection-drag:before{content:\"\\F0A6D\"}.mdi-selection-ellipse:before{content:\"\\F0D32\"}.mdi-selection-ellipse-arrow-inside:before{content:\"\\F0F22\"}.mdi-selection-marker:before{content:\"\\F1283\"}.mdi-selection-multiple:before{content:\"\\F1285\"}.mdi-selection-multiple-marker:before{content:\"\\F1284\"}.mdi-selection-off:before{content:\"\\F0777\"}.mdi-selection-search:before{content:\"\\F1205\"}.mdi-semantic-web:before{content:\"\\F1316\"}.mdi-send:before{content:\"\\F048A\"}.mdi-send-check:before{content:\"\\F1161\"}.mdi-send-check-outline:before{content:\"\\F1162\"}.mdi-send-circle:before{content:\"\\F0DF8\"}.mdi-send-circle-outline:before{content:\"\\F0DF9\"}.mdi-send-clock:before{content:\"\\F1163\"}.mdi-send-clock-outline:before{content:\"\\F1164\"}.mdi-send-lock:before{content:\"\\F07ED\"}.mdi-send-lock-outline:before{content:\"\\F1166\"}.mdi-send-outline:before{content:\"\\F1165\"}.mdi-serial-port:before{content:\"\\F065C\"}.mdi-server:before{content:\"\\F048B\"}.mdi-server-minus:before{content:\"\\F048C\"}.mdi-server-network:before{content:\"\\F048D\"}.mdi-server-network-off:before{content:\"\\F048E\"}.mdi-server-off:before{content:\"\\F048F\"}.mdi-server-plus:before{content:\"\\F0490\"}.mdi-server-remove:before{content:\"\\F0491\"}.mdi-server-security:before{content:\"\\F0492\"}.mdi-set-all:before{content:\"\\F0778\"}.mdi-set-center:before{content:\"\\F0779\"}.mdi-set-center-right:before{content:\"\\F077A\"}.mdi-set-left:before{content:\"\\F077B\"}.mdi-set-left-center:before{content:\"\\F077C\"}.mdi-set-left-right:before{content:\"\\F077D\"}.mdi-set-merge:before{content:\"\\F14E0\"}.mdi-set-none:before{content:\"\\F077E\"}.mdi-set-right:before{content:\"\\F077F\"}.mdi-set-split:before{content:\"\\F14E1\"}.mdi-set-square:before{content:\"\\F145D\"}.mdi-set-top-box:before{content:\"\\F099F\"}.mdi-settings-helper:before{content:\"\\F0A6E\"}.mdi-shaker:before{content:\"\\F110E\"}.mdi-shaker-outline:before{content:\"\\F110F\"}.mdi-shape:before{content:\"\\F0831\"}.mdi-shape-circle-plus:before{content:\"\\F065D\"}.mdi-shape-outline:before{content:\"\\F0832\"}.mdi-shape-oval-plus:before{content:\"\\F11FA\"}.mdi-shape-plus:before{content:\"\\F0495\"}.mdi-shape-polygon-plus:before{content:\"\\F065E\"}.mdi-shape-rectangle-plus:before{content:\"\\F065F\"}.mdi-shape-square-plus:before{content:\"\\F0660\"}.mdi-shape-square-rounded-plus:before{content:\"\\F14FA\"}.mdi-share:before{content:\"\\F0496\"}.mdi-share-all:before{content:\"\\F11F4\"}.mdi-share-all-outline:before{content:\"\\F11F5\"}.mdi-share-circle:before{content:\"\\F11AD\"}.mdi-share-off:before{content:\"\\F0F23\"}.mdi-share-off-outline:before{content:\"\\F0F24\"}.mdi-share-outline:before{content:\"\\F0932\"}.mdi-share-variant:before{content:\"\\F0497\"}.mdi-share-variant-outline:before{content:\"\\F1514\"}.mdi-shark-fin:before{content:\"\\F1673\"}.mdi-shark-fin-outline:before{content:\"\\F1674\"}.mdi-sheep:before{content:\"\\F0CC6\"}.mdi-shield:before{content:\"\\F0498\"}.mdi-shield-account:before{content:\"\\F088F\"}.mdi-shield-account-outline:before{content:\"\\F0A12\"}.mdi-shield-account-variant:before{content:\"\\F15A7\"}.mdi-shield-account-variant-outline:before{content:\"\\F15A8\"}.mdi-shield-airplane:before{content:\"\\F06BB\"}.mdi-shield-airplane-outline:before{content:\"\\F0CC7\"}.mdi-shield-alert:before{content:\"\\F0ECC\"}.mdi-shield-alert-outline:before{content:\"\\F0ECD\"}.mdi-shield-bug:before{content:\"\\F13DA\"}.mdi-shield-bug-outline:before{content:\"\\F13DB\"}.mdi-shield-car:before{content:\"\\F0F83\"}.mdi-shield-check:before{content:\"\\F0565\"}.mdi-shield-check-outline:before{content:\"\\F0CC8\"}.mdi-shield-cross:before{content:\"\\F0CC9\"}.mdi-shield-cross-outline:before{content:\"\\F0CCA\"}.mdi-shield-edit:before{content:\"\\F11A0\"}.mdi-shield-edit-outline:before{content:\"\\F11A1\"}.mdi-shield-half:before{content:\"\\F1360\"}.mdi-shield-half-full:before{content:\"\\F0780\"}.mdi-shield-home:before{content:\"\\F068A\"}.mdi-shield-home-outline:before{content:\"\\F0CCB\"}.mdi-shield-key:before{content:\"\\F0BC4\"}.mdi-shield-key-outline:before{content:\"\\F0BC5\"}.mdi-shield-link-variant:before{content:\"\\F0D33\"}.mdi-shield-link-variant-outline:before{content:\"\\F0D34\"}.mdi-shield-lock:before{content:\"\\F099D\"}.mdi-shield-lock-outline:before{content:\"\\F0CCC\"}.mdi-shield-off:before{content:\"\\F099E\"}.mdi-shield-off-outline:before{content:\"\\F099C\"}.mdi-shield-outline:before{content:\"\\F0499\"}.mdi-shield-plus:before{content:\"\\F0ADA\"}.mdi-shield-plus-outline:before{content:\"\\F0ADB\"}.mdi-shield-refresh:before{content:\"\\F00AA\"}.mdi-shield-refresh-outline:before{content:\"\\F01E0\"}.mdi-shield-remove:before{content:\"\\F0ADC\"}.mdi-shield-remove-outline:before{content:\"\\F0ADD\"}.mdi-shield-search:before{content:\"\\F0D9A\"}.mdi-shield-star:before{content:\"\\F113B\"}.mdi-shield-star-outline:before{content:\"\\F113C\"}.mdi-shield-sun:before{content:\"\\F105D\"}.mdi-shield-sun-outline:before{content:\"\\F105E\"}.mdi-shield-sync:before{content:\"\\F11A2\"}.mdi-shield-sync-outline:before{content:\"\\F11A3\"}.mdi-ship-wheel:before{content:\"\\F0833\"}.mdi-shoe-ballet:before{content:\"\\F15CA\"}.mdi-shoe-cleat:before{content:\"\\F15C7\"}.mdi-shoe-formal:before{content:\"\\F0B47\"}.mdi-shoe-heel:before{content:\"\\F0B48\"}.mdi-shoe-print:before{content:\"\\F0DFA\"}.mdi-shoe-sneaker:before{content:\"\\F15C8\"}.mdi-shopping:before{content:\"\\F049A\"}.mdi-shopping-music:before{content:\"\\F049B\"}.mdi-shopping-outline:before{content:\"\\F11D5\"}.mdi-shopping-search:before{content:\"\\F0F84\"}.mdi-shore:before{content:\"\\F14F9\"}.mdi-shovel:before{content:\"\\F0710\"}.mdi-shovel-off:before{content:\"\\F0711\"}.mdi-shower:before{content:\"\\F09A0\"}.mdi-shower-head:before{content:\"\\F09A1\"}.mdi-shredder:before{content:\"\\F049C\"}.mdi-shuffle:before{content:\"\\F049D\"}.mdi-shuffle-disabled:before{content:\"\\F049E\"}.mdi-shuffle-variant:before{content:\"\\F049F\"}.mdi-shuriken:before{content:\"\\F137F\"}.mdi-sigma:before{content:\"\\F04A0\"}.mdi-sigma-lower:before{content:\"\\F062B\"}.mdi-sign-caution:before{content:\"\\F04A1\"}.mdi-sign-direction:before{content:\"\\F0781\"}.mdi-sign-direction-minus:before{content:\"\\F1000\"}.mdi-sign-direction-plus:before{content:\"\\F0FDC\"}.mdi-sign-direction-remove:before{content:\"\\F0FDD\"}.mdi-sign-pole:before{content:\"\\F14F8\"}.mdi-sign-real-estate:before{content:\"\\F1118\"}.mdi-sign-text:before{content:\"\\F0782\"}.mdi-signal:before{content:\"\\F04A2\"}.mdi-signal-2g:before{content:\"\\F0712\"}.mdi-signal-3g:before{content:\"\\F0713\"}.mdi-signal-4g:before{content:\"\\F0714\"}.mdi-signal-5g:before{content:\"\\F0A6F\"}.mdi-signal-cellular-1:before{content:\"\\F08BC\"}.mdi-signal-cellular-2:before{content:\"\\F08BD\"}.mdi-signal-cellular-3:before{content:\"\\F08BE\"}.mdi-signal-cellular-outline:before{content:\"\\F08BF\"}.mdi-signal-distance-variant:before{content:\"\\F0E64\"}.mdi-signal-hspa:before{content:\"\\F0715\"}.mdi-signal-hspa-plus:before{content:\"\\F0716\"}.mdi-signal-off:before{content:\"\\F0783\"}.mdi-signal-variant:before{content:\"\\F060A\"}.mdi-signature:before{content:\"\\F0DFB\"}.mdi-signature-freehand:before{content:\"\\F0DFC\"}.mdi-signature-image:before{content:\"\\F0DFD\"}.mdi-signature-text:before{content:\"\\F0DFE\"}.mdi-silo:before{content:\"\\F0B49\"}.mdi-silverware:before{content:\"\\F04A3\"}.mdi-silverware-clean:before{content:\"\\F0FDE\"}.mdi-silverware-fork:before{content:\"\\F04A4\"}.mdi-silverware-fork-knife:before{content:\"\\F0A70\"}.mdi-silverware-spoon:before{content:\"\\F04A5\"}.mdi-silverware-variant:before{content:\"\\F04A6\"}.mdi-sim:before{content:\"\\F04A7\"}.mdi-sim-alert:before{content:\"\\F04A8\"}.mdi-sim-alert-outline:before{content:\"\\F15D3\"}.mdi-sim-off:before{content:\"\\F04A9\"}.mdi-sim-off-outline:before{content:\"\\F15D4\"}.mdi-sim-outline:before{content:\"\\F15D5\"}.mdi-simple-icons:before{content:\"\\F131D\"}.mdi-sina-weibo:before{content:\"\\F0ADF\"}.mdi-sine-wave:before{content:\"\\F095B\"}.mdi-sitemap:before{content:\"\\F04AA\"}.mdi-size-l:before{content:\"\\F13A6\"}.mdi-size-m:before{content:\"\\F13A5\"}.mdi-size-s:before{content:\"\\F13A4\"}.mdi-size-xl:before{content:\"\\F13A7\"}.mdi-size-xs:before{content:\"\\F13A3\"}.mdi-size-xxl:before{content:\"\\F13A8\"}.mdi-size-xxs:before{content:\"\\F13A2\"}.mdi-size-xxxl:before{content:\"\\F13A9\"}.mdi-skate:before{content:\"\\F0D35\"}.mdi-skateboard:before{content:\"\\F14C2\"}.mdi-skew-less:before{content:\"\\F0D36\"}.mdi-skew-more:before{content:\"\\F0D37\"}.mdi-ski:before{content:\"\\F1304\"}.mdi-ski-cross-country:before{content:\"\\F1305\"}.mdi-ski-water:before{content:\"\\F1306\"}.mdi-skip-backward:before{content:\"\\F04AB\"}.mdi-skip-backward-outline:before{content:\"\\F0F25\"}.mdi-skip-forward:before{content:\"\\F04AC\"}.mdi-skip-forward-outline:before{content:\"\\F0F26\"}.mdi-skip-next:before{content:\"\\F04AD\"}.mdi-skip-next-circle:before{content:\"\\F0661\"}.mdi-skip-next-circle-outline:before{content:\"\\F0662\"}.mdi-skip-next-outline:before{content:\"\\F0F27\"}.mdi-skip-previous:before{content:\"\\F04AE\"}.mdi-skip-previous-circle:before{content:\"\\F0663\"}.mdi-skip-previous-circle-outline:before{content:\"\\F0664\"}.mdi-skip-previous-outline:before{content:\"\\F0F28\"}.mdi-skull:before{content:\"\\F068C\"}.mdi-skull-crossbones:before{content:\"\\F0BC6\"}.mdi-skull-crossbones-outline:before{content:\"\\F0BC7\"}.mdi-skull-outline:before{content:\"\\F0BC8\"}.mdi-skull-scan:before{content:\"\\F14C7\"}.mdi-skull-scan-outline:before{content:\"\\F14C8\"}.mdi-skype:before{content:\"\\F04AF\"}.mdi-skype-business:before{content:\"\\F04B0\"}.mdi-slack:before{content:\"\\F04B1\"}.mdi-slash-forward:before{content:\"\\F0FDF\"}.mdi-slash-forward-box:before{content:\"\\F0FE0\"}.mdi-sleep:before{content:\"\\F04B2\"}.mdi-sleep-off:before{content:\"\\F04B3\"}.mdi-slide:before{content:\"\\F15A5\"}.mdi-slope-downhill:before{content:\"\\F0DFF\"}.mdi-slope-uphill:before{content:\"\\F0E00\"}.mdi-slot-machine:before{content:\"\\F1114\"}.mdi-slot-machine-outline:before{content:\"\\F1115\"}.mdi-smart-card:before{content:\"\\F10BD\"}.mdi-smart-card-outline:before{content:\"\\F10BE\"}.mdi-smart-card-reader:before{content:\"\\F10BF\"}.mdi-smart-card-reader-outline:before{content:\"\\F10C0\"}.mdi-smog:before{content:\"\\F0A71\"}.mdi-smoke-detector:before{content:\"\\F0392\"}.mdi-smoking:before{content:\"\\F04B4\"}.mdi-smoking-off:before{content:\"\\F04B5\"}.mdi-smoking-pipe:before{content:\"\\F140D\"}.mdi-smoking-pipe-off:before{content:\"\\F1428\"}.mdi-snail:before{content:\"\\F1677\"}.mdi-snake:before{content:\"\\F150E\"}.mdi-snapchat:before{content:\"\\F04B6\"}.mdi-snowboard:before{content:\"\\F1307\"}.mdi-snowflake:before{content:\"\\F0717\"}.mdi-snowflake-alert:before{content:\"\\F0F29\"}.mdi-snowflake-melt:before{content:\"\\F12CB\"}.mdi-snowflake-off:before{content:\"\\F14E3\"}.mdi-snowflake-variant:before{content:\"\\F0F2A\"}.mdi-snowman:before{content:\"\\F04B7\"}.mdi-soccer:before{content:\"\\F04B8\"}.mdi-soccer-field:before{content:\"\\F0834\"}.mdi-social-distance-2-meters:before{content:\"\\F1579\"}.mdi-social-distance-6-feet:before{content:\"\\F157A\"}.mdi-sofa:before{content:\"\\F04B9\"}.mdi-sofa-outline:before{content:\"\\F156D\"}.mdi-sofa-single:before{content:\"\\F156E\"}.mdi-sofa-single-outline:before{content:\"\\F156F\"}.mdi-solar-panel:before{content:\"\\F0D9B\"}.mdi-solar-panel-large:before{content:\"\\F0D9C\"}.mdi-solar-power:before{content:\"\\F0A72\"}.mdi-soldering-iron:before{content:\"\\F1092\"}.mdi-solid:before{content:\"\\F068D\"}.mdi-sony-playstation:before{content:\"\\F0414\"}.mdi-sort:before{content:\"\\F04BA\"}.mdi-sort-alphabetical-ascending:before{content:\"\\F05BD\"}.mdi-sort-alphabetical-ascending-variant:before{content:\"\\F1148\"}.mdi-sort-alphabetical-descending:before{content:\"\\F05BF\"}.mdi-sort-alphabetical-descending-variant:before{content:\"\\F1149\"}.mdi-sort-alphabetical-variant:before{content:\"\\F04BB\"}.mdi-sort-ascending:before{content:\"\\F04BC\"}.mdi-sort-bool-ascending:before{content:\"\\F1385\"}.mdi-sort-bool-ascending-variant:before{content:\"\\F1386\"}.mdi-sort-bool-descending:before{content:\"\\F1387\"}.mdi-sort-bool-descending-variant:before{content:\"\\F1388\"}.mdi-sort-calendar-ascending:before{content:\"\\F1547\"}.mdi-sort-calendar-descending:before{content:\"\\F1548\"}.mdi-sort-clock-ascending:before{content:\"\\F1549\"}.mdi-sort-clock-ascending-outline:before{content:\"\\F154A\"}.mdi-sort-clock-descending:before{content:\"\\F154B\"}.mdi-sort-clock-descending-outline:before{content:\"\\F154C\"}.mdi-sort-descending:before{content:\"\\F04BD\"}.mdi-sort-numeric-ascending:before{content:\"\\F1389\"}.mdi-sort-numeric-ascending-variant:before{content:\"\\F090D\"}.mdi-sort-numeric-descending:before{content:\"\\F138A\"}.mdi-sort-numeric-descending-variant:before{content:\"\\F0AD2\"}.mdi-sort-numeric-variant:before{content:\"\\F04BE\"}.mdi-sort-reverse-variant:before{content:\"\\F033C\"}.mdi-sort-variant:before{content:\"\\F04BF\"}.mdi-sort-variant-lock:before{content:\"\\F0CCD\"}.mdi-sort-variant-lock-open:before{content:\"\\F0CCE\"}.mdi-sort-variant-remove:before{content:\"\\F1147\"}.mdi-soundcloud:before{content:\"\\F04C0\"}.mdi-source-branch:before{content:\"\\F062C\"}.mdi-source-branch-check:before{content:\"\\F14CF\"}.mdi-source-branch-minus:before{content:\"\\F14CB\"}.mdi-source-branch-plus:before{content:\"\\F14CA\"}.mdi-source-branch-refresh:before{content:\"\\F14CD\"}.mdi-source-branch-remove:before{content:\"\\F14CC\"}.mdi-source-branch-sync:before{content:\"\\F14CE\"}.mdi-source-commit:before{content:\"\\F0718\"}.mdi-source-commit-end:before{content:\"\\F0719\"}.mdi-source-commit-end-local:before{content:\"\\F071A\"}.mdi-source-commit-local:before{content:\"\\F071B\"}.mdi-source-commit-next-local:before{content:\"\\F071C\"}.mdi-source-commit-start:before{content:\"\\F071D\"}.mdi-source-commit-start-next-local:before{content:\"\\F071E\"}.mdi-source-fork:before{content:\"\\F04C1\"}.mdi-source-merge:before{content:\"\\F062D\"}.mdi-source-pull:before{content:\"\\F04C2\"}.mdi-source-repository:before{content:\"\\F0CCF\"}.mdi-source-repository-multiple:before{content:\"\\F0CD0\"}.mdi-soy-sauce:before{content:\"\\F07EE\"}.mdi-soy-sauce-off:before{content:\"\\F13FC\"}.mdi-spa:before{content:\"\\F0CD1\"}.mdi-spa-outline:before{content:\"\\F0CD2\"}.mdi-space-invaders:before{content:\"\\F0BC9\"}.mdi-space-station:before{content:\"\\F1383\"}.mdi-spade:before{content:\"\\F0E65\"}.mdi-sparkles:before{content:\"\\F1545\"}.mdi-speaker:before{content:\"\\F04C3\"}.mdi-speaker-bluetooth:before{content:\"\\F09A2\"}.mdi-speaker-multiple:before{content:\"\\F0D38\"}.mdi-speaker-off:before{content:\"\\F04C4\"}.mdi-speaker-wireless:before{content:\"\\F071F\"}.mdi-speedometer:before{content:\"\\F04C5\"}.mdi-speedometer-medium:before{content:\"\\F0F85\"}.mdi-speedometer-slow:before{content:\"\\F0F86\"}.mdi-spellcheck:before{content:\"\\F04C6\"}.mdi-spider:before{content:\"\\F11EA\"}.mdi-spider-thread:before{content:\"\\F11EB\"}.mdi-spider-web:before{content:\"\\F0BCA\"}.mdi-spirit-level:before{content:\"\\F14F1\"}.mdi-spoon-sugar:before{content:\"\\F1429\"}.mdi-spotify:before{content:\"\\F04C7\"}.mdi-spotlight:before{content:\"\\F04C8\"}.mdi-spotlight-beam:before{content:\"\\F04C9\"}.mdi-spray:before{content:\"\\F0665\"}.mdi-spray-bottle:before{content:\"\\F0AE0\"}.mdi-sprinkler:before{content:\"\\F105F\"}.mdi-sprinkler-variant:before{content:\"\\F1060\"}.mdi-sprout:before{content:\"\\F0E66\"}.mdi-sprout-outline:before{content:\"\\F0E67\"}.mdi-square:before{content:\"\\F0764\"}.mdi-square-circle:before{content:\"\\F1500\"}.mdi-square-edit-outline:before{content:\"\\F090C\"}.mdi-square-medium:before{content:\"\\F0A13\"}.mdi-square-medium-outline:before{content:\"\\F0A14\"}.mdi-square-off:before{content:\"\\F12EE\"}.mdi-square-off-outline:before{content:\"\\F12EF\"}.mdi-square-outline:before{content:\"\\F0763\"}.mdi-square-root:before{content:\"\\F0784\"}.mdi-square-root-box:before{content:\"\\F09A3\"}.mdi-square-rounded:before{content:\"\\F14FB\"}.mdi-square-rounded-outline:before{content:\"\\F14FC\"}.mdi-square-small:before{content:\"\\F0A15\"}.mdi-square-wave:before{content:\"\\F147B\"}.mdi-squeegee:before{content:\"\\F0AE1\"}.mdi-ssh:before{content:\"\\F08C0\"}.mdi-stack-exchange:before{content:\"\\F060B\"}.mdi-stack-overflow:before{content:\"\\F04CC\"}.mdi-stackpath:before{content:\"\\F0359\"}.mdi-stadium:before{content:\"\\F0FF9\"}.mdi-stadium-variant:before{content:\"\\F0720\"}.mdi-stairs:before{content:\"\\F04CD\"}.mdi-stairs-box:before{content:\"\\F139E\"}.mdi-stairs-down:before{content:\"\\F12BE\"}.mdi-stairs-up:before{content:\"\\F12BD\"}.mdi-stamper:before{content:\"\\F0D39\"}.mdi-standard-definition:before{content:\"\\F07EF\"}.mdi-star:before{content:\"\\F04CE\"}.mdi-star-box:before{content:\"\\F0A73\"}.mdi-star-box-multiple:before{content:\"\\F1286\"}.mdi-star-box-multiple-outline:before{content:\"\\F1287\"}.mdi-star-box-outline:before{content:\"\\F0A74\"}.mdi-star-check:before{content:\"\\F1566\"}.mdi-star-check-outline:before{content:\"\\F156A\"}.mdi-star-circle:before{content:\"\\F04CF\"}.mdi-star-circle-outline:before{content:\"\\F09A4\"}.mdi-star-cog:before{content:\"\\F1668\"}.mdi-star-cog-outline:before{content:\"\\F1669\"}.mdi-star-face:before{content:\"\\F09A5\"}.mdi-star-four-points:before{content:\"\\F0AE2\"}.mdi-star-four-points-outline:before{content:\"\\F0AE3\"}.mdi-star-half:before{content:\"\\F0246\"}.mdi-star-half-full:before{content:\"\\F04D0\"}.mdi-star-minus:before{content:\"\\F1564\"}.mdi-star-minus-outline:before{content:\"\\F1568\"}.mdi-star-off:before{content:\"\\F04D1\"}.mdi-star-off-outline:before{content:\"\\F155B\"}.mdi-star-outline:before{content:\"\\F04D2\"}.mdi-star-plus:before{content:\"\\F1563\"}.mdi-star-plus-outline:before{content:\"\\F1567\"}.mdi-star-remove:before{content:\"\\F1565\"}.mdi-star-remove-outline:before{content:\"\\F1569\"}.mdi-star-settings:before{content:\"\\F166A\"}.mdi-star-settings-outline:before{content:\"\\F166B\"}.mdi-star-three-points:before{content:\"\\F0AE4\"}.mdi-star-three-points-outline:before{content:\"\\F0AE5\"}.mdi-state-machine:before{content:\"\\F11EF\"}.mdi-steam:before{content:\"\\F04D3\"}.mdi-steering:before{content:\"\\F04D4\"}.mdi-steering-off:before{content:\"\\F090E\"}.mdi-step-backward:before{content:\"\\F04D5\"}.mdi-step-backward-2:before{content:\"\\F04D6\"}.mdi-step-forward:before{content:\"\\F04D7\"}.mdi-step-forward-2:before{content:\"\\F04D8\"}.mdi-stethoscope:before{content:\"\\F04D9\"}.mdi-sticker:before{content:\"\\F1364\"}.mdi-sticker-alert:before{content:\"\\F1365\"}.mdi-sticker-alert-outline:before{content:\"\\F1366\"}.mdi-sticker-check:before{content:\"\\F1367\"}.mdi-sticker-check-outline:before{content:\"\\F1368\"}.mdi-sticker-circle-outline:before{content:\"\\F05D0\"}.mdi-sticker-emoji:before{content:\"\\F0785\"}.mdi-sticker-minus:before{content:\"\\F1369\"}.mdi-sticker-minus-outline:before{content:\"\\F136A\"}.mdi-sticker-outline:before{content:\"\\F136B\"}.mdi-sticker-plus:before{content:\"\\F136C\"}.mdi-sticker-plus-outline:before{content:\"\\F136D\"}.mdi-sticker-remove:before{content:\"\\F136E\"}.mdi-sticker-remove-outline:before{content:\"\\F136F\"}.mdi-stocking:before{content:\"\\F04DA\"}.mdi-stomach:before{content:\"\\F1093\"}.mdi-stop:before{content:\"\\F04DB\"}.mdi-stop-circle:before{content:\"\\F0666\"}.mdi-stop-circle-outline:before{content:\"\\F0667\"}.mdi-store:before{content:\"\\F04DC\"}.mdi-store-24-hour:before{content:\"\\F04DD\"}.mdi-store-minus:before{content:\"\\F165E\"}.mdi-store-outline:before{content:\"\\F1361\"}.mdi-store-plus:before{content:\"\\F165F\"}.mdi-store-remove:before{content:\"\\F1660\"}.mdi-storefront:before{content:\"\\F07C7\"}.mdi-storefront-outline:before{content:\"\\F10C1\"}.mdi-stove:before{content:\"\\F04DE\"}.mdi-strategy:before{content:\"\\F11D6\"}.mdi-stretch-to-page:before{content:\"\\F0F2B\"}.mdi-stretch-to-page-outline:before{content:\"\\F0F2C\"}.mdi-string-lights:before{content:\"\\F12BA\"}.mdi-string-lights-off:before{content:\"\\F12BB\"}.mdi-subdirectory-arrow-left:before{content:\"\\F060C\"}.mdi-subdirectory-arrow-right:before{content:\"\\F060D\"}.mdi-submarine:before{content:\"\\F156C\"}.mdi-subtitles:before{content:\"\\F0A16\"}.mdi-subtitles-outline:before{content:\"\\F0A17\"}.mdi-subway:before{content:\"\\F06AC\"}.mdi-subway-alert-variant:before{content:\"\\F0D9D\"}.mdi-subway-variant:before{content:\"\\F04DF\"}.mdi-summit:before{content:\"\\F0786\"}.mdi-sunglasses:before{content:\"\\F04E0\"}.mdi-surround-sound:before{content:\"\\F05C5\"}.mdi-surround-sound-2-0:before{content:\"\\F07F0\"}.mdi-surround-sound-3-1:before{content:\"\\F07F1\"}.mdi-surround-sound-5-1:before{content:\"\\F07F2\"}.mdi-surround-sound-7-1:before{content:\"\\F07F3\"}.mdi-svg:before{content:\"\\F0721\"}.mdi-swap-horizontal:before{content:\"\\F04E1\"}.mdi-swap-horizontal-bold:before{content:\"\\F0BCD\"}.mdi-swap-horizontal-circle:before{content:\"\\F0FE1\"}.mdi-swap-horizontal-circle-outline:before{content:\"\\F0FE2\"}.mdi-swap-horizontal-variant:before{content:\"\\F08C1\"}.mdi-swap-vertical:before{content:\"\\F04E2\"}.mdi-swap-vertical-bold:before{content:\"\\F0BCE\"}.mdi-swap-vertical-circle:before{content:\"\\F0FE3\"}.mdi-swap-vertical-circle-outline:before{content:\"\\F0FE4\"}.mdi-swap-vertical-variant:before{content:\"\\F08C2\"}.mdi-swim:before{content:\"\\F04E3\"}.mdi-switch:before{content:\"\\F04E4\"}.mdi-sword:before{content:\"\\F04E5\"}.mdi-sword-cross:before{content:\"\\F0787\"}.mdi-syllabary-hangul:before{content:\"\\F1333\"}.mdi-syllabary-hiragana:before{content:\"\\F1334\"}.mdi-syllabary-katakana:before{content:\"\\F1335\"}.mdi-syllabary-katakana-halfwidth:before{content:\"\\F1336\"}.mdi-symbol:before{content:\"\\F1501\"}.mdi-symfony:before{content:\"\\F0AE6\"}.mdi-sync:before{content:\"\\F04E6\"}.mdi-sync-alert:before{content:\"\\F04E7\"}.mdi-sync-circle:before{content:\"\\F1378\"}.mdi-sync-off:before{content:\"\\F04E8\"}.mdi-tab:before{content:\"\\F04E9\"}.mdi-tab-minus:before{content:\"\\F0B4B\"}.mdi-tab-plus:before{content:\"\\F075C\"}.mdi-tab-remove:before{content:\"\\F0B4C\"}.mdi-tab-unselected:before{content:\"\\F04EA\"}.mdi-table:before{content:\"\\F04EB\"}.mdi-table-account:before{content:\"\\F13B9\"}.mdi-table-alert:before{content:\"\\F13BA\"}.mdi-table-arrow-down:before{content:\"\\F13BB\"}.mdi-table-arrow-left:before{content:\"\\F13BC\"}.mdi-table-arrow-right:before{content:\"\\F13BD\"}.mdi-table-arrow-up:before{content:\"\\F13BE\"}.mdi-table-border:before{content:\"\\F0A18\"}.mdi-table-cancel:before{content:\"\\F13BF\"}.mdi-table-chair:before{content:\"\\F1061\"}.mdi-table-check:before{content:\"\\F13C0\"}.mdi-table-clock:before{content:\"\\F13C1\"}.mdi-table-cog:before{content:\"\\F13C2\"}.mdi-table-column:before{content:\"\\F0835\"}.mdi-table-column-plus-after:before{content:\"\\F04EC\"}.mdi-table-column-plus-before:before{content:\"\\F04ED\"}.mdi-table-column-remove:before{content:\"\\F04EE\"}.mdi-table-column-width:before{content:\"\\F04EF\"}.mdi-table-edit:before{content:\"\\F04F0\"}.mdi-table-eye:before{content:\"\\F1094\"}.mdi-table-eye-off:before{content:\"\\F13C3\"}.mdi-table-furniture:before{content:\"\\F05BC\"}.mdi-table-headers-eye:before{content:\"\\F121D\"}.mdi-table-headers-eye-off:before{content:\"\\F121E\"}.mdi-table-heart:before{content:\"\\F13C4\"}.mdi-table-key:before{content:\"\\F13C5\"}.mdi-table-large:before{content:\"\\F04F1\"}.mdi-table-large-plus:before{content:\"\\F0F87\"}.mdi-table-large-remove:before{content:\"\\F0F88\"}.mdi-table-lock:before{content:\"\\F13C6\"}.mdi-table-merge-cells:before{content:\"\\F09A6\"}.mdi-table-minus:before{content:\"\\F13C7\"}.mdi-table-multiple:before{content:\"\\F13C8\"}.mdi-table-network:before{content:\"\\F13C9\"}.mdi-table-of-contents:before{content:\"\\F0836\"}.mdi-table-off:before{content:\"\\F13CA\"}.mdi-table-plus:before{content:\"\\F0A75\"}.mdi-table-refresh:before{content:\"\\F13A0\"}.mdi-table-remove:before{content:\"\\F0A76\"}.mdi-table-row:before{content:\"\\F0837\"}.mdi-table-row-height:before{content:\"\\F04F2\"}.mdi-table-row-plus-after:before{content:\"\\F04F3\"}.mdi-table-row-plus-before:before{content:\"\\F04F4\"}.mdi-table-row-remove:before{content:\"\\F04F5\"}.mdi-table-search:before{content:\"\\F090F\"}.mdi-table-settings:before{content:\"\\F0838\"}.mdi-table-split-cell:before{content:\"\\F142A\"}.mdi-table-star:before{content:\"\\F13CB\"}.mdi-table-sync:before{content:\"\\F13A1\"}.mdi-table-tennis:before{content:\"\\F0E68\"}.mdi-tablet:before{content:\"\\F04F6\"}.mdi-tablet-android:before{content:\"\\F04F7\"}.mdi-tablet-cellphone:before{content:\"\\F09A7\"}.mdi-tablet-dashboard:before{content:\"\\F0ECE\"}.mdi-tablet-ipad:before{content:\"\\F04F8\"}.mdi-taco:before{content:\"\\F0762\"}.mdi-tag:before{content:\"\\F04F9\"}.mdi-tag-faces:before{content:\"\\F04FA\"}.mdi-tag-heart:before{content:\"\\F068B\"}.mdi-tag-heart-outline:before{content:\"\\F0BCF\"}.mdi-tag-minus:before{content:\"\\F0910\"}.mdi-tag-minus-outline:before{content:\"\\F121F\"}.mdi-tag-multiple:before{content:\"\\F04FB\"}.mdi-tag-multiple-outline:before{content:\"\\F12F7\"}.mdi-tag-off:before{content:\"\\F1220\"}.mdi-tag-off-outline:before{content:\"\\F1221\"}.mdi-tag-outline:before{content:\"\\F04FC\"}.mdi-tag-plus:before{content:\"\\F0722\"}.mdi-tag-plus-outline:before{content:\"\\F1222\"}.mdi-tag-remove:before{content:\"\\F0723\"}.mdi-tag-remove-outline:before{content:\"\\F1223\"}.mdi-tag-text:before{content:\"\\F1224\"}.mdi-tag-text-outline:before{content:\"\\F04FD\"}.mdi-tailwind:before{content:\"\\F13FF\"}.mdi-tank:before{content:\"\\F0D3A\"}.mdi-tanker-truck:before{content:\"\\F0FE5\"}.mdi-tape-drive:before{content:\"\\F16DF\"}.mdi-tape-measure:before{content:\"\\F0B4D\"}.mdi-target:before{content:\"\\F04FE\"}.mdi-target-account:before{content:\"\\F0BD0\"}.mdi-target-variant:before{content:\"\\F0A77\"}.mdi-taxi:before{content:\"\\F04FF\"}.mdi-tea:before{content:\"\\F0D9E\"}.mdi-tea-outline:before{content:\"\\F0D9F\"}.mdi-teach:before{content:\"\\F0890\"}.mdi-teamviewer:before{content:\"\\F0500\"}.mdi-telegram:before{content:\"\\F0501\"}.mdi-telescope:before{content:\"\\F0B4E\"}.mdi-television:before{content:\"\\F0502\"}.mdi-television-ambient-light:before{content:\"\\F1356\"}.mdi-television-box:before{content:\"\\F0839\"}.mdi-television-classic:before{content:\"\\F07F4\"}.mdi-television-classic-off:before{content:\"\\F083A\"}.mdi-television-clean:before{content:\"\\F1110\"}.mdi-television-guide:before{content:\"\\F0503\"}.mdi-television-off:before{content:\"\\F083B\"}.mdi-television-pause:before{content:\"\\F0F89\"}.mdi-television-play:before{content:\"\\F0ECF\"}.mdi-television-stop:before{content:\"\\F0F8A\"}.mdi-temperature-celsius:before{content:\"\\F0504\"}.mdi-temperature-fahrenheit:before{content:\"\\F0505\"}.mdi-temperature-kelvin:before{content:\"\\F0506\"}.mdi-tennis:before{content:\"\\F0DA0\"}.mdi-tennis-ball:before{content:\"\\F0507\"}.mdi-tent:before{content:\"\\F0508\"}.mdi-terraform:before{content:\"\\F1062\"}.mdi-terrain:before{content:\"\\F0509\"}.mdi-test-tube:before{content:\"\\F0668\"}.mdi-test-tube-empty:before{content:\"\\F0911\"}.mdi-test-tube-off:before{content:\"\\F0912\"}.mdi-text:before{content:\"\\F09A8\"}.mdi-text-account:before{content:\"\\F1570\"}.mdi-text-box:before{content:\"\\F021A\"}.mdi-text-box-check:before{content:\"\\F0EA6\"}.mdi-text-box-check-outline:before{content:\"\\F0EA7\"}.mdi-text-box-minus:before{content:\"\\F0EA8\"}.mdi-text-box-minus-outline:before{content:\"\\F0EA9\"}.mdi-text-box-multiple:before{content:\"\\F0AB7\"}.mdi-text-box-multiple-outline:before{content:\"\\F0AB8\"}.mdi-text-box-outline:before{content:\"\\F09ED\"}.mdi-text-box-plus:before{content:\"\\F0EAA\"}.mdi-text-box-plus-outline:before{content:\"\\F0EAB\"}.mdi-text-box-remove:before{content:\"\\F0EAC\"}.mdi-text-box-remove-outline:before{content:\"\\F0EAD\"}.mdi-text-box-search:before{content:\"\\F0EAE\"}.mdi-text-box-search-outline:before{content:\"\\F0EAF\"}.mdi-text-recognition:before{content:\"\\F113D\"}.mdi-text-search:before{content:\"\\F13B8\"}.mdi-text-shadow:before{content:\"\\F0669\"}.mdi-text-short:before{content:\"\\F09A9\"}.mdi-text-subject:before{content:\"\\F09AA\"}.mdi-text-to-speech:before{content:\"\\F050A\"}.mdi-text-to-speech-off:before{content:\"\\F050B\"}.mdi-texture:before{content:\"\\F050C\"}.mdi-texture-box:before{content:\"\\F0FE6\"}.mdi-theater:before{content:\"\\F050D\"}.mdi-theme-light-dark:before{content:\"\\F050E\"}.mdi-thermometer:before{content:\"\\F050F\"}.mdi-thermometer-alert:before{content:\"\\F0E01\"}.mdi-thermometer-chevron-down:before{content:\"\\F0E02\"}.mdi-thermometer-chevron-up:before{content:\"\\F0E03\"}.mdi-thermometer-high:before{content:\"\\F10C2\"}.mdi-thermometer-lines:before{content:\"\\F0510\"}.mdi-thermometer-low:before{content:\"\\F10C3\"}.mdi-thermometer-minus:before{content:\"\\F0E04\"}.mdi-thermometer-off:before{content:\"\\F1531\"}.mdi-thermometer-plus:before{content:\"\\F0E05\"}.mdi-thermostat:before{content:\"\\F0393\"}.mdi-thermostat-box:before{content:\"\\F0891\"}.mdi-thought-bubble:before{content:\"\\F07F6\"}.mdi-thought-bubble-outline:before{content:\"\\F07F7\"}.mdi-thumb-down:before{content:\"\\F0511\"}.mdi-thumb-down-outline:before{content:\"\\F0512\"}.mdi-thumb-up:before{content:\"\\F0513\"}.mdi-thumb-up-outline:before{content:\"\\F0514\"}.mdi-thumbs-up-down:before{content:\"\\F0515\"}.mdi-ticket:before{content:\"\\F0516\"}.mdi-ticket-account:before{content:\"\\F0517\"}.mdi-ticket-confirmation:before{content:\"\\F0518\"}.mdi-ticket-confirmation-outline:before{content:\"\\F13AA\"}.mdi-ticket-outline:before{content:\"\\F0913\"}.mdi-ticket-percent:before{content:\"\\F0724\"}.mdi-ticket-percent-outline:before{content:\"\\F142B\"}.mdi-tie:before{content:\"\\F0519\"}.mdi-tilde:before{content:\"\\F0725\"}.mdi-timelapse:before{content:\"\\F051A\"}.mdi-timeline:before{content:\"\\F0BD1\"}.mdi-timeline-alert:before{content:\"\\F0F95\"}.mdi-timeline-alert-outline:before{content:\"\\F0F98\"}.mdi-timeline-check:before{content:\"\\F1532\"}.mdi-timeline-check-outline:before{content:\"\\F1533\"}.mdi-timeline-clock:before{content:\"\\F11FB\"}.mdi-timeline-clock-outline:before{content:\"\\F11FC\"}.mdi-timeline-help:before{content:\"\\F0F99\"}.mdi-timeline-help-outline:before{content:\"\\F0F9A\"}.mdi-timeline-minus:before{content:\"\\F1534\"}.mdi-timeline-minus-outline:before{content:\"\\F1535\"}.mdi-timeline-outline:before{content:\"\\F0BD2\"}.mdi-timeline-plus:before{content:\"\\F0F96\"}.mdi-timeline-plus-outline:before{content:\"\\F0F97\"}.mdi-timeline-remove:before{content:\"\\F1536\"}.mdi-timeline-remove-outline:before{content:\"\\F1537\"}.mdi-timeline-text:before{content:\"\\F0BD3\"}.mdi-timeline-text-outline:before{content:\"\\F0BD4\"}.mdi-timer:before{content:\"\\F13AB\"}.mdi-timer-10:before{content:\"\\F051C\"}.mdi-timer-3:before{content:\"\\F051D\"}.mdi-timer-off:before{content:\"\\F13AC\"}.mdi-timer-off-outline:before{content:\"\\F051E\"}.mdi-timer-outline:before{content:\"\\F051B\"}.mdi-timer-sand:before{content:\"\\F051F\"}.mdi-timer-sand-empty:before{content:\"\\F06AD\"}.mdi-timer-sand-full:before{content:\"\\F078C\"}.mdi-timetable:before{content:\"\\F0520\"}.mdi-toaster:before{content:\"\\F1063\"}.mdi-toaster-off:before{content:\"\\F11B7\"}.mdi-toaster-oven:before{content:\"\\F0CD3\"}.mdi-toggle-switch:before{content:\"\\F0521\"}.mdi-toggle-switch-off:before{content:\"\\F0522\"}.mdi-toggle-switch-off-outline:before{content:\"\\F0A19\"}.mdi-toggle-switch-outline:before{content:\"\\F0A1A\"}.mdi-toilet:before{content:\"\\F09AB\"}.mdi-toolbox:before{content:\"\\F09AC\"}.mdi-toolbox-outline:before{content:\"\\F09AD\"}.mdi-tools:before{content:\"\\F1064\"}.mdi-tooltip:before{content:\"\\F0523\"}.mdi-tooltip-account:before{content:\"\\F000C\"}.mdi-tooltip-check:before{content:\"\\F155C\"}.mdi-tooltip-check-outline:before{content:\"\\F155D\"}.mdi-tooltip-edit:before{content:\"\\F0524\"}.mdi-tooltip-edit-outline:before{content:\"\\F12C5\"}.mdi-tooltip-image:before{content:\"\\F0525\"}.mdi-tooltip-image-outline:before{content:\"\\F0BD5\"}.mdi-tooltip-minus:before{content:\"\\F155E\"}.mdi-tooltip-minus-outline:before{content:\"\\F155F\"}.mdi-tooltip-outline:before{content:\"\\F0526\"}.mdi-tooltip-plus:before{content:\"\\F0BD6\"}.mdi-tooltip-plus-outline:before{content:\"\\F0527\"}.mdi-tooltip-remove:before{content:\"\\F1560\"}.mdi-tooltip-remove-outline:before{content:\"\\F1561\"}.mdi-tooltip-text:before{content:\"\\F0528\"}.mdi-tooltip-text-outline:before{content:\"\\F0BD7\"}.mdi-tooth:before{content:\"\\F08C3\"}.mdi-tooth-outline:before{content:\"\\F0529\"}.mdi-toothbrush:before{content:\"\\F1129\"}.mdi-toothbrush-electric:before{content:\"\\F112C\"}.mdi-toothbrush-paste:before{content:\"\\F112A\"}.mdi-torch:before{content:\"\\F1606\"}.mdi-tortoise:before{content:\"\\F0D3B\"}.mdi-toslink:before{content:\"\\F12B8\"}.mdi-tournament:before{content:\"\\F09AE\"}.mdi-tow-truck:before{content:\"\\F083C\"}.mdi-tower-beach:before{content:\"\\F0681\"}.mdi-tower-fire:before{content:\"\\F0682\"}.mdi-toy-brick:before{content:\"\\F1288\"}.mdi-toy-brick-marker:before{content:\"\\F1289\"}.mdi-toy-brick-marker-outline:before{content:\"\\F128A\"}.mdi-toy-brick-minus:before{content:\"\\F128B\"}.mdi-toy-brick-minus-outline:before{content:\"\\F128C\"}.mdi-toy-brick-outline:before{content:\"\\F128D\"}.mdi-toy-brick-plus:before{content:\"\\F128E\"}.mdi-toy-brick-plus-outline:before{content:\"\\F128F\"}.mdi-toy-brick-remove:before{content:\"\\F1290\"}.mdi-toy-brick-remove-outline:before{content:\"\\F1291\"}.mdi-toy-brick-search:before{content:\"\\F1292\"}.mdi-toy-brick-search-outline:before{content:\"\\F1293\"}.mdi-track-light:before{content:\"\\F0914\"}.mdi-trackpad:before{content:\"\\F07F8\"}.mdi-trackpad-lock:before{content:\"\\F0933\"}.mdi-tractor:before{content:\"\\F0892\"}.mdi-tractor-variant:before{content:\"\\F14C4\"}.mdi-trademark:before{content:\"\\F0A78\"}.mdi-traffic-cone:before{content:\"\\F137C\"}.mdi-traffic-light:before{content:\"\\F052B\"}.mdi-train:before{content:\"\\F052C\"}.mdi-train-car:before{content:\"\\F0BD8\"}.mdi-train-variant:before{content:\"\\F08C4\"}.mdi-tram:before{content:\"\\F052D\"}.mdi-tram-side:before{content:\"\\F0FE7\"}.mdi-transcribe:before{content:\"\\F052E\"}.mdi-transcribe-close:before{content:\"\\F052F\"}.mdi-transfer:before{content:\"\\F1065\"}.mdi-transfer-down:before{content:\"\\F0DA1\"}.mdi-transfer-left:before{content:\"\\F0DA2\"}.mdi-transfer-right:before{content:\"\\F0530\"}.mdi-transfer-up:before{content:\"\\F0DA3\"}.mdi-transit-connection:before{content:\"\\F0D3C\"}.mdi-transit-connection-horizontal:before{content:\"\\F1546\"}.mdi-transit-connection-variant:before{content:\"\\F0D3D\"}.mdi-transit-detour:before{content:\"\\F0F8B\"}.mdi-transit-skip:before{content:\"\\F1515\"}.mdi-transit-transfer:before{content:\"\\F06AE\"}.mdi-transition:before{content:\"\\F0915\"}.mdi-transition-masked:before{content:\"\\F0916\"}.mdi-translate:before{content:\"\\F05CA\"}.mdi-translate-off:before{content:\"\\F0E06\"}.mdi-transmission-tower:before{content:\"\\F0D3E\"}.mdi-trash-can:before{content:\"\\F0A79\"}.mdi-trash-can-outline:before{content:\"\\F0A7A\"}.mdi-tray:before{content:\"\\F1294\"}.mdi-tray-alert:before{content:\"\\F1295\"}.mdi-tray-full:before{content:\"\\F1296\"}.mdi-tray-minus:before{content:\"\\F1297\"}.mdi-tray-plus:before{content:\"\\F1298\"}.mdi-tray-remove:before{content:\"\\F1299\"}.mdi-treasure-chest:before{content:\"\\F0726\"}.mdi-tree:before{content:\"\\F0531\"}.mdi-tree-outline:before{content:\"\\F0E69\"}.mdi-trello:before{content:\"\\F0532\"}.mdi-trending-down:before{content:\"\\F0533\"}.mdi-trending-neutral:before{content:\"\\F0534\"}.mdi-trending-up:before{content:\"\\F0535\"}.mdi-triangle:before{content:\"\\F0536\"}.mdi-triangle-outline:before{content:\"\\F0537\"}.mdi-triangle-wave:before{content:\"\\F147C\"}.mdi-triforce:before{content:\"\\F0BD9\"}.mdi-trophy:before{content:\"\\F0538\"}.mdi-trophy-award:before{content:\"\\F0539\"}.mdi-trophy-broken:before{content:\"\\F0DA4\"}.mdi-trophy-outline:before{content:\"\\F053A\"}.mdi-trophy-variant:before{content:\"\\F053B\"}.mdi-trophy-variant-outline:before{content:\"\\F053C\"}.mdi-truck:before{content:\"\\F053D\"}.mdi-truck-check:before{content:\"\\F0CD4\"}.mdi-truck-check-outline:before{content:\"\\F129A\"}.mdi-truck-delivery:before{content:\"\\F053E\"}.mdi-truck-delivery-outline:before{content:\"\\F129B\"}.mdi-truck-fast:before{content:\"\\F0788\"}.mdi-truck-fast-outline:before{content:\"\\F129C\"}.mdi-truck-outline:before{content:\"\\F129D\"}.mdi-truck-trailer:before{content:\"\\F0727\"}.mdi-trumpet:before{content:\"\\F1096\"}.mdi-tshirt-crew:before{content:\"\\F0A7B\"}.mdi-tshirt-crew-outline:before{content:\"\\F053F\"}.mdi-tshirt-v:before{content:\"\\F0A7C\"}.mdi-tshirt-v-outline:before{content:\"\\F0540\"}.mdi-tumble-dryer:before{content:\"\\F0917\"}.mdi-tumble-dryer-alert:before{content:\"\\F11BA\"}.mdi-tumble-dryer-off:before{content:\"\\F11BB\"}.mdi-tune:before{content:\"\\F062E\"}.mdi-tune-variant:before{content:\"\\F1542\"}.mdi-tune-vertical:before{content:\"\\F066A\"}.mdi-tune-vertical-variant:before{content:\"\\F1543\"}.mdi-turnstile:before{content:\"\\F0CD5\"}.mdi-turnstile-outline:before{content:\"\\F0CD6\"}.mdi-turtle:before{content:\"\\F0CD7\"}.mdi-twitch:before{content:\"\\F0543\"}.mdi-twitter:before{content:\"\\F0544\"}.mdi-twitter-retweet:before{content:\"\\F0547\"}.mdi-two-factor-authentication:before{content:\"\\F09AF\"}.mdi-typewriter:before{content:\"\\F0F2D\"}.mdi-ubisoft:before{content:\"\\F0BDA\"}.mdi-ubuntu:before{content:\"\\F0548\"}.mdi-ufo:before{content:\"\\F10C4\"}.mdi-ufo-outline:before{content:\"\\F10C5\"}.mdi-ultra-high-definition:before{content:\"\\F07F9\"}.mdi-umbraco:before{content:\"\\F0549\"}.mdi-umbrella:before{content:\"\\F054A\"}.mdi-umbrella-closed:before{content:\"\\F09B0\"}.mdi-umbrella-closed-outline:before{content:\"\\F13E2\"}.mdi-umbrella-closed-variant:before{content:\"\\F13E1\"}.mdi-umbrella-outline:before{content:\"\\F054B\"}.mdi-undo:before{content:\"\\F054C\"}.mdi-undo-variant:before{content:\"\\F054D\"}.mdi-unfold-less-horizontal:before{content:\"\\F054E\"}.mdi-unfold-less-vertical:before{content:\"\\F0760\"}.mdi-unfold-more-horizontal:before{content:\"\\F054F\"}.mdi-unfold-more-vertical:before{content:\"\\F0761\"}.mdi-ungroup:before{content:\"\\F0550\"}.mdi-unicode:before{content:\"\\F0ED0\"}.mdi-unicorn:before{content:\"\\F15C2\"}.mdi-unicorn-variant:before{content:\"\\F15C3\"}.mdi-unicycle:before{content:\"\\F15E5\"}.mdi-unity:before{content:\"\\F06AF\"}.mdi-unreal:before{content:\"\\F09B1\"}.mdi-untappd:before{content:\"\\F0551\"}.mdi-update:before{content:\"\\F06B0\"}.mdi-upload:before{content:\"\\F0552\"}.mdi-upload-lock:before{content:\"\\F1373\"}.mdi-upload-lock-outline:before{content:\"\\F1374\"}.mdi-upload-multiple:before{content:\"\\F083D\"}.mdi-upload-network:before{content:\"\\F06F6\"}.mdi-upload-network-outline:before{content:\"\\F0CD8\"}.mdi-upload-off:before{content:\"\\F10C6\"}.mdi-upload-off-outline:before{content:\"\\F10C7\"}.mdi-upload-outline:before{content:\"\\F0E07\"}.mdi-usb:before{content:\"\\F0553\"}.mdi-usb-flash-drive:before{content:\"\\F129E\"}.mdi-usb-flash-drive-outline:before{content:\"\\F129F\"}.mdi-usb-port:before{content:\"\\F11F0\"}.mdi-valve:before{content:\"\\F1066\"}.mdi-valve-closed:before{content:\"\\F1067\"}.mdi-valve-open:before{content:\"\\F1068\"}.mdi-van-passenger:before{content:\"\\F07FA\"}.mdi-van-utility:before{content:\"\\F07FB\"}.mdi-vanish:before{content:\"\\F07FC\"}.mdi-vanish-quarter:before{content:\"\\F1554\"}.mdi-vanity-light:before{content:\"\\F11E1\"}.mdi-variable:before{content:\"\\F0AE7\"}.mdi-variable-box:before{content:\"\\F1111\"}.mdi-vector-arrange-above:before{content:\"\\F0554\"}.mdi-vector-arrange-below:before{content:\"\\F0555\"}.mdi-vector-bezier:before{content:\"\\F0AE8\"}.mdi-vector-circle:before{content:\"\\F0556\"}.mdi-vector-circle-variant:before{content:\"\\F0557\"}.mdi-vector-combine:before{content:\"\\F0558\"}.mdi-vector-curve:before{content:\"\\F0559\"}.mdi-vector-difference:before{content:\"\\F055A\"}.mdi-vector-difference-ab:before{content:\"\\F055B\"}.mdi-vector-difference-ba:before{content:\"\\F055C\"}.mdi-vector-ellipse:before{content:\"\\F0893\"}.mdi-vector-intersection:before{content:\"\\F055D\"}.mdi-vector-line:before{content:\"\\F055E\"}.mdi-vector-link:before{content:\"\\F0FE8\"}.mdi-vector-point:before{content:\"\\F055F\"}.mdi-vector-polygon:before{content:\"\\F0560\"}.mdi-vector-polyline:before{content:\"\\F0561\"}.mdi-vector-polyline-edit:before{content:\"\\F1225\"}.mdi-vector-polyline-minus:before{content:\"\\F1226\"}.mdi-vector-polyline-plus:before{content:\"\\F1227\"}.mdi-vector-polyline-remove:before{content:\"\\F1228\"}.mdi-vector-radius:before{content:\"\\F074A\"}.mdi-vector-rectangle:before{content:\"\\F05C6\"}.mdi-vector-selection:before{content:\"\\F0562\"}.mdi-vector-square:before{content:\"\\F0001\"}.mdi-vector-triangle:before{content:\"\\F0563\"}.mdi-vector-union:before{content:\"\\F0564\"}.mdi-vhs:before{content:\"\\F0A1B\"}.mdi-vibrate:before{content:\"\\F0566\"}.mdi-vibrate-off:before{content:\"\\F0CD9\"}.mdi-video:before{content:\"\\F0567\"}.mdi-video-3d:before{content:\"\\F07FD\"}.mdi-video-3d-off:before{content:\"\\F13D9\"}.mdi-video-3d-variant:before{content:\"\\F0ED1\"}.mdi-video-4k-box:before{content:\"\\F083E\"}.mdi-video-account:before{content:\"\\F0919\"}.mdi-video-box:before{content:\"\\F00FD\"}.mdi-video-box-off:before{content:\"\\F00FE\"}.mdi-video-check:before{content:\"\\F1069\"}.mdi-video-check-outline:before{content:\"\\F106A\"}.mdi-video-high-definition:before{content:\"\\F152E\"}.mdi-video-image:before{content:\"\\F091A\"}.mdi-video-input-antenna:before{content:\"\\F083F\"}.mdi-video-input-component:before{content:\"\\F0840\"}.mdi-video-input-hdmi:before{content:\"\\F0841\"}.mdi-video-input-scart:before{content:\"\\F0F8C\"}.mdi-video-input-svideo:before{content:\"\\F0842\"}.mdi-video-minus:before{content:\"\\F09B2\"}.mdi-video-minus-outline:before{content:\"\\F02BA\"}.mdi-video-off:before{content:\"\\F0568\"}.mdi-video-off-outline:before{content:\"\\F0BDB\"}.mdi-video-outline:before{content:\"\\F0BDC\"}.mdi-video-plus:before{content:\"\\F09B3\"}.mdi-video-plus-outline:before{content:\"\\F01D3\"}.mdi-video-stabilization:before{content:\"\\F091B\"}.mdi-video-switch:before{content:\"\\F0569\"}.mdi-video-switch-outline:before{content:\"\\F0790\"}.mdi-video-vintage:before{content:\"\\F0A1C\"}.mdi-video-wireless:before{content:\"\\F0ED2\"}.mdi-video-wireless-outline:before{content:\"\\F0ED3\"}.mdi-view-agenda:before{content:\"\\F056A\"}.mdi-view-agenda-outline:before{content:\"\\F11D8\"}.mdi-view-array:before{content:\"\\F056B\"}.mdi-view-array-outline:before{content:\"\\F1485\"}.mdi-view-carousel:before{content:\"\\F056C\"}.mdi-view-carousel-outline:before{content:\"\\F1486\"}.mdi-view-column:before{content:\"\\F056D\"}.mdi-view-column-outline:before{content:\"\\F1487\"}.mdi-view-comfy:before{content:\"\\F0E6A\"}.mdi-view-comfy-outline:before{content:\"\\F1488\"}.mdi-view-compact:before{content:\"\\F0E6B\"}.mdi-view-compact-outline:before{content:\"\\F0E6C\"}.mdi-view-dashboard:before{content:\"\\F056E\"}.mdi-view-dashboard-outline:before{content:\"\\F0A1D\"}.mdi-view-dashboard-variant:before{content:\"\\F0843\"}.mdi-view-dashboard-variant-outline:before{content:\"\\F1489\"}.mdi-view-day:before{content:\"\\F056F\"}.mdi-view-day-outline:before{content:\"\\F148A\"}.mdi-view-grid:before{content:\"\\F0570\"}.mdi-view-grid-outline:before{content:\"\\F11D9\"}.mdi-view-grid-plus:before{content:\"\\F0F8D\"}.mdi-view-grid-plus-outline:before{content:\"\\F11DA\"}.mdi-view-headline:before{content:\"\\F0571\"}.mdi-view-list:before{content:\"\\F0572\"}.mdi-view-list-outline:before{content:\"\\F148B\"}.mdi-view-module:before{content:\"\\F0573\"}.mdi-view-module-outline:before{content:\"\\F148C\"}.mdi-view-parallel:before{content:\"\\F0728\"}.mdi-view-parallel-outline:before{content:\"\\F148D\"}.mdi-view-quilt:before{content:\"\\F0574\"}.mdi-view-quilt-outline:before{content:\"\\F148E\"}.mdi-view-sequential:before{content:\"\\F0729\"}.mdi-view-sequential-outline:before{content:\"\\F148F\"}.mdi-view-split-horizontal:before{content:\"\\F0BCB\"}.mdi-view-split-vertical:before{content:\"\\F0BCC\"}.mdi-view-stream:before{content:\"\\F0575\"}.mdi-view-stream-outline:before{content:\"\\F1490\"}.mdi-view-week:before{content:\"\\F0576\"}.mdi-view-week-outline:before{content:\"\\F1491\"}.mdi-vimeo:before{content:\"\\F0577\"}.mdi-violin:before{content:\"\\F060F\"}.mdi-virtual-reality:before{content:\"\\F0894\"}.mdi-virus:before{content:\"\\F13B6\"}.mdi-virus-outline:before{content:\"\\F13B7\"}.mdi-vk:before{content:\"\\F0579\"}.mdi-vlc:before{content:\"\\F057C\"}.mdi-voice-off:before{content:\"\\F0ED4\"}.mdi-voicemail:before{content:\"\\F057D\"}.mdi-volleyball:before{content:\"\\F09B4\"}.mdi-volume-high:before{content:\"\\F057E\"}.mdi-volume-low:before{content:\"\\F057F\"}.mdi-volume-medium:before{content:\"\\F0580\"}.mdi-volume-minus:before{content:\"\\F075E\"}.mdi-volume-mute:before{content:\"\\F075F\"}.mdi-volume-off:before{content:\"\\F0581\"}.mdi-volume-plus:before{content:\"\\F075D\"}.mdi-volume-source:before{content:\"\\F1120\"}.mdi-volume-variant-off:before{content:\"\\F0E08\"}.mdi-volume-vibrate:before{content:\"\\F1121\"}.mdi-vote:before{content:\"\\F0A1F\"}.mdi-vote-outline:before{content:\"\\F0A20\"}.mdi-vpn:before{content:\"\\F0582\"}.mdi-vuejs:before{content:\"\\F0844\"}.mdi-vuetify:before{content:\"\\F0E6D\"}.mdi-walk:before{content:\"\\F0583\"}.mdi-wall:before{content:\"\\F07FE\"}.mdi-wall-sconce:before{content:\"\\F091C\"}.mdi-wall-sconce-flat:before{content:\"\\F091D\"}.mdi-wall-sconce-flat-variant:before{content:\"\\F041C\"}.mdi-wall-sconce-round:before{content:\"\\F0748\"}.mdi-wall-sconce-round-variant:before{content:\"\\F091E\"}.mdi-wallet:before{content:\"\\F0584\"}.mdi-wallet-giftcard:before{content:\"\\F0585\"}.mdi-wallet-membership:before{content:\"\\F0586\"}.mdi-wallet-outline:before{content:\"\\F0BDD\"}.mdi-wallet-plus:before{content:\"\\F0F8E\"}.mdi-wallet-plus-outline:before{content:\"\\F0F8F\"}.mdi-wallet-travel:before{content:\"\\F0587\"}.mdi-wallpaper:before{content:\"\\F0E09\"}.mdi-wan:before{content:\"\\F0588\"}.mdi-wardrobe:before{content:\"\\F0F90\"}.mdi-wardrobe-outline:before{content:\"\\F0F91\"}.mdi-warehouse:before{content:\"\\F0F81\"}.mdi-washing-machine:before{content:\"\\F072A\"}.mdi-washing-machine-alert:before{content:\"\\F11BC\"}.mdi-washing-machine-off:before{content:\"\\F11BD\"}.mdi-watch:before{content:\"\\F0589\"}.mdi-watch-export:before{content:\"\\F058A\"}.mdi-watch-export-variant:before{content:\"\\F0895\"}.mdi-watch-import:before{content:\"\\F058B\"}.mdi-watch-import-variant:before{content:\"\\F0896\"}.mdi-watch-variant:before{content:\"\\F0897\"}.mdi-watch-vibrate:before{content:\"\\F06B1\"}.mdi-watch-vibrate-off:before{content:\"\\F0CDA\"}.mdi-water:before{content:\"\\F058C\"}.mdi-water-alert:before{content:\"\\F1502\"}.mdi-water-alert-outline:before{content:\"\\F1503\"}.mdi-water-boiler:before{content:\"\\F0F92\"}.mdi-water-boiler-alert:before{content:\"\\F11B3\"}.mdi-water-boiler-off:before{content:\"\\F11B4\"}.mdi-water-check:before{content:\"\\F1504\"}.mdi-water-check-outline:before{content:\"\\F1505\"}.mdi-water-minus:before{content:\"\\F1506\"}.mdi-water-minus-outline:before{content:\"\\F1507\"}.mdi-water-off:before{content:\"\\F058D\"}.mdi-water-off-outline:before{content:\"\\F1508\"}.mdi-water-outline:before{content:\"\\F0E0A\"}.mdi-water-percent:before{content:\"\\F058E\"}.mdi-water-percent-alert:before{content:\"\\F1509\"}.mdi-water-plus:before{content:\"\\F150A\"}.mdi-water-plus-outline:before{content:\"\\F150B\"}.mdi-water-polo:before{content:\"\\F12A0\"}.mdi-water-pump:before{content:\"\\F058F\"}.mdi-water-pump-off:before{content:\"\\F0F93\"}.mdi-water-remove:before{content:\"\\F150C\"}.mdi-water-remove-outline:before{content:\"\\F150D\"}.mdi-water-well:before{content:\"\\F106B\"}.mdi-water-well-outline:before{content:\"\\F106C\"}.mdi-watering-can:before{content:\"\\F1481\"}.mdi-watering-can-outline:before{content:\"\\F1482\"}.mdi-watermark:before{content:\"\\F0612\"}.mdi-wave:before{content:\"\\F0F2E\"}.mdi-waveform:before{content:\"\\F147D\"}.mdi-waves:before{content:\"\\F078D\"}.mdi-waze:before{content:\"\\F0BDE\"}.mdi-weather-cloudy:before{content:\"\\F0590\"}.mdi-weather-cloudy-alert:before{content:\"\\F0F2F\"}.mdi-weather-cloudy-arrow-right:before{content:\"\\F0E6E\"}.mdi-weather-fog:before{content:\"\\F0591\"}.mdi-weather-hail:before{content:\"\\F0592\"}.mdi-weather-hazy:before{content:\"\\F0F30\"}.mdi-weather-hurricane:before{content:\"\\F0898\"}.mdi-weather-lightning:before{content:\"\\F0593\"}.mdi-weather-lightning-rainy:before{content:\"\\F067E\"}.mdi-weather-night:before{content:\"\\F0594\"}.mdi-weather-night-partly-cloudy:before{content:\"\\F0F31\"}.mdi-weather-partly-cloudy:before{content:\"\\F0595\"}.mdi-weather-partly-lightning:before{content:\"\\F0F32\"}.mdi-weather-partly-rainy:before{content:\"\\F0F33\"}.mdi-weather-partly-snowy:before{content:\"\\F0F34\"}.mdi-weather-partly-snowy-rainy:before{content:\"\\F0F35\"}.mdi-weather-pouring:before{content:\"\\F0596\"}.mdi-weather-rainy:before{content:\"\\F0597\"}.mdi-weather-snowy:before{content:\"\\F0598\"}.mdi-weather-snowy-heavy:before{content:\"\\F0F36\"}.mdi-weather-snowy-rainy:before{content:\"\\F067F\"}.mdi-weather-sunny:before{content:\"\\F0599\"}.mdi-weather-sunny-alert:before{content:\"\\F0F37\"}.mdi-weather-sunny-off:before{content:\"\\F14E4\"}.mdi-weather-sunset:before{content:\"\\F059A\"}.mdi-weather-sunset-down:before{content:\"\\F059B\"}.mdi-weather-sunset-up:before{content:\"\\F059C\"}.mdi-weather-tornado:before{content:\"\\F0F38\"}.mdi-weather-windy:before{content:\"\\F059D\"}.mdi-weather-windy-variant:before{content:\"\\F059E\"}.mdi-web:before{content:\"\\F059F\"}.mdi-web-box:before{content:\"\\F0F94\"}.mdi-web-clock:before{content:\"\\F124A\"}.mdi-webcam:before{content:\"\\F05A0\"}.mdi-webhook:before{content:\"\\F062F\"}.mdi-webpack:before{content:\"\\F072B\"}.mdi-webrtc:before{content:\"\\F1248\"}.mdi-wechat:before{content:\"\\F0611\"}.mdi-weight:before{content:\"\\F05A1\"}.mdi-weight-gram:before{content:\"\\F0D3F\"}.mdi-weight-kilogram:before{content:\"\\F05A2\"}.mdi-weight-lifter:before{content:\"\\F115D\"}.mdi-weight-pound:before{content:\"\\F09B5\"}.mdi-whatsapp:before{content:\"\\F05A3\"}.mdi-wheel-barrow:before{content:\"\\F14F2\"}.mdi-wheelchair-accessibility:before{content:\"\\F05A4\"}.mdi-whistle:before{content:\"\\F09B6\"}.mdi-whistle-outline:before{content:\"\\F12BC\"}.mdi-white-balance-auto:before{content:\"\\F05A5\"}.mdi-white-balance-incandescent:before{content:\"\\F05A6\"}.mdi-white-balance-iridescent:before{content:\"\\F05A7\"}.mdi-white-balance-sunny:before{content:\"\\F05A8\"}.mdi-widgets:before{content:\"\\F072C\"}.mdi-widgets-outline:before{content:\"\\F1355\"}.mdi-wifi:before{content:\"\\F05A9\"}.mdi-wifi-alert:before{content:\"\\F16B5\"}.mdi-wifi-arrow-down:before{content:\"\\F16B6\"}.mdi-wifi-arrow-left:before{content:\"\\F16B7\"}.mdi-wifi-arrow-left-right:before{content:\"\\F16B8\"}.mdi-wifi-arrow-right:before{content:\"\\F16B9\"}.mdi-wifi-arrow-up:before{content:\"\\F16BA\"}.mdi-wifi-arrow-up-down:before{content:\"\\F16BB\"}.mdi-wifi-cancel:before{content:\"\\F16BC\"}.mdi-wifi-check:before{content:\"\\F16BD\"}.mdi-wifi-cog:before{content:\"\\F16BE\"}.mdi-wifi-lock:before{content:\"\\F16BF\"}.mdi-wifi-lock-open:before{content:\"\\F16C0\"}.mdi-wifi-marker:before{content:\"\\F16C1\"}.mdi-wifi-minus:before{content:\"\\F16C2\"}.mdi-wifi-off:before{content:\"\\F05AA\"}.mdi-wifi-plus:before{content:\"\\F16C3\"}.mdi-wifi-refresh:before{content:\"\\F16C4\"}.mdi-wifi-remove:before{content:\"\\F16C5\"}.mdi-wifi-settings:before{content:\"\\F16C6\"}.mdi-wifi-star:before{content:\"\\F0E0B\"}.mdi-wifi-strength-1:before{content:\"\\F091F\"}.mdi-wifi-strength-1-alert:before{content:\"\\F0920\"}.mdi-wifi-strength-1-lock:before{content:\"\\F0921\"}.mdi-wifi-strength-1-lock-open:before{content:\"\\F16CB\"}.mdi-wifi-strength-2:before{content:\"\\F0922\"}.mdi-wifi-strength-2-alert:before{content:\"\\F0923\"}.mdi-wifi-strength-2-lock:before{content:\"\\F0924\"}.mdi-wifi-strength-2-lock-open:before{content:\"\\F16CC\"}.mdi-wifi-strength-3:before{content:\"\\F0925\"}.mdi-wifi-strength-3-alert:before{content:\"\\F0926\"}.mdi-wifi-strength-3-lock:before{content:\"\\F0927\"}.mdi-wifi-strength-3-lock-open:before{content:\"\\F16CD\"}.mdi-wifi-strength-4:before{content:\"\\F0928\"}.mdi-wifi-strength-4-alert:before{content:\"\\F0929\"}.mdi-wifi-strength-4-lock:before{content:\"\\F092A\"}.mdi-wifi-strength-4-lock-open:before{content:\"\\F16CE\"}.mdi-wifi-strength-alert-outline:before{content:\"\\F092B\"}.mdi-wifi-strength-lock-open-outline:before{content:\"\\F16CF\"}.mdi-wifi-strength-lock-outline:before{content:\"\\F092C\"}.mdi-wifi-strength-off:before{content:\"\\F092D\"}.mdi-wifi-strength-off-outline:before{content:\"\\F092E\"}.mdi-wifi-strength-outline:before{content:\"\\F092F\"}.mdi-wifi-sync:before{content:\"\\F16C7\"}.mdi-wikipedia:before{content:\"\\F05AC\"}.mdi-wind-turbine:before{content:\"\\F0DA5\"}.mdi-window-close:before{content:\"\\F05AD\"}.mdi-window-closed:before{content:\"\\F05AE\"}.mdi-window-closed-variant:before{content:\"\\F11DB\"}.mdi-window-maximize:before{content:\"\\F05AF\"}.mdi-window-minimize:before{content:\"\\F05B0\"}.mdi-window-open:before{content:\"\\F05B1\"}.mdi-window-open-variant:before{content:\"\\F11DC\"}.mdi-window-restore:before{content:\"\\F05B2\"}.mdi-window-shutter:before{content:\"\\F111C\"}.mdi-window-shutter-alert:before{content:\"\\F111D\"}.mdi-window-shutter-open:before{content:\"\\F111E\"}.mdi-windsock:before{content:\"\\F15FA\"}.mdi-wiper:before{content:\"\\F0AE9\"}.mdi-wiper-wash:before{content:\"\\F0DA6\"}.mdi-wizard-hat:before{content:\"\\F1477\"}.mdi-wordpress:before{content:\"\\F05B4\"}.mdi-wrap:before{content:\"\\F05B6\"}.mdi-wrap-disabled:before{content:\"\\F0BDF\"}.mdi-wrench:before{content:\"\\F05B7\"}.mdi-wrench-outline:before{content:\"\\F0BE0\"}.mdi-xamarin:before{content:\"\\F0845\"}.mdi-xamarin-outline:before{content:\"\\F0846\"}.mdi-xing:before{content:\"\\F05BE\"}.mdi-xml:before{content:\"\\F05C0\"}.mdi-xmpp:before{content:\"\\F07FF\"}.mdi-y-combinator:before{content:\"\\F0624\"}.mdi-yahoo:before{content:\"\\F0B4F\"}.mdi-yeast:before{content:\"\\F05C1\"}.mdi-yin-yang:before{content:\"\\F0680\"}.mdi-yoga:before{content:\"\\F117C\"}.mdi-youtube:before{content:\"\\F05C3\"}.mdi-youtube-gaming:before{content:\"\\F0848\"}.mdi-youtube-studio:before{content:\"\\F0847\"}.mdi-youtube-subscription:before{content:\"\\F0D40\"}.mdi-youtube-tv:before{content:\"\\F0448\"}.mdi-yurt:before{content:\"\\F1516\"}.mdi-z-wave:before{content:\"\\F0AEA\"}.mdi-zend:before{content:\"\\F0AEB\"}.mdi-zigbee:before{content:\"\\F0D41\"}.mdi-zip-box:before{content:\"\\F05C4\"}.mdi-zip-box-outline:before{content:\"\\F0FFA\"}.mdi-zip-disk:before{content:\"\\F0A23\"}.mdi-zodiac-aquarius:before{content:\"\\F0A7D\"}.mdi-zodiac-aries:before{content:\"\\F0A7E\"}.mdi-zodiac-cancer:before{content:\"\\F0A7F\"}.mdi-zodiac-capricorn:before{content:\"\\F0A80\"}.mdi-zodiac-gemini:before{content:\"\\F0A81\"}.mdi-zodiac-leo:before{content:\"\\F0A82\"}.mdi-zodiac-libra:before{content:\"\\F0A83\"}.mdi-zodiac-pisces:before{content:\"\\F0A84\"}.mdi-zodiac-sagittarius:before{content:\"\\F0A85\"}.mdi-zodiac-scorpio:before{content:\"\\F0A86\"}.mdi-zodiac-taurus:before{content:\"\\F0A87\"}.mdi-zodiac-virgo:before{content:\"\\F0A88\"}.mdi-blank:before{content:\"\\F68C\";visibility:hidden}.mdi-18px.mdi-set,.mdi-18px.mdi:before{font-size:18px}.mdi-24px.mdi-set,.mdi-24px.mdi:before{font-size:24px}.mdi-36px.mdi-set,.mdi-36px.mdi:before{font-size:36px}.mdi-48px.mdi-set,.mdi-48px.mdi:before{font-size:48px}.mdi-dark:before{color:rgba(0,0,0,.54)}.mdi-dark.mdi-inactive:before{color:rgba(0,0,0,.26)}.mdi-light:before{color:#fff}.mdi-light.mdi-inactive:before{color:hsla(0,0%,100%,.3)}.mdi-rotate-45:before{transform:rotate(45deg)}.mdi-rotate-90:before{transform:rotate(90deg)}.mdi-rotate-135:before{transform:rotate(135deg)}.mdi-rotate-180:before{transform:rotate(180deg)}.mdi-rotate-225:before{transform:rotate(225deg)}.mdi-rotate-270:before{transform:rotate(270deg)}.mdi-rotate-315:before{transform:rotate(315deg)}.mdi-flip-h:before{transform:scaleX(-1);filter:FlipH;-ms-filter:\"FlipH\"}.mdi-flip-v:before{transform:scaleY(-1);filter:FlipV;-ms-filter:\"FlipV\"}.mdi-spin:before{-webkit-animation:mdi-spin 2s linear infinite;animation:mdi-spin 2s linear infinite}@-webkit-keyframes mdi-spin{0%{transform:rotate(0deg)}to{transform:rotate(359deg)}}@keyframes mdi-spin{0%{transform:rotate(0deg)}to{transform:rotate(359deg)}}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "ecd6":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/materialdesignicons-webfont.4187121a.woff2";

/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "fae3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=template&id=5825fbb0&
var Appvue_type_template_id_5825fbb0_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"app"}},[_vm._v(" ljljlkjkljlkjljljljljljl ")])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/App.vue?vue&type=template&id=5825fbb0&

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.reflect.construct.js
var es_reflect_construct = __webpack_require__("4ae1");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__("3410");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js



function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("e260");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js







function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js




function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

// CONCATENATED MODULE: ./node_modules/vue-class-component/dist/vue-class-component.esm.js
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */


function vue_class_component_esm_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    vue_class_component_esm_typeof = function (obj) {
      return typeof obj;
    };
  } else {
    vue_class_component_esm_typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return vue_class_component_esm_typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
function reflectionIsSupported() {
  return typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
}
function copyReflectionMetadata(to, from) {
  forwardMetadata(to, from);
  Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
    forwardMetadata(to.prototype, from.prototype, key);
  });
  Object.getOwnPropertyNames(from).forEach(function (key) {
    forwardMetadata(to, from, key);
  });
}

function forwardMetadata(to, from, propertyKey) {
  var metaKeys = propertyKey ? Reflect.getOwnMetadataKeys(from, propertyKey) : Reflect.getOwnMetadataKeys(from);
  metaKeys.forEach(function (metaKey) {
    var metadata = propertyKey ? Reflect.getOwnMetadata(metaKey, from, propertyKey) : Reflect.getOwnMetadata(metaKey, from);

    if (propertyKey) {
      Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
    } else {
      Reflect.defineMetadata(metaKey, metadata, to);
    }
  });
}

var fakeArray = {
  __proto__: []
};
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
  return function (target, key, index) {
    var Ctor = typeof target === 'function' ? target : target.constructor;

    if (!Ctor.__decorators__) {
      Ctor.__decorators__ = [];
    }

    if (typeof index !== 'number') {
      index = undefined;
    }

    Ctor.__decorators__.push(function (options) {
      return factory(options, key, index);
    });
  };
}
function mixins() {
  for (var _len = arguments.length, Ctors = new Array(_len), _key = 0; _key < _len; _key++) {
    Ctors[_key] = arguments[_key];
  }

  return external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
    mixins: Ctors
  });
}
function isPrimitive(value) {
  var type = vue_class_component_esm_typeof(value);

  return value == null || type !== 'object' && type !== 'function';
}
function warn(message) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-class-component] ' + message);
  }
}

function collectDataFromConstructor(vm, Component) {
  // override _init to prevent to init as Vue instance
  var originalInit = Component.prototype._init;

  Component.prototype._init = function () {
    var _this = this;

    // proxy to actual vm
    var keys = Object.getOwnPropertyNames(vm); // 2.2.0 compat (props are no longer exposed as self properties)

    if (vm.$options.props) {
      for (var key in vm.$options.props) {
        if (!vm.hasOwnProperty(key)) {
          keys.push(key);
        }
      }
    }

    keys.forEach(function (key) {
      Object.defineProperty(_this, key, {
        get: function get() {
          return vm[key];
        },
        set: function set(value) {
          vm[key] = value;
        },
        configurable: true
      });
    });
  }; // should be acquired class property values


  var data = new Component(); // restore original _init to avoid memory leak (#209)

  Component.prototype._init = originalInit; // create plain data object

  var plainData = {};
  Object.keys(data).forEach(function (key) {
    if (data[key] !== undefined) {
      plainData[key] = data[key];
    }
  });

  if (false) {}

  return plainData;
}

var $internalHooks = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeDestroy', 'destroyed', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch' // 2.6
];
function componentFactory(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options.name = options.name || Component._componentTag || Component.name; // prototype props.

  var proto = Component.prototype;
  Object.getOwnPropertyNames(proto).forEach(function (key) {
    if (key === 'constructor') {
      return;
    } // hooks


    if ($internalHooks.indexOf(key) > -1) {
      options[key] = proto[key];
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(proto, key);

    if (descriptor.value !== void 0) {
      // methods
      if (typeof descriptor.value === 'function') {
        (options.methods || (options.methods = {}))[key] = descriptor.value;
      } else {
        // typescript decorated data
        (options.mixins || (options.mixins = [])).push({
          data: function data() {
            return _defineProperty({}, key, descriptor.value);
          }
        });
      }
    } else if (descriptor.get || descriptor.set) {
      // computed properties
      (options.computed || (options.computed = {}))[key] = {
        get: descriptor.get,
        set: descriptor.set
      };
    }
  });
  (options.mixins || (options.mixins = [])).push({
    data: function data() {
      return collectDataFromConstructor(this, Component);
    }
  }); // decorate options

  var decorators = Component.__decorators__;

  if (decorators) {
    decorators.forEach(function (fn) {
      return fn(options);
    });
    delete Component.__decorators__;
  } // find super


  var superProto = Object.getPrototypeOf(Component.prototype);
  var Super = superProto instanceof external_commonjs_vue_commonjs2_vue_root_Vue_default.a ? superProto.constructor : external_commonjs_vue_commonjs2_vue_root_Vue_default.a;
  var Extended = Super.extend(options);
  forwardStaticMembers(Extended, Component, Super);

  if (reflectionIsSupported()) {
    copyReflectionMetadata(Extended, Component);
  }

  return Extended;
}
var reservedPropertyNames = [// Unique id
'cid', // Super Vue constructor
'super', // Component options that will be used by the component
'options', 'superOptions', 'extendOptions', 'sealedOptions', // Private assets
'component', 'directive', 'filter'];
var shouldIgnore = {
  prototype: true,
  arguments: true,
  callee: true,
  caller: true
};

function forwardStaticMembers(Extended, Original, Super) {
  // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
  Object.getOwnPropertyNames(Original).forEach(function (key) {
    // Skip the properties that should not be overwritten
    if (shouldIgnore[key]) {
      return;
    } // Some browsers does not allow reconfigure built-in properties


    var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);

    if (extendedDescriptor && !extendedDescriptor.configurable) {
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(Original, key); // If the user agent does not support `__proto__` or its family (IE <= 10),
    // the sub class properties may be inherited properties from the super class in TypeScript.
    // We need to exclude such properties to prevent to overwrite
    // the component options object which stored on the extended constructor (See #192).
    // If the value is a referenced value (object or function),
    // we can check equality of them and exclude it if they have the same reference.
    // If it is a primitive value, it will be forwarded for safety.

    if (!hasProto) {
      // Only `cid` is explicitly exluded from property forwarding
      // because we cannot detect whether it is a inherited property or not
      // on the no `__proto__` environment even though the property is reserved.
      if (key === 'cid') {
        return;
      }

      var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);

      if (!isPrimitive(descriptor.value) && superDescriptor && superDescriptor.value === descriptor.value) {
        return;
      }
    } // Warn if the users manually declare reserved properties


    if (false) {}

    Object.defineProperty(Extended, key, descriptor);
  });
}

function vue_class_component_esm_Component(options) {
  if (typeof options === 'function') {
    return componentFactory(options);
  }

  return function (Component) {
    return componentFactory(Component, options);
  };
}

vue_class_component_esm_Component.registerHooks = function registerHooks(keys) {
  $internalHooks.push.apply($internalHooks, _toConsumableArray(keys));
};

/* harmony default export */ var vue_class_component_esm = (vue_class_component_esm_Component);


// CONCATENATED MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js
/** vue-property-decorator verson 8.5.1 MIT LICENSE copyright 2020 kaorun343 */
/// <reference types='reflect-metadata'/>




/** Used for keying reactive provide/inject properties */
var reactiveInjectKey = '__reactiveInject__';
/**
 * decorator of an inject
 * @param from key
 * @return PropertyDecorator
 */
function Inject(options) {
    return createDecorator(function (componentOptions, key) {
        if (typeof componentOptions.inject === 'undefined') {
            componentOptions.inject = {};
        }
        if (!Array.isArray(componentOptions.inject)) {
            componentOptions.inject[key] = options || key;
        }
    });
}
/**
 * decorator of a reactive inject
 * @param from key
 * @return PropertyDecorator
 */
function InjectReactive(options) {
    return createDecorator(function (componentOptions, key) {
        if (typeof componentOptions.inject === 'undefined') {
            componentOptions.inject = {};
        }
        if (!Array.isArray(componentOptions.inject)) {
            var fromKey_1 = !!options ? options.from || options : key;
            var defaultVal_1 = (!!options && options.default) || undefined;
            if (!componentOptions.computed)
                componentOptions.computed = {};
            componentOptions.computed[key] = function () {
                var obj = this[reactiveInjectKey];
                return obj ? obj[fromKey_1] : defaultVal_1;
            };
            componentOptions.inject[reactiveInjectKey] = reactiveInjectKey;
        }
    });
}
function produceProvide(original) {
    var provide = function () {
        var _this = this;
        var rv = typeof original === 'function' ? original.call(this) : original;
        rv = Object.create(rv || null);
        // set reactive services (propagates previous services if necessary)
        rv[reactiveInjectKey] = this[reactiveInjectKey] || {};
        for (var i in provide.managed) {
            rv[provide.managed[i]] = this[i];
        }
        var _loop_1 = function (i) {
            rv[provide.managedReactive[i]] = this_1[i]; // Duplicates the behavior of `@Provide`
            Object.defineProperty(rv[reactiveInjectKey], provide.managedReactive[i], {
                enumerable: true,
                get: function () { return _this[i]; },
            });
        };
        var this_1 = this;
        for (var i in provide.managedReactive) {
            _loop_1(i);
        }
        return rv;
    };
    provide.managed = {};
    provide.managedReactive = {};
    return provide;
}
function needToProduceProvide(original) {
    return (typeof original !== 'function' ||
        (!original.managed && !original.managedReactive));
}
/**
 * decorator of a provide
 * @param key key
 * @return PropertyDecorator | void
 */
function Provide(key) {
    return createDecorator(function (componentOptions, k) {
        var provide = componentOptions.provide;
        if (needToProduceProvide(provide)) {
            provide = componentOptions.provide = produceProvide(provide);
        }
        provide.managed[k] = key || k;
    });
}
/**
 * decorator of a reactive provide
 * @param key key
 * @return PropertyDecorator | void
 */
function ProvideReactive(key) {
    return createDecorator(function (componentOptions, k) {
        var provide = componentOptions.provide;
        // inject parent reactive services (if any)
        if (!Array.isArray(componentOptions.inject)) {
            componentOptions.inject = componentOptions.inject || {};
            componentOptions.inject[reactiveInjectKey] = {
                from: reactiveInjectKey,
                default: {},
            };
        }
        if (needToProduceProvide(provide)) {
            provide = componentOptions.provide = produceProvide(provide);
        }
        provide.managedReactive[k] = key || k;
    });
}
/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) &&
            typeof options !== 'function' &&
            typeof options.type === 'undefined') {
            var type = Reflect.getMetadata('design:type', target, key);
            if (type !== Object) {
                options.type = type;
            }
        }
    }
}
/**
 * decorator of model
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function Model(event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
            componentOptions.model = { prop: k, event: event || k };
        })(target, key);
    };
}
/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}
/**
 * decorator of a synced prop
 * @param propName the name to interface with from outside, must be different from decorated property
 * @param options the options for the synced prop
 * @return PropertyDecorator | void
 */
function PropSync(propName, options) {
    if (options === void 0) { options = {}; }
    // @ts-ignore
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[propName] = options;
            (componentOptions.computed || (componentOptions.computed = {}))[k] = {
                get: function () {
                    return this[propName];
                },
                set: function (value) {
                    // @ts-ignore
                    this.$emit("update:" + propName, value);
                },
            };
        })(target, key);
    };
}
/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return createDecorator(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}
// Code copied from Vue/src/shared/util.js
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function (str) { return str.replace(hyphenateRE, '-$1').toLowerCase(); };
/**
 * decorator of an event-emitter function
 * @param  event The name of the event
 * @return MethodDecorator
 */
function Emit(event) {
    return function (_target, propertyKey, descriptor) {
        var key = hyphenate(propertyKey);
        var original = descriptor.value;
        descriptor.value = function emitter() {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var emit = function (returnValue) {
                var emitName = event || key;
                if (returnValue === undefined) {
                    if (args.length === 0) {
                        _this.$emit(emitName);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, [emitName].concat(args));
                    }
                }
                else {
                    if (args.length === 0) {
                        _this.$emit(emitName, returnValue);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, returnValue, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, [emitName, returnValue].concat(args));
                    }
                }
            };
            var returnValue = original.apply(this, args);
            if (isPromise(returnValue)) {
                returnValue.then(emit);
            }
            else {
                emit(returnValue);
            }
            return returnValue;
        };
    };
}
/**
 * decorator of a ref prop
 * @param refKey the ref key defined in template
 */
function Ref(refKey) {
    return createDecorator(function (options, key) {
        options.computed = options.computed || {};
        options.computed[key] = {
            cache: false,
            get: function () {
                return this.$refs[refKey || key];
            },
        };
    });
}
function isPromise(obj) {
    return obj instanceof Promise || (obj && typeof obj.then === 'function');
}

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=script&lang=ts&






var Appvue_type_script_lang_ts_App = /*#__PURE__*/function (_Vue) {
  _inherits(App, _Vue);

  var _super = _createSuper(App);

  function App() {
    _classCallCheck(this, App);

    return _super.apply(this, arguments);
  }

  return App;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

__decorate([Prop()], Appvue_type_script_lang_ts_App.prototype, "templates", void 0);

Appvue_type_script_lang_ts_App = __decorate([vue_class_component_esm], Appvue_type_script_lang_ts_App);
/* harmony default export */ var Appvue_type_script_lang_ts_ = (Appvue_type_script_lang_ts_App);
// CONCATENATED MODULE: ./src/App.vue?vue&type=script&lang=ts&
 /* harmony default export */ var src_Appvue_type_script_lang_ts_ = (Appvue_type_script_lang_ts_); 
// EXTERNAL MODULE: ./src/App.vue?vue&type=style&index=0&lang=scss&
var Appvue_type_style_index_0_lang_scss_ = __webpack_require__("5c0b");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/App.vue






/* normalize component */

var component = normalizeComponent(
  src_Appvue_type_script_lang_ts_,
  Appvue_type_template_id_5825fbb0_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_App = (component.exports);
// CONCATENATED MODULE: ./node_modules/vue-router/dist/vue-router.esm.js
/*!
  * vue-router v3.4.9
  * (c) 2020 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function vue_router_esm_warn (condition, message) {
  if (false) {}
}

function extend (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function (str) { return encodeURIComponent(str)
    .replace(encodeReserveRE, encodeReserveReplacer)
    .replace(commaRE, ','); };

function decode (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    if (false) {}
  }
  return str
}

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
     false && false;
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    var value = extraQuery[key];
    parsedQuery[key] = Array.isArray(value)
      ? value.map(castQueryParamValue)
      : castQueryParamValue(value);
  }
  return parsedQuery
}

var castQueryParamValue = function (value) { return (value == null || typeof value === 'object' ? value : String(value)); };

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0 ? decode(parts.join('=')) : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj
    ? Object.keys(obj)
      .map(function (key) {
        var val = obj[key];

        if (val === undefined) {
          return ''
        }

        if (val === null) {
          return encode(key)
        }

        if (Array.isArray(val)) {
          var result = [];
          val.forEach(function (val2) {
            if (val2 === undefined) {
              return
            }
            if (val2 === null) {
              result.push(encode(key));
            } else {
              result.push(encode(key) + '=' + encode(val2));
            }
          });
          return result.join('&')
        }

        return encode(key) + '=' + encode(val)
      })
      .filter(function (x) { return x.length > 0; })
      .join('&')
    : null;
  return res ? ("?" + res) : ''
}

/*  */

var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery = router && router.options.stringifyQuery;

  var query = location.query || {};
  try {
    query = clone(query);
  } catch (e) {}

  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: query,
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery);
  }
  return Object.freeze(route)
}

function clone (value) {
  if (Array.isArray(value)) {
    return value.map(clone)
  } else if (value && typeof value === 'object') {
    var res = {};
    for (var key in value) {
      res[key] = clone(value[key]);
    }
    return res
  } else {
    return value
  }
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return (
      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query)
    )
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params)
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  // handle null value #1566
  if (!a || !b) { return a === b }
  var aKeys = Object.keys(a).sort();
  var bKeys = Object.keys(b).sort();
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key, i) {
    var aVal = a[key];
    var bKey = bKeys[i];
    if (bKey !== key) { return false }
    var bVal = b[key];
    // query values can be null and undefined
    if (aVal == null || bVal == null) { return aVal === bVal }
    // check nested equality
    if (typeof aVal === 'object' && typeof bVal === 'object') {
      return isObjectEqual(aVal, bVal)
    }
    return String(aVal) === String(bVal)
  })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

function handleRouteEntered (route) {
  for (var i = 0; i < route.matched.length; i++) {
    var record = route.matched[i];
    for (var name in record.instances) {
      var instance = record.instances[name];
      var cbs = record.enteredCbs[name];
      if (!instance || !cbs) { continue }
      delete record.enteredCbs[name];
      for (var i$1 = 0; i$1 < cbs.length; i$1++) {
        if (!instance._isBeingDestroyed) { cbs[i$1](instance); }
      }
    }
  }
}

var View = {
  name: 'RouterView',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    // used by devtools to display a router-view badge
    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent && parent._routerRoot !== parent) {
      var vnodeData = parent.$vnode ? parent.$vnode.data : {};
      if (vnodeData.routerView) {
        depth++;
      }
      if (vnodeData.keepAlive && parent._directInactive && parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      var cachedData = cache[name];
      var cachedComponent = cachedData && cachedData.component;
      if (cachedComponent) {
        // #2301
        // pass props
        if (cachedData.configProps) {
          fillPropsinData(cachedComponent, data, cachedData.route, cachedData.configProps);
        }
        return h(cachedComponent, data, children)
      } else {
        // render previous empty view
        return h()
      }
    }

    var matched = route.matched[depth];
    var component = matched && matched.components[name];

    // render empty node if no matched route or no config component
    if (!matched || !component) {
      cache[name] = null;
      return h()
    }

    // cache component
    cache[name] = { component: component };

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      var current = matched.instances[name];
      if (
        (val && current !== vm) ||
        (!val && current === vm)
      ) {
        matched.instances[name] = val;
      }
    }

    // also register instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // register instance in init hook
    // in case kept-alive component be actived when routes changed
    data.hook.init = function (vnode) {
      if (vnode.data.keepAlive &&
        vnode.componentInstance &&
        vnode.componentInstance !== matched.instances[name]
      ) {
        matched.instances[name] = vnode.componentInstance;
      }

      // if the route transition has already been confirmed then we weren't
      // able to call the cbs during confirmation as the component was not
      // registered yet, so we call it here.
      handleRouteEntered(route);
    };

    var configProps = matched.props && matched.props[name];
    // save route and configProps in cache
    if (configProps) {
      extend(cache[name], {
        route: route,
        configProps: configProps
      });
      fillPropsinData(component, data, route, configProps);
    }

    return h(component, data, children)
  }
};

function fillPropsinData (component, data, route, configProps) {
  // resolve props
  var propsToPass = data.props = resolveProps(route, configProps);
  if (propsToPass) {
    // clone to prevent mutation
    propsToPass = data.props = extend({}, propsToPass);
    // pass non-declared props as attrs
    var attrs = data.attrs = data.attrs || {};
    for (var key in propsToPass) {
      if (!component.props || !(key in component.props)) {
        attrs[key] = propsToPass[key];
        delete propsToPass[key];
      }
    }
  }
}

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (false) {}
  }
}

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/\//g, '/')
}

var isarray = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options));
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}
pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

/*  */

// $flow-disable-line
var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  params = params || {};
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = pathToRegexp_1.compile(path));

    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}
    // and fix #3106 so that you can work with location descriptor object having params.pathMatch equal to empty string
    if (typeof params.pathMatch === 'string') { params[0] = params.pathMatch; }

    return filler(params, { pretty: true })
  } catch (e) {
    if (false) {}
    return ''
  } finally {
    // delete the 0 if it was added
    delete params[0];
  }
}

/*  */

function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next._normalized) {
    return next
  } else if (next.name) {
    next = extend({}, raw);
    var params = next.params;
    if (params && typeof params === 'object') {
      next.params = extend({}, params);
    }
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = extend({}, next);
    next._normalized = true;
    var params$1 = extend(extend({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params$1;
    } else if (current.matched.length) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params$1, ("path " + (current.path)));
    } else if (false) {}
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var noop = function () {};

var Link = {
  name: 'RouterLink',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    exact: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    ariaCurrentValue: {
      type: String,
      default: 'page'
    },
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(
      this.to,
      current,
      this.append
    );
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback =
      globalActiveClass == null ? 'router-link-active' : globalActiveClass;
    var exactActiveClassFallback =
      globalExactActiveClass == null
        ? 'router-link-exact-active'
        : globalExactActiveClass;
    var activeClass =
      this.activeClass == null ? activeClassFallback : this.activeClass;
    var exactActiveClass =
      this.exactActiveClass == null
        ? exactActiveClassFallback
        : this.exactActiveClass;

    var compareTarget = route.redirectedFrom
      ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget);
    classes[activeClass] = this.exact
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var ariaCurrentValue = classes[exactActiveClass] ? this.ariaCurrentValue : null;

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1.replace) {
          router.replace(location, noop);
        } else {
          router.push(location, noop);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) {
        on[e] = handler;
      });
    } else {
      on[this.event] = handler;
    }

    var data = { class: classes };

    var scopedSlot =
      !this.$scopedSlots.$hasNormal &&
      this.$scopedSlots.default &&
      this.$scopedSlots.default({
        href: href,
        route: route,
        navigate: handler,
        isActive: classes[activeClass],
        isExactActive: classes[exactActiveClass]
      });

    if (scopedSlot) {
      if (scopedSlot.length === 1) {
        return scopedSlot[0]
      } else if (scopedSlot.length > 1 || !scopedSlot.length) {
        if (false) {}
        return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)
      }
    }

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href, 'aria-current': ariaCurrentValue };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var aData = (a.data = extend({}, a.data));
        aData.on = aData.on || {};
        // transform existing events in both objects into arrays so we can push later
        for (var event in aData.on) {
          var handler$1 = aData.on[event];
          if (event in on) {
            aData.on[event] = Array.isArray(handler$1) ? handler$1 : [handler$1];
          }
        }
        // append new listeners for router-link
        for (var event$1 in on) {
          if (event$1 in aData.on) {
            // on[event] is always a function
            aData.on[event$1].push(on[event$1]);
          } else {
            aData.on[event$1] = handler;
          }
        }

        var aAttrs = (a.data.attrs = extend({}, a.data.attrs));
        aAttrs.href = href;
        aAttrs['aria-current'] = ariaCurrentValue;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var vue_router_esm_Vue;

function install (Vue) {
  if (install.installed && vue_router_esm_Vue === Vue) { return }
  install.installed = true;

  vue_router_esm_Vue = Vue;

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._routerRoot = this;
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      } else {
        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this._routerRoot._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this._routerRoot._route }
  });

  Vue.component('RouterView', View);
  Vue.component('RouterLink', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  // $flow-disable-line
  var pathMap = oldPathMap || Object.create(null);
  // $flow-disable-line
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  if (false) { var pathNames, found; }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (false) {}

  var pathToRegexpOptions =
    route.pathToRegexpOptions || {};
  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);

  if (typeof route.caseSensitive === 'boolean') {
    pathToRegexpOptions.sensitive = route.caseSensitive;
  }

  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
    components: route.components || { default: route.component },
    instances: {},
    enteredCbs: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props:
      route.props == null
        ? {}
        : route.components
          ? route.props
          : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named, does not redirect and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (false) {}
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (route.alias !== undefined) {
    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];
    for (var i = 0; i < aliases.length; ++i) {
      var alias = aliases[i];
      if (false) {}

      var aliasRoute = {
        path: alias,
        children: route.children
      };
      addRouteRecord(
        pathList,
        pathMap,
        nameMap,
        aliasRoute,
        parent,
        record.path || '/' // matchAs
      );
    }
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if (false) {}
  }
}

function compileRouteRegex (
  path,
  pathToRegexpOptions
) {
  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);
  if (false) { var keys; }
  return regex
}

function normalizePath (
  path,
  parent,
  strict
) {
  if (!strict) { path = path.replace(/\/$/, ''); }
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */



function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (false) {}
      if (!record) { return _createRoute(null, location) }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
      return _createRoute(record, location, redirectedFrom)
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
      ? originalRedirect(createRoute(record, location, null, router))
      : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (false) {}
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (false) {}
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (false) {}
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    if (key) {
      // Fix #1994: using * with props: true generates a param named 0
      params[key.name || 'pathMatch'] = typeof m[i] === 'string' ? decode(m[i]) : m[i];
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */

// use User Timing api (if present) for more accurate key precision
var Time =
  inBrowser && window.performance && window.performance.now
    ? window.performance
    : Date;

function genStateKey () {
  return Time.now().toFixed(3)
}

var vue_router_esm_key = genStateKey();

function getStateKey () {
  return vue_router_esm_key
}

function setStateKey (key) {
  return (vue_router_esm_key = key)
}

/*  */

var positionStore = Object.create(null);

function setupScroll () {
  // Prevent browser scroll behavior on History popstate
  if ('scrollRestoration' in window.history) {
    window.history.scrollRestoration = 'manual';
  }
  // Fix for #1585 for Firefox
  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678
  // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with
  // window.location.protocol + '//' + window.location.host
  // location.host contains the port and location.hostname doesn't
  var protocolAndPath = window.location.protocol + '//' + window.location.host;
  var absolutePath = window.location.href.replace(protocolAndPath, '');
  // preserve existing history state as it could be overriden by the user
  var stateCopy = extend({}, window.history.state);
  stateCopy.key = getStateKey();
  window.history.replaceState(stateCopy, '', absolutePath);
  window.addEventListener('popstate', handlePopState);
  return function () {
    window.removeEventListener('popstate', handlePopState);
  }
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (false) {}

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior.call(
      router,
      to,
      from,
      isPop ? position : null
    );

    if (!shouldScroll) {
      return
    }

    if (typeof shouldScroll.then === 'function') {
      shouldScroll
        .then(function (shouldScroll) {
          scrollToPosition((shouldScroll), position);
        })
        .catch(function (err) {
          if (false) {}
        });
    } else {
      scrollToPosition(shouldScroll, position);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function handlePopState (e) {
  saveScrollPosition();
  if (e.state && e.state.key) {
    setStateKey(e.state.key);
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el, offset) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left - offset.x,
    y: elRect.top - docRect.top - offset.y
  }
}

function isValidPosition (obj) {
  return isNumber(obj.x) || isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function normalizeOffset (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : 0,
    y: isNumber(obj.y) ? obj.y : 0
  }
}

function isNumber (v) {
  return typeof v === 'number'
}

var hashStartsWithNumberRE = /^#\d/;

function scrollToPosition (shouldScroll, position) {
  var isObject = typeof shouldScroll === 'object';
  if (isObject && typeof shouldScroll.selector === 'string') {
    // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]
    // but at the same time, it doesn't make much sense to select an element with an id and an extra selector
    var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line
      ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line
      : document.querySelector(shouldScroll.selector);

    if (el) {
      var offset =
        shouldScroll.offset && typeof shouldScroll.offset === 'object'
          ? shouldScroll.offset
          : {};
      offset = normalizeOffset(offset);
      position = getElementPosition(el, offset);
    } else if (isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }
  } else if (isObject && isValidPosition(shouldScroll)) {
    position = normalizePosition(shouldScroll);
  }

  if (position) {
    // $flow-disable-line
    if ('scrollBehavior' in document.documentElement.style) {
      window.scrollTo({
        left: position.x,
        top: position.y,
        // $flow-disable-line
        behavior: shouldScroll.behavior
      });
    } else {
      window.scrollTo(position.x, position.y);
    }
  }
}

/*  */

var supportsPushState =
  inBrowser &&
  (function () {
    var ua = window.navigator.userAgent;

    if (
      (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
      ua.indexOf('Mobile Safari') !== -1 &&
      ua.indexOf('Chrome') === -1 &&
      ua.indexOf('Windows Phone') === -1
    ) {
      return false
    }

    return window.history && typeof window.history.pushState === 'function'
  })();

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      // preserve existing history state as it could be overriden by the user
      var stateCopy = extend({}, history.state);
      stateCopy.key = getStateKey();
      history.replaceState(stateCopy, '', url);
    } else {
      history.pushState({ key: setStateKey(genStateKey()) }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

// When changing thing, also edit router.d.ts
var NavigationFailureType = {
  redirected: 2,
  aborted: 4,
  cancelled: 8,
  duplicated: 16
};

function createNavigationRedirectedError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.redirected,
    ("Redirected when going from \"" + (from.fullPath) + "\" to \"" + (stringifyRoute(
      to
    )) + "\" via a navigation guard.")
  )
}

function createNavigationDuplicatedError (from, to) {
  var error = createRouterError(
    from,
    to,
    NavigationFailureType.duplicated,
    ("Avoided redundant navigation to current location: \"" + (from.fullPath) + "\".")
  );
  // backwards compatible with the first introduction of Errors
  error.name = 'NavigationDuplicated';
  return error
}

function createNavigationCancelledError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.cancelled,
    ("Navigation cancelled from \"" + (from.fullPath) + "\" to \"" + (to.fullPath) + "\" with a new navigation.")
  )
}

function createNavigationAbortedError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.aborted,
    ("Navigation aborted from \"" + (from.fullPath) + "\" to \"" + (to.fullPath) + "\" via a navigation guard.")
  )
}

function createRouterError (from, to, type, message) {
  var error = new Error(message);
  error._isRouter = true;
  error.from = from;
  error.to = to;
  error.type = type;

  return error
}

var propertiesToLog = ['params', 'query', 'hash'];

function stringifyRoute (to) {
  if (typeof to === 'string') { return to }
  if ('path' in to) { return to.path }
  var location = {};
  propertiesToLog.forEach(function (key) {
    if (key in to) { location[key] = to[key]; }
  });
  return JSON.stringify(location, null, 2)
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

function isNavigationFailure (err, errorType) {
  return (
    isError(err) &&
    err._isRouter &&
    (errorType == null || err.type === errorType)
  )
}

/*  */

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          if (isESModule(resolvedDef)) {
            resolvedDef = resolvedDef.default;
          }
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : vue_router_esm_Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
           false && false;
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

var hasSymbol =
  typeof Symbol === 'function' &&
  typeof Symbol.toStringTag === 'symbol';

function isESModule (obj) {
  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    if (called) { return }
    called = true;
    return fn.apply(this, args)
  }
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
  this.listeners = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (
  location,
  onComplete,
  onAbort
) {
    var this$1 = this;

  var route;
  // catch redirect option https://github.com/vuejs/vue-router/issues/3201
  try {
    route = this.router.match(location, this.current);
  } catch (e) {
    this.errorCbs.forEach(function (cb) {
      cb(e);
    });
    // Exception should still be thrown
    throw e
  }
  var prev = this.current;
  this.confirmTransition(
    route,
    function () {
      this$1.updateRoute(route);
      onComplete && onComplete(route);
      this$1.ensureURL();
      this$1.router.afterHooks.forEach(function (hook) {
        hook && hook(route, prev);
      });

      // fire ready cbs once
      if (!this$1.ready) {
        this$1.ready = true;
        this$1.readyCbs.forEach(function (cb) {
          cb(route);
        });
      }
    },
    function (err) {
      if (onAbort) {
        onAbort(err);
      }
      if (err && !this$1.ready) {
        // Initial redirection should not mark the history as ready yet
        // because it's triggered by the redirection instead
        // https://github.com/vuejs/vue-router/issues/3225
        // https://github.com/vuejs/vue-router/issues/3331
        if (!isNavigationFailure(err, NavigationFailureType.redirected) || prev !== START) {
          this$1.ready = true;
          this$1.readyErrorCbs.forEach(function (cb) {
            cb(err);
          });
        }
      }
    }
  );
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1 = this;

  var current = this.current;
  this.pending = route;
  var abort = function (err) {
    // changed after adding errors with
    // https://github.com/vuejs/vue-router/pull/3047 before that change,
    // redirect and aborted navigation would produce an err == null
    if (!isNavigationFailure(err) && isError(err)) {
      if (this$1.errorCbs.length) {
        this$1.errorCbs.forEach(function (cb) {
          cb(err);
        });
      } else {
        vue_router_esm_warn(false, 'uncaught error during route navigation:');
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  var lastRouteIndex = route.matched.length - 1;
  var lastCurrentIndex = current.matched.length - 1;
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    lastRouteIndex === lastCurrentIndex &&
    route.matched[lastRouteIndex] === current.matched[lastCurrentIndex]
  ) {
    this.ensureURL();
    return abort(createNavigationDuplicatedError(current, route))
  }

  var ref = resolveQueue(
    this.current.matched,
    route.matched
  );
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  var iterator = function (hook, next) {
    if (this$1.pending !== route) {
      return abort(createNavigationCancelledError(current, route))
    }
    try {
      hook(route, current, function (to) {
        if (to === false) {
          // next(false) -> abort navigation, ensure current URL
          this$1.ensureURL(true);
          abort(createNavigationAbortedError(current, route));
        } else if (isError(to)) {
          this$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' &&
            (typeof to.path === 'string' || typeof to.name === 'string'))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort(createNavigationRedirectedError(current, route));
          if (typeof to === 'object' && to.replace) {
            this$1.replace(to);
          } else {
            this$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated);
    var queue = enterGuards.concat(this$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1.pending !== route) {
        return abort(createNavigationCancelledError(current, route))
      }
      this$1.pending = null;
      onComplete(route);
      if (this$1.router.app) {
        this$1.router.app.$nextTick(function () {
          handleRouteEntered(route);
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  this.current = route;
  this.cb && this.cb(route);
};

History.prototype.setupListeners = function setupListeners () {
  // Default implementation is empty
};

History.prototype.teardown = function teardown () {
  // clean up event listeners
  // https://github.com/vuejs/vue-router/issues/2341
  this.listeners.forEach(function (cleanupListener) {
    cleanupListener();
  });
  this.listeners = [];

  // reset current history route
  // https://github.com/vuejs/vue-router/issues/3294
  this.current = START;
  this.pending = null;
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
      // strip full URL origin
      base = base.replace(/^https?:\/\/[^\/]+/, '');
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = vue_router_esm_Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated
) {
  return extractGuards(
    activated,
    'beforeRouteEnter',
    function (guard, _, match, key) {
      return bindEnterGuard(guard, match, key)
    }
  )
}

function bindEnterGuard (
  guard,
  match,
  key
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      if (typeof cb === 'function') {
        if (!match.enteredCbs[key]) {
          match.enteredCbs[key] = [];
        }
        match.enteredCbs[key].push(cb);
      }
      next(cb);
    })
  }
}

/*  */

var HTML5History = /*@__PURE__*/(function (History) {
  function HTML5History (router, base) {
    History.call(this, router, base);

    this._startLocation = getLocation(this.base);
  }

  if ( History ) HTML5History.__proto__ = History;
  HTML5History.prototype = Object.create( History && History.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    if (this.listeners.length > 0) {
      return
    }

    var router = this.router;
    var expectScroll = router.options.scrollBehavior;
    var supportsScroll = supportsPushState && expectScroll;

    if (supportsScroll) {
      this.listeners.push(setupScroll());
    }

    var handleRoutingEvent = function () {
      var current = this$1.current;

      // Avoiding first `popstate` event dispatched in some browsers but first
      // history route not updated since async guard at the same time.
      var location = getLocation(this$1.base);
      if (this$1.current === START && location === this$1._startLocation) {
        return
      }

      this$1.transitionTo(location, function (route) {
        if (supportsScroll) {
          handleScroll(router, route, current, true);
        }
      });
    };
    window.addEventListener('popstate', handleRoutingEvent);
    this.listeners.push(function () {
      window.removeEventListener('popstate', handleRoutingEvent);
    });
  };

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  if (base && path.toLowerCase().indexOf(base.toLowerCase()) === 0) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */

var HashHistory = /*@__PURE__*/(function (History) {
  function HashHistory (router, base, fallback) {
    History.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History ) HashHistory.__proto__ = History;
  HashHistory.prototype = Object.create( History && History.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    if (this.listeners.length > 0) {
      return
    }

    var router = this.router;
    var expectScroll = router.options.scrollBehavior;
    var supportsScroll = supportsPushState && expectScroll;

    if (supportsScroll) {
      this.listeners.push(setupScroll());
    }

    var handleRoutingEvent = function () {
      var current = this$1.current;
      if (!ensureSlash()) {
        return
      }
      this$1.transitionTo(getHash(), function (route) {
        if (supportsScroll) {
          handleScroll(this$1.router, route, current, true);
        }
        if (!supportsPushState) {
          replaceHash(route.fullPath);
        }
      });
    };
    var eventType = supportsPushState ? 'popstate' : 'hashchange';
    window.addEventListener(
      eventType,
      handleRoutingEvent
    );
    this.listeners.push(function () {
      window.removeEventListener(eventType, handleRoutingEvent);
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(
      location,
      function (route) {
        pushHash(route.fullPath);
        handleScroll(this$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(
      location,
      function (route) {
        replaceHash(route.fullPath);
        handleScroll(this$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(cleanPath(base + '/#' + location));
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  // empty path
  if (index < 0) { return '' }

  href = href.slice(index + 1);

  return href
}

function getUrl (path) {
  var href = window.location.href;
  var i = href.indexOf('#');
  var base = i >= 0 ? href.slice(0, i) : href;
  return (base + "#" + path)
}

function pushHash (path) {
  if (supportsPushState) {
    pushState(getUrl(path));
  } else {
    window.location.hash = path;
  }
}

function replaceHash (path) {
  if (supportsPushState) {
    replaceState(getUrl(path));
  } else {
    window.location.replace(getUrl(path));
  }
}

/*  */

var AbstractHistory = /*@__PURE__*/(function (History) {
  function AbstractHistory (router, base) {
    History.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History ) AbstractHistory.__proto__ = History;
  AbstractHistory.prototype = Object.create( History && History.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(
      location,
      function (route) {
        this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
        this$1.index++;
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(
      location,
      function (route) {
        this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(
      route,
      function () {
        var prev = this$1.current;
        this$1.index = targetIndex;
        this$1.updateRoute(route);
        this$1.router.afterHooks.forEach(function (hook) {
          hook && hook(route, prev);
        });
      },
      function (err) {
        if (isNavigationFailure(err, NavigationFailureType.duplicated)) {
          this$1.index = targetIndex;
        }
      }
    );
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */

var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback =
    mode === 'history' && !supportsPushState && options.fallback !== false;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (false) {}
  }
};

var prototypeAccessors = { currentRoute: { configurable: true } };

VueRouter.prototype.match = function match (raw, current, redirectedFrom) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1 = this;

   false &&
    false;

  this.apps.push(app);

  // set up app destroyed handler
  // https://github.com/vuejs/vue-router/issues/2639
  app.$once('hook:destroyed', function () {
    // clean out app from this.apps array once destroyed
    var index = this$1.apps.indexOf(app);
    if (index > -1) { this$1.apps.splice(index, 1); }
    // ensure we still have a main app or null if no apps
    // we do not release the router so it can be reused
    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }

    if (!this$1.app) { this$1.history.teardown(); }
  });

  // main app previously initialized
  // return as we don't need to set up new history listener
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History || history instanceof HashHistory) {
    var handleInitialScroll = function (routeOrError) {
      var from = history.current;
      var expectScroll = this$1.options.scrollBehavior;
      var supportsScroll = supportsPushState && expectScroll;

      if (supportsScroll && 'fullPath' in routeOrError) {
        handleScroll(this$1, routeOrError, from, false);
      }
    };
    var setupListeners = function (routeOrError) {
      history.setupListeners();
      handleInitialScroll(routeOrError);
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupListeners,
      setupListeners
    );
  }

  history.listen(function (route) {
    this$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

  // $flow-disable-line
  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
    return new Promise(function (resolve, reject) {
      this$1.history.push(location, resolve, reject);
    })
  } else {
    this.history.push(location, onComplete, onAbort);
  }
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

  // $flow-disable-line
  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
    return new Promise(function (resolve, reject) {
      this$1.history.replace(location, resolve, reject);
    })
  } else {
    this.history.replace(location, onComplete, onAbort);
  }
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? to.matched
      ? to
      : this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply(
    [],
    route.matched.map(function (m) {
      return Object.keys(m.components).map(function (key) {
        return m.components[key]
      })
    })
  )
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  current = current || this.history.current;
  var location = normalizeLocation(to, current, append, this);
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

VueRouter.install = install;
VueRouter.version = '3.4.9';
VueRouter.isNavigationFailure = isNavigationFailure;
VueRouter.NavigationFailureType = NavigationFailureType;

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

/* harmony default export */ var vue_router_esm = (VueRouter);

// CONCATENATED MODULE: ./src/router/Index.ts



external_commonjs_vue_commonjs2_vue_root_Vue_default.a.use(vue_router_esm);
var routes = [{
  path: '/',
  name: 'Builder Template',
  component: src_App
}];
var router = new vue_router_esm({
  mode: 'history',
  base: "/production/",
  routes: routes
});
/* harmony default export */ var Index = (router);
// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js
var vuex_esm = __webpack_require__("2f62");

// CONCATENATED MODULE: ./src/store/Index.ts


external_commonjs_vue_commonjs2_vue_root_Vue_default.a.use(vuex_esm["a" /* default */]);
/* harmony default export */ var store_Index = (new vuex_esm["a" /* default */].Store({
  state: {},
  mutations: {},
  actions: {},
  modules: {}
}));
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function defineProperty_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js









function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        defineProperty_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Circle.vue?vue&type=template&id=c1972c1a&
var Circlevue_type_template_id_c1972c1a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Circlevue_type_template_id_c1972c1a_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Circle.vue?vue&type=template&id=c1972c1a&

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ./src/core/Base.ts




var Base_Base = /*#__PURE__*/function (_Vue) {
  _inherits(Base, _Vue);

  var _super = _createSuper(Base);

  function Base() {
    _classCallCheck(this, Base);

    return _super.apply(this, arguments);
  }

  return Base;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);
// EXTERNAL MODULE: ./node_modules/lodash/lodash.js
var lodash = __webpack_require__("2ef0");

// CONCATENATED MODULE: ./src/utils/lodash.ts

var lodash_get = function _get(object, path, def) {
  return Object(lodash["get"])(object, path, def);
};
var lodash_map = function _map(object, funn) {
  return Object(lodash["map"])(object, funn);
};
var lodash_isEqual = function _isEqual(value, other) {
  return Object(lodash["isEqual"])(value, other);
};
var lodash_isEmpty = function _isEmpty(object) {
  return Object(lodash["isEmpty"])(object);
};
var lodash_isUndefined = function _isUndefined(value) {
  return Object(lodash["isUndefined"])(value);
};
// CONCATENATED MODULE: ./src/core/BaseComponent.ts









var BaseComponent_BaseComponent = /*#__PURE__*/function (_Base) {
  _inherits(BaseComponent, _Base);

  var _super = _createSuper(BaseComponent);

  function BaseComponent() {
    _classCallCheck(this, BaseComponent);

    return _super.apply(this, arguments);
  }

  _createClass(BaseComponent, [{
    key: "onInput",
    value: function onInput(value) {
      this.$emit('change', value);
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(newValue, oldValue) {
      if (!lodash_isEqual(newValue, oldValue)) {
        this.$emit('input', newValue);
      }
    }
  }]);

  return BaseComponent;
}(Base_Base);

__decorate([Prop(String)], BaseComponent_BaseComponent.prototype, "name", void 0);

__decorate([Prop(String)], BaseComponent_BaseComponent.prototype, "label", void 0);

__decorate([Prop(String)], BaseComponent_BaseComponent.prototype, "placeholder", void 0);

__decorate([Prop(String)], BaseComponent_BaseComponent.prototype, "icon", void 0);

__decorate([Prop()], BaseComponent_BaseComponent.prototype, "value", void 0);

__decorate([Prop(Array)], BaseComponent_BaseComponent.prototype, "options", void 0);

__decorate([Prop(Boolean)], BaseComponent_BaseComponent.prototype, "disabled", void 0);

__decorate([Prop(Array)], BaseComponent_BaseComponent.prototype, "rules", void 0);

__decorate([Prop(Array)], BaseComponent_BaseComponent.prototype, "flexbox", void 0);

__decorate([Watch('value', {
  deep: true
})], BaseComponent_BaseComponent.prototype, "onValueChange", null);

BaseComponent_BaseComponent = __decorate([vue_class_component_esm], BaseComponent_BaseComponent);
/* harmony default export */ var core_BaseComponent = (BaseComponent_BaseComponent);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Circle.vue?vue&type=script&lang=ts&







var Circlevue_type_script_lang_ts_CircleButtonComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(CircleButtonComponent, _BaseComponent);

  var _super = _createSuper(CircleButtonComponent);

  function CircleButtonComponent() {
    _classCallCheck(this, CircleButtonComponent);

    return _super.apply(this, arguments);
  }

  return CircleButtonComponent;
}(core_BaseComponent);

Circlevue_type_script_lang_ts_CircleButtonComponent = __decorate([vue_class_component_esm], Circlevue_type_script_lang_ts_CircleButtonComponent);
/* harmony default export */ var Circlevue_type_script_lang_ts_ = (Circlevue_type_script_lang_ts_CircleButtonComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Circle.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Circlevue_type_script_lang_ts_ = (Circlevue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Circle.vue





/* normalize component */

var Circle_component = normalizeComponent(
  buttons_Circlevue_type_script_lang_ts_,
  Circlevue_type_template_id_c1972c1a_render,
  Circlevue_type_template_id_c1972c1a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Circle = (Circle_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Square.vue?vue&type=template&id=3f8319da&
var Squarevue_type_template_id_3f8319da_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Squarevue_type_template_id_3f8319da_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Square.vue?vue&type=template&id=3f8319da&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Square.vue?vue&type=script&lang=ts&







var Squarevue_type_script_lang_ts_ButtonSquareComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(ButtonSquareComponent, _BaseComponent);

  var _super = _createSuper(ButtonSquareComponent);

  function ButtonSquareComponent() {
    _classCallCheck(this, ButtonSquareComponent);

    return _super.apply(this, arguments);
  }

  return ButtonSquareComponent;
}(core_BaseComponent);

Squarevue_type_script_lang_ts_ButtonSquareComponent = __decorate([vue_class_component_esm], Squarevue_type_script_lang_ts_ButtonSquareComponent);
/* harmony default export */ var Squarevue_type_script_lang_ts_ = (Squarevue_type_script_lang_ts_ButtonSquareComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Square.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Squarevue_type_script_lang_ts_ = (Squarevue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Square.vue





/* normalize component */

var Square_component = normalizeComponent(
  buttons_Squarevue_type_script_lang_ts_,
  Squarevue_type_template_id_3f8319da_render,
  Squarevue_type_template_id_3f8319da_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Square = (Square_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Text.vue?vue&type=template&id=46e2d5da&
var Textvue_type_template_id_46e2d5da_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Textvue_type_template_id_46e2d5da_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Text.vue?vue&type=template&id=46e2d5da&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Text.vue?vue&type=script&lang=ts&







var Textvue_type_script_lang_ts_ButtonTextComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(ButtonTextComponent, _BaseComponent);

  var _super = _createSuper(ButtonTextComponent);

  function ButtonTextComponent() {
    _classCallCheck(this, ButtonTextComponent);

    return _super.apply(this, arguments);
  }

  return ButtonTextComponent;
}(core_BaseComponent);

Textvue_type_script_lang_ts_ButtonTextComponent = __decorate([vue_class_component_esm], Textvue_type_script_lang_ts_ButtonTextComponent);
/* harmony default export */ var Textvue_type_script_lang_ts_ = (Textvue_type_script_lang_ts_ButtonTextComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Text.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Textvue_type_script_lang_ts_ = (Textvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Text.vue





/* normalize component */

var Text_component = normalizeComponent(
  buttons_Textvue_type_script_lang_ts_,
  Textvue_type_template_id_46e2d5da_render,
  Textvue_type_template_id_46e2d5da_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Text = (Text_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Main.vue?vue&type=template&id=04da1753&
var Mainvue_type_template_id_04da1753_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Mainvue_type_template_id_04da1753_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Main.vue?vue&type=template&id=04da1753&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Main.vue?vue&type=script&lang=ts&







var Mainvue_type_script_lang_ts_MainButtonComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(MainButtonComponent, _BaseComponent);

  var _super = _createSuper(MainButtonComponent);

  function MainButtonComponent() {
    _classCallCheck(this, MainButtonComponent);

    return _super.apply(this, arguments);
  }

  return MainButtonComponent;
}(core_BaseComponent);

Mainvue_type_script_lang_ts_MainButtonComponent = __decorate([vue_class_component_esm], Mainvue_type_script_lang_ts_MainButtonComponent);
/* harmony default export */ var Mainvue_type_script_lang_ts_ = (Mainvue_type_script_lang_ts_MainButtonComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Main.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Mainvue_type_script_lang_ts_ = (Mainvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Main.vue





/* normalize component */

var Main_component = normalizeComponent(
  buttons_Mainvue_type_script_lang_ts_,
  Mainvue_type_template_id_04da1753_render,
  Mainvue_type_template_id_04da1753_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Main = (Main_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Menu.vue?vue&type=template&id=691f4613&
var Menuvue_type_template_id_691f4613_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Menuvue_type_template_id_691f4613_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Menu.vue?vue&type=template&id=691f4613&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Menu.vue?vue&type=script&lang=ts&







var Menuvue_type_script_lang_ts_MenuButtonComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(MenuButtonComponent, _BaseComponent);

  var _super = _createSuper(MenuButtonComponent);

  function MenuButtonComponent() {
    _classCallCheck(this, MenuButtonComponent);

    return _super.apply(this, arguments);
  }

  return MenuButtonComponent;
}(core_BaseComponent);

Menuvue_type_script_lang_ts_MenuButtonComponent = __decorate([vue_class_component_esm], Menuvue_type_script_lang_ts_MenuButtonComponent);
/* harmony default export */ var Menuvue_type_script_lang_ts_ = (Menuvue_type_script_lang_ts_MenuButtonComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Menu.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Menuvue_type_script_lang_ts_ = (Menuvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Menu.vue





/* normalize component */

var Menu_component = normalizeComponent(
  buttons_Menuvue_type_script_lang_ts_,
  Menuvue_type_template_id_691f4613_render,
  Menuvue_type_template_id_691f4613_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Menu = (Menu_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Group.vue?vue&type=template&id=4c8baa3f&
var Groupvue_type_template_id_4c8baa3f_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Groupvue_type_template_id_4c8baa3f_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/buttons/Group.vue?vue&type=template&id=4c8baa3f&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/buttons/Group.vue?vue&type=script&lang=ts&







var Groupvue_type_script_lang_ts_ButtonGroupComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(ButtonGroupComponent, _BaseComponent);

  var _super = _createSuper(ButtonGroupComponent);

  function ButtonGroupComponent() {
    _classCallCheck(this, ButtonGroupComponent);

    return _super.apply(this, arguments);
  }

  return ButtonGroupComponent;
}(core_BaseComponent);

Groupvue_type_script_lang_ts_ButtonGroupComponent = __decorate([vue_class_component_esm], Groupvue_type_script_lang_ts_ButtonGroupComponent);
/* harmony default export */ var Groupvue_type_script_lang_ts_ = (Groupvue_type_script_lang_ts_ButtonGroupComponent);
// CONCATENATED MODULE: ./src/components/base/buttons/Group.vue?vue&type=script&lang=ts&
 /* harmony default export */ var buttons_Groupvue_type_script_lang_ts_ = (Groupvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/buttons/Group.vue





/* normalize component */

var Group_component = normalizeComponent(
  buttons_Groupvue_type_script_lang_ts_,
  Groupvue_type_template_id_4c8baa3f_render,
  Groupvue_type_template_id_4c8baa3f_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Group = (Group_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Box.vue?vue&type=template&id=b87c0cf2&
var Boxvue_type_template_id_b87c0cf2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Boxvue_type_template_id_b87c0cf2_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/Box.vue?vue&type=template&id=b87c0cf2&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Box.vue?vue&type=script&lang=ts&







var Boxvue_type_script_lang_ts_BoxComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(BoxComponent, _BaseComponent);

  var _super = _createSuper(BoxComponent);

  function BoxComponent() {
    _classCallCheck(this, BoxComponent);

    return _super.apply(this, arguments);
  }

  return BoxComponent;
}(core_BaseComponent);

Boxvue_type_script_lang_ts_BoxComponent = __decorate([vue_class_component_esm], Boxvue_type_script_lang_ts_BoxComponent);
/* harmony default export */ var Boxvue_type_script_lang_ts_ = (Boxvue_type_script_lang_ts_BoxComponent);
// CONCATENATED MODULE: ./src/components/base/Box.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_Boxvue_type_script_lang_ts_ = (Boxvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/Box.vue





/* normalize component */

var Box_component = normalizeComponent(
  base_Boxvue_type_script_lang_ts_,
  Boxvue_type_template_id_b87c0cf2_render,
  Boxvue_type_template_id_b87c0cf2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Box = (Box_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/ColorPicker.vue?vue&type=template&id=642e890a&
var ColorPickervue_type_template_id_642e890a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var ColorPickervue_type_template_id_642e890a_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/ColorPicker.vue?vue&type=template&id=642e890a&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/ColorPicker.vue?vue&type=script&lang=ts&







var ColorPickervue_type_script_lang_ts_ColorPickerComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(ColorPickerComponent, _BaseComponent);

  var _super = _createSuper(ColorPickerComponent);

  function ColorPickerComponent() {
    _classCallCheck(this, ColorPickerComponent);

    return _super.apply(this, arguments);
  }

  return ColorPickerComponent;
}(core_BaseComponent);

ColorPickervue_type_script_lang_ts_ColorPickerComponent = __decorate([vue_class_component_esm], ColorPickervue_type_script_lang_ts_ColorPickerComponent);
/* harmony default export */ var ColorPickervue_type_script_lang_ts_ = (ColorPickervue_type_script_lang_ts_ColorPickerComponent);
// CONCATENATED MODULE: ./src/components/base/ColorPicker.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_ColorPickervue_type_script_lang_ts_ = (ColorPickervue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/ColorPicker.vue





/* normalize component */

var ColorPicker_component = normalizeComponent(
  base_ColorPickervue_type_script_lang_ts_,
  ColorPickervue_type_template_id_642e890a_render,
  ColorPickervue_type_template_id_642e890a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ColorPicker = (ColorPicker_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Dropdown.vue?vue&type=template&id=746cfb57&
var Dropdownvue_type_template_id_746cfb57_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Dropdownvue_type_template_id_746cfb57_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/Dropdown.vue?vue&type=template&id=746cfb57&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Dropdown.vue?vue&type=script&lang=ts&







var Dropdownvue_type_script_lang_ts_DropdownComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(DropdownComponent, _BaseComponent);

  var _super = _createSuper(DropdownComponent);

  function DropdownComponent() {
    _classCallCheck(this, DropdownComponent);

    return _super.apply(this, arguments);
  }

  return DropdownComponent;
}(core_BaseComponent);

Dropdownvue_type_script_lang_ts_DropdownComponent = __decorate([vue_class_component_esm], Dropdownvue_type_script_lang_ts_DropdownComponent);
/* harmony default export */ var Dropdownvue_type_script_lang_ts_ = (Dropdownvue_type_script_lang_ts_DropdownComponent);
// CONCATENATED MODULE: ./src/components/base/Dropdown.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_Dropdownvue_type_script_lang_ts_ = (Dropdownvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/Dropdown.vue





/* normalize component */

var Dropdown_component = normalizeComponent(
  base_Dropdownvue_type_script_lang_ts_,
  Dropdownvue_type_template_id_746cfb57_render,
  Dropdownvue_type_template_id_746cfb57_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Dropdown = (Dropdown_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Input.vue?vue&type=template&id=ddafdf6e&
var Inputvue_type_template_id_ddafdf6e_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Inputvue_type_template_id_ddafdf6e_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/Input.vue?vue&type=template&id=ddafdf6e&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Input.vue?vue&type=script&lang=ts&







var Inputvue_type_script_lang_ts_InputComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(InputComponent, _BaseComponent);

  var _super = _createSuper(InputComponent);

  function InputComponent() {
    _classCallCheck(this, InputComponent);

    return _super.apply(this, arguments);
  }

  return InputComponent;
}(core_BaseComponent);

Inputvue_type_script_lang_ts_InputComponent = __decorate([vue_class_component_esm], Inputvue_type_script_lang_ts_InputComponent);
/* harmony default export */ var Inputvue_type_script_lang_ts_ = (Inputvue_type_script_lang_ts_InputComponent);
// CONCATENATED MODULE: ./src/components/base/Input.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_Inputvue_type_script_lang_ts_ = (Inputvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/Input.vue





/* normalize component */

var Input_component = normalizeComponent(
  base_Inputvue_type_script_lang_ts_,
  Inputvue_type_template_id_ddafdf6e_render,
  Inputvue_type_template_id_ddafdf6e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Input = (Input_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Modal.vue?vue&type=template&id=4630217a&
var Modalvue_type_template_id_4630217a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Modalvue_type_template_id_4630217a_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/Modal.vue?vue&type=template&id=4630217a&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Modal.vue?vue&type=script&lang=ts&







var Modalvue_type_script_lang_ts_ModalComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(ModalComponent, _BaseComponent);

  var _super = _createSuper(ModalComponent);

  function ModalComponent() {
    _classCallCheck(this, ModalComponent);

    return _super.apply(this, arguments);
  }

  return ModalComponent;
}(core_BaseComponent);

Modalvue_type_script_lang_ts_ModalComponent = __decorate([vue_class_component_esm], Modalvue_type_script_lang_ts_ModalComponent);
/* harmony default export */ var Modalvue_type_script_lang_ts_ = (Modalvue_type_script_lang_ts_ModalComponent);
// CONCATENATED MODULE: ./src/components/base/Modal.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_Modalvue_type_script_lang_ts_ = (Modalvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/Modal.vue





/* normalize component */

var Modal_component = normalizeComponent(
  base_Modalvue_type_script_lang_ts_,
  Modalvue_type_template_id_4630217a_render,
  Modalvue_type_template_id_4630217a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Modal = (Modal_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Switch.vue?vue&type=template&id=1c34b312&
var Switchvue_type_template_id_1c34b312_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Switchvue_type_template_id_1c34b312_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/Switch.vue?vue&type=template&id=1c34b312&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/Switch.vue?vue&type=script&lang=ts&







var Switchvue_type_script_lang_ts_SwitchComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(SwitchComponent, _BaseComponent);

  var _super = _createSuper(SwitchComponent);

  function SwitchComponent() {
    _classCallCheck(this, SwitchComponent);

    return _super.apply(this, arguments);
  }

  return SwitchComponent;
}(core_BaseComponent);

Switchvue_type_script_lang_ts_SwitchComponent = __decorate([vue_class_component_esm], Switchvue_type_script_lang_ts_SwitchComponent);
/* harmony default export */ var Switchvue_type_script_lang_ts_ = (Switchvue_type_script_lang_ts_SwitchComponent);
// CONCATENATED MODULE: ./src/components/base/Switch.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_Switchvue_type_script_lang_ts_ = (Switchvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/Switch.vue





/* normalize component */

var Switch_component = normalizeComponent(
  base_Switchvue_type_script_lang_ts_,
  Switchvue_type_template_id_1c34b312_render,
  Switchvue_type_template_id_1c34b312_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Switch = (Switch_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/TextPanel.vue?vue&type=template&id=211c6d22&
var TextPanelvue_type_template_id_211c6d22_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var TextPanelvue_type_template_id_211c6d22_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/TextPanel.vue?vue&type=template&id=211c6d22&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/TextPanel.vue?vue&type=script&lang=ts&







var TextPanelvue_type_script_lang_ts_TextPanelComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(TextPanelComponent, _BaseComponent);

  var _super = _createSuper(TextPanelComponent);

  function TextPanelComponent() {
    _classCallCheck(this, TextPanelComponent);

    return _super.apply(this, arguments);
  }

  return TextPanelComponent;
}(core_BaseComponent);

TextPanelvue_type_script_lang_ts_TextPanelComponent = __decorate([vue_class_component_esm], TextPanelvue_type_script_lang_ts_TextPanelComponent);
/* harmony default export */ var TextPanelvue_type_script_lang_ts_ = (TextPanelvue_type_script_lang_ts_TextPanelComponent);
// CONCATENATED MODULE: ./src/components/base/TextPanel.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_TextPanelvue_type_script_lang_ts_ = (TextPanelvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/TextPanel.vue





/* normalize component */

var TextPanel_component = normalizeComponent(
  base_TextPanelvue_type_script_lang_ts_,
  TextPanelvue_type_template_id_211c6d22_render,
  TextPanelvue_type_template_id_211c6d22_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var TextPanel = (TextPanel_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/UploadImage.vue?vue&type=template&id=6e4d4869&
var UploadImagevue_type_template_id_6e4d4869_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var UploadImagevue_type_template_id_6e4d4869_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/UploadImage.vue?vue&type=template&id=6e4d4869&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/UploadImage.vue?vue&type=script&lang=ts&







var UploadImagevue_type_script_lang_ts_UploadImageComponent = /*#__PURE__*/function (_BaseComponent) {
  _inherits(UploadImageComponent, _BaseComponent);

  var _super = _createSuper(UploadImageComponent);

  function UploadImageComponent() {
    _classCallCheck(this, UploadImageComponent);

    return _super.apply(this, arguments);
  }

  return UploadImageComponent;
}(core_BaseComponent);

UploadImagevue_type_script_lang_ts_UploadImageComponent = __decorate([vue_class_component_esm], UploadImagevue_type_script_lang_ts_UploadImageComponent);
/* harmony default export */ var UploadImagevue_type_script_lang_ts_ = (UploadImagevue_type_script_lang_ts_UploadImageComponent);
// CONCATENATED MODULE: ./src/components/base/UploadImage.vue?vue&type=script&lang=ts&
 /* harmony default export */ var base_UploadImagevue_type_script_lang_ts_ = (UploadImagevue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/components/base/UploadImage.vue





/* normalize component */

var UploadImage_component = normalizeComponent(
  base_UploadImagevue_type_script_lang_ts_,
  UploadImagevue_type_template_id_6e4d4869_render,
  UploadImagevue_type_template_id_6e4d4869_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var UploadImage = (UploadImage_component.exports);
// CONCATENATED MODULE: ./src/plugins/components/Base.ts














var BaseComponents = {
  CircleButtonComponent: Circle,
  SquareButtonComponent: Square,
  TextButtonComponent: Text,
  MainButtonComponent: Main,
  MenuButtonComponent: Menu,
  ButtonGroupComponent: Group,
  BoxComponent: Box,
  ColorPickerComponent: ColorPicker,
  DropdownComponent: Dropdown,
  InputComponent: Input,
  ModalComponent: Modal,
  SwitchComponent: Switch,
  TextPanelComponent: TextPanel,
  UploadImageComponent: UploadImage
};
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Box.vue?vue&type=template&id=7b9d8b66&
var Boxvue_type_template_id_7b9d8b66_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Boxvue_type_template_id_7b9d8b66_staticRenderFns = []


// CONCATENATED MODULE: ./src/pages/Box.vue?vue&type=template&id=7b9d8b66&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Box.vue?vue&type=script&lang=ts&






var Boxvue_type_script_lang_ts_BoxPage = /*#__PURE__*/function (_Vue) {
  _inherits(BoxPage, _Vue);

  var _super = _createSuper(BoxPage);

  function BoxPage() {
    _classCallCheck(this, BoxPage);

    return _super.apply(this, arguments);
  }

  return BoxPage;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

Boxvue_type_script_lang_ts_BoxPage = __decorate([vue_class_component_esm], Boxvue_type_script_lang_ts_BoxPage);
/* harmony default export */ var pages_Boxvue_type_script_lang_ts_ = (Boxvue_type_script_lang_ts_BoxPage);
// CONCATENATED MODULE: ./src/pages/Box.vue?vue&type=script&lang=ts&
 /* harmony default export */ var src_pages_Boxvue_type_script_lang_ts_ = (pages_Boxvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/pages/Box.vue





/* normalize component */

var pages_Box_component = normalizeComponent(
  src_pages_Boxvue_type_script_lang_ts_,
  Boxvue_type_template_id_7b9d8b66_render,
  Boxvue_type_template_id_7b9d8b66_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var pages_Box = (pages_Box_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Button.vue?vue&type=template&id=2977c414&
var Buttonvue_type_template_id_2977c414_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Buttonvue_type_template_id_2977c414_staticRenderFns = []


// CONCATENATED MODULE: ./src/pages/Button.vue?vue&type=template&id=2977c414&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Button.vue?vue&type=script&lang=ts&






var Buttonvue_type_script_lang_ts_ButtonPage = /*#__PURE__*/function (_Vue) {
  _inherits(ButtonPage, _Vue);

  var _super = _createSuper(ButtonPage);

  function ButtonPage() {
    _classCallCheck(this, ButtonPage);

    return _super.apply(this, arguments);
  }

  return ButtonPage;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

Buttonvue_type_script_lang_ts_ButtonPage = __decorate([vue_class_component_esm], Buttonvue_type_script_lang_ts_ButtonPage);
/* harmony default export */ var Buttonvue_type_script_lang_ts_ = (Buttonvue_type_script_lang_ts_ButtonPage);
// CONCATENATED MODULE: ./src/pages/Button.vue?vue&type=script&lang=ts&
 /* harmony default export */ var pages_Buttonvue_type_script_lang_ts_ = (Buttonvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/pages/Button.vue





/* normalize component */

var Button_component = normalizeComponent(
  pages_Buttonvue_type_script_lang_ts_,
  Buttonvue_type_template_id_2977c414_render,
  Buttonvue_type_template_id_2977c414_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Button = (Button_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Image.vue?vue&type=template&id=88a3f0b4&
var Imagevue_type_template_id_88a3f0b4_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Imagevue_type_template_id_88a3f0b4_staticRenderFns = []


// CONCATENATED MODULE: ./src/pages/Image.vue?vue&type=template&id=88a3f0b4&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Image.vue?vue&type=script&lang=ts&






var Imagevue_type_script_lang_ts_ImagePage = /*#__PURE__*/function (_Vue) {
  _inherits(ImagePage, _Vue);

  var _super = _createSuper(ImagePage);

  function ImagePage() {
    _classCallCheck(this, ImagePage);

    return _super.apply(this, arguments);
  }

  return ImagePage;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

Imagevue_type_script_lang_ts_ImagePage = __decorate([vue_class_component_esm], Imagevue_type_script_lang_ts_ImagePage);
/* harmony default export */ var Imagevue_type_script_lang_ts_ = (Imagevue_type_script_lang_ts_ImagePage);
// CONCATENATED MODULE: ./src/pages/Image.vue?vue&type=script&lang=ts&
 /* harmony default export */ var pages_Imagevue_type_script_lang_ts_ = (Imagevue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/pages/Image.vue





/* normalize component */

var Image_component = normalizeComponent(
  pages_Imagevue_type_script_lang_ts_,
  Imagevue_type_template_id_88a3f0b4_render,
  Imagevue_type_template_id_88a3f0b4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Image = (Image_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Spacer.vue?vue&type=template&id=40ee492c&
var Spacervue_type_template_id_40ee492c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Spacervue_type_template_id_40ee492c_staticRenderFns = []


// CONCATENATED MODULE: ./src/pages/Spacer.vue?vue&type=template&id=40ee492c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Spacer.vue?vue&type=script&lang=ts&






var Spacervue_type_script_lang_ts_SpacerPage = /*#__PURE__*/function (_Vue) {
  _inherits(SpacerPage, _Vue);

  var _super = _createSuper(SpacerPage);

  function SpacerPage() {
    _classCallCheck(this, SpacerPage);

    return _super.apply(this, arguments);
  }

  return SpacerPage;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

Spacervue_type_script_lang_ts_SpacerPage = __decorate([vue_class_component_esm], Spacervue_type_script_lang_ts_SpacerPage);
/* harmony default export */ var Spacervue_type_script_lang_ts_ = (Spacervue_type_script_lang_ts_SpacerPage);
// CONCATENATED MODULE: ./src/pages/Spacer.vue?vue&type=script&lang=ts&
 /* harmony default export */ var pages_Spacervue_type_script_lang_ts_ = (Spacervue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/pages/Spacer.vue





/* normalize component */

var Spacer_component = normalizeComponent(
  pages_Spacervue_type_script_lang_ts_,
  Spacervue_type_template_id_40ee492c_render,
  Spacervue_type_template_id_40ee492c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Spacer = (Spacer_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4a8965a0-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Text.vue?vue&type=template&id=f38ab628&
var Textvue_type_template_id_f38ab628_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}
var Textvue_type_template_id_f38ab628_staticRenderFns = []


// CONCATENATED MODULE: ./src/pages/Text.vue?vue&type=template&id=f38ab628&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Text.vue?vue&type=script&lang=ts&






var Textvue_type_script_lang_ts_TextPage = /*#__PURE__*/function (_Vue) {
  _inherits(TextPage, _Vue);

  var _super = _createSuper(TextPage);

  function TextPage() {
    _classCallCheck(this, TextPage);

    return _super.apply(this, arguments);
  }

  return TextPage;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

Textvue_type_script_lang_ts_TextPage = __decorate([vue_class_component_esm], Textvue_type_script_lang_ts_TextPage);
/* harmony default export */ var pages_Textvue_type_script_lang_ts_ = (Textvue_type_script_lang_ts_TextPage);
// CONCATENATED MODULE: ./src/pages/Text.vue?vue&type=script&lang=ts&
 /* harmony default export */ var src_pages_Textvue_type_script_lang_ts_ = (pages_Textvue_type_script_lang_ts_); 
// CONCATENATED MODULE: ./src/pages/Text.vue





/* normalize component */

var pages_Text_component = normalizeComponent(
  src_pages_Textvue_type_script_lang_ts_,
  Textvue_type_template_id_f38ab628_render,
  Textvue_type_template_id_f38ab628_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var pages_Text = (pages_Text_component.exports);
// CONCATENATED MODULE: ./src/plugins/pages/Base.ts





var BasePages = {
  BoxPage: pages_Box,
  ButtonPage: Button,
  ImagePage: Image,
  SpacerPage: Spacer,
  TextPage: pages_Text
};
// CONCATENATED MODULE: ./src/plugins/Index.ts









var Components = _objectSpread2(_objectSpread2({
  App: src_App
}, BaseComponents), BasePages);

Object.keys(Components).forEach(function (name) {
  external_commonjs_vue_commonjs2_vue_root_Vue_default.a.component(name, Components[name]);
});
// EXTERNAL MODULE: ./node_modules/@mdi/font/css/materialdesignicons.css
var materialdesignicons = __webpack_require__("5363");

// CONCATENATED MODULE: ./src/main.ts






external_commonjs_vue_commonjs2_vue_root_Vue_default.a.config.productionTip = false;
new external_commonjs_vue_commonjs2_vue_root_Vue_default.a({
  router: Index,
  store: store_Index,
  render: function render(h) {
    return h(src_App);
  }
}).$mount('#app');
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib-no-default.js




/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ })

/******/ });
});
//# sourceMappingURL=builder.umd.js.map